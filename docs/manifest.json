{"metadata": {"dbt_schema_version": "https://schemas.getdbt.com/dbt/manifest/v3.json", "dbt_version": "0.21.0", "generated_at": "2021-11-23T19:40:36.710823Z", "invocation_id": "54111016-e005-4528-bc43-6918d632089f", "env": {}, "project_id": "483116bd7c4552087a2382ca92a688fb", "user_id": "3beec8a3-4842-413b-bb8c-1633190e5874", "send_anonymous_usage_stats": true, "adapter_type": "postgres"}, "nodes": {"model.cecoc.tuneladora": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['tuneladora_key'], 'type': 'hash'}\n    ]\n) }}\n\nselect\n\n      {{ dbt_utils.surrogate_key([\n       'modelo'\n         ]) }}::varchar(32) as tuneladora_key\n    , project as nombre_proyecto\n    , tuneladora as nombre_tuneladora\n    , fabricante\n    , tipo as tipo_tuneladora\n    , modelo\n    , a\u00f1o_ejecucion_inicio\n    , a\u00f1o_ejecucion_fin\n    , diametro_excavacion\n    , longitud_acumulada\n    , tipo_obra::varchar(5) as tipo_obra\n\nfrom {{ source('tuneladora','tuneladoras_metadata_raw') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.tuneladora.tuneladoras_metadata_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["tuneladora_key"], "type": "hash"}], "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "tuneladora"], "unique_id": "model.cecoc.tuneladora", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "tuneladora.sql", "original_file_path": "models/tuneladora.sql", "name": "tuneladora", "alias": "tuneladora", "checksum": {"name": "sha256", "checksum": "f84bd6b8b5816bf0aa401b5a933fcea25524c1943c8168062c543eff61930f9e"}, "tags": [], "refs": [], "sources": [["tuneladora", "tuneladoras_metadata_raw"]], "description": "Informaci\u00f3n t\u00e9cnica sobre las tuneladoras", "columns": {"tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_proyecto": {"name": "nombre_proyecto", "description": "Proyecto en el que se ha empleado la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_tuneladora": {"name": "nombre_tuneladora", "description": "Nombre de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fabricante": {"name": "fabricante", "description": "Fabricante de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_tuneladora": {"name": "tipo_tuneladora", "description": "Tipo de tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "modelo": {"name": "modelo", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "a\u00f1o_ejecucion_inicio": {"name": "a\u00f1o_ejecucion_inicio", "description": "A\u00f1o en el que se utiliz\u00f3 la tuneladora por primera vez", "meta": {}, "data_type": null, "quote": null, "tags": []}, "a\u00f1o_ejecucion_fin": {"name": "a\u00f1o_ejecucion_fin", "description": "A\u00f1o en el que se utiliz\u00f3 la tuneladora por \u00faltima vez", "meta": {}, "data_type": null, "quote": null, "tags": []}, "diametro_excavacion": {"name": "diametro_excavacion", "description": "Di\u00e1metro excavado por la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "longitud_acumulada": {"name": "longitud_acumulada", "description": "Longitud acumulada excavada por la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_obra": {"name": "tipo_obra", "description": "Tipo de obra en el que se puede emplear la tuneladora (suelo o roca)", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/tuneladora.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["tuneladora_key"], "type": "hash"}]}, "created_at": 1637696439, "compiled_sql": "\n\nselect\n\n      md5(cast(coalesce(cast(modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n    , project as nombre_proyecto\n    , tuneladora as nombre_tuneladora\n    , fabricante\n    , tipo as tipo_tuneladora\n    , modelo\n    , a\u00f1o_ejecucion_inicio\n    , a\u00f1o_ejecucion_fin\n    , diametro_excavacion\n    , longitud_acumulada\n    , tipo_obra::varchar(5) as tipo_obra\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"tuneladoras_metadata_raw\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"tuneladora\""}, "model.cecoc.geologia_suelo": {"raw_sql": "{{ config(\n    materialized='table'\n) }}\n\nselect\n\n      -- Claves subrogadas\n      {{ dbt_utils.surrogate_key([\n        '\"Litologia_Principal\"',\n        '\"Litologia_Secundaria\"'\n         ]) }}::varchar(32) as litologia_key\n    , {{ dbt_utils.surrogate_key(\n       ['modelo']\n         ) }}::varchar(32) as tuneladora_key\n\n     -- Fact fields\n    , pk\n    , anillo_g as anillo\n    , \"RCS\" as rcs\n    , \"E\" as e\n    , \u03c1\n    , \"PHI\" as phi\n    , \"C\" as c\n\nfrom {{ source('geologia','geologia_quito_raw') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.geologia.geologia_quito_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "geologia", "geologia_suelo"], "unique_id": "model.cecoc.geologia_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "geologia/geologia_suelo.sql", "original_file_path": "models/geologia/geologia_suelo.sql", "name": "geologia_suelo", "alias": "geologia_suelo", "checksum": {"name": "sha256", "checksum": "a1bdd259ae157ec406987fdf1dba7966b50432be27971b37d5f82f00e7d4871a"}, "tags": [], "refs": [], "sources": [["geologia", "geologia_quito_raw"]], "description": "Par\u00e1metros geol\u00f3gicos de las tuneladoras emppleadas en proyectos de suelo", "columns": {"litologia_key": {"name": "litologia_key", "description": "Clave subrogada para cruzar con la tabla \"litolog\u00eda\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk": {"name": "pk", "description": "Punto kilom\u00e9trico", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rcs": {"name": "rcs", "description": "Resistencia a compresi\u00f3n simple de la roca [Mpa]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "e": {"name": "e", "description": "M\u00f3dulo de deformaci\u00f3n de la roca [Mpa]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "\u03c1": {"name": "\u03c1", "description": "Densidad espec\u00edfica suelo [T/m3]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "phi": {"name": "phi", "description": "\u00c1ngulo de fricci\u00f3n [\u00ba]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "c": {"name": "c", "description": "Cohesi\u00f3n efectiva del terreno [Mpa]", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/geologia/geologia_suelo.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696439, "compiled_sql": "\n\nselect\n\n      -- Claves subrogadas\n      md5(cast(coalesce(cast(\"Litologia_Principal\" as \n    varchar\n), '') || '-' || coalesce(cast(\"Litologia_Secundaria\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as litologia_key\n    , md5(cast(coalesce(cast(modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n     -- Fact fields\n    , pk\n    , anillo_g as anillo\n    , \"RCS\" as rcs\n    , \"E\" as e\n    , \u03c1\n    , \"PHI\" as phi\n    , \"C\" as c\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_quito_raw\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_suelo\""}, "model.cecoc.litologia": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['litologia_key'], 'type': 'hash'}\n    ]\n) }}\n\nselect\n\n      {{ dbt_utils.surrogate_key([\n       '\"Litolog\u00eda Principal\"',\n       '\"Litolog\u00eda Secundaria\"'\n         ]) }}::varchar(32) as litologia_key\n    , \"Litolog\u00eda Principal\" as litologia_principal\n    , \"Litolog\u00eda Secundaria\" as litologia_secundaria\n    , \"Descripcion\" as descripcion\n    , \"Color\" as color\n\nfrom {{ source('geologia','geologia_colores_raw') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.geologia.geologia_colores_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["litologia_key"], "type": "hash"}], "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "geologia", "litologia"], "unique_id": "model.cecoc.litologia", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "geologia/litologia.sql", "original_file_path": "models/geologia/litologia.sql", "name": "litologia", "alias": "litologia", "checksum": {"name": "sha256", "checksum": "4f0dfc5f76173a0de6ff77febde806e194291502344ba8bfc8db9e00950c3a24"}, "tags": [], "refs": [], "sources": [["geologia", "geologia_colores_raw"]], "description": "Informaci\u00f3n sobre las posibles parejas de litolog\u00edas existentes y sus respectivos colores", "columns": {"litologia_key": {"name": "litologia_key", "description": "Clave subrogada para cruzar con la tabla \"litolog\u00eda\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "litologia_principal": {"name": "litologia_principal", "description": "Litolog\u00eda principal", "meta": {}, "data_type": null, "quote": null, "tags": []}, "litologia_secundaria": {"name": "litologia_secundaria", "description": "Litolog\u00eda secundaria", "meta": {}, "data_type": null, "quote": null, "tags": []}, "descripcion": {"name": "descripcion", "description": "Informaci\u00f3n adicional sobre las parejas de litolog\u00edas", "meta": {}, "data_type": null, "quote": null, "tags": []}, "color": {"name": "color", "description": "Color correspondiente a cada pareja de litolog\u00edas", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/geologia/litologia.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["litologia_key"], "type": "hash"}]}, "created_at": 1637696439, "compiled_sql": "\n\nselect\n\n      md5(cast(coalesce(cast(\"Litolog\u00eda Principal\" as \n    varchar\n), '') || '-' || coalesce(cast(\"Litolog\u00eda Secundaria\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as litologia_key\n    , \"Litolog\u00eda Principal\" as litologia_principal\n    , \"Litolog\u00eda Secundaria\" as litologia_secundaria\n    , \"Descripcion\" as descripcion\n    , \"Color\" as color\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_colores_raw\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\""}, "model.cecoc.geologia": {"raw_sql": "select\n\n     *\n\nfrom {{ ref('geologia_suelo') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.geologia_suelo"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "geologia", "geologia"], "unique_id": "model.cecoc.geologia", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "geologia/geologia.sql", "original_file_path": "models/geologia/geologia.sql", "name": "geologia", "alias": "geologia", "checksum": {"name": "sha256", "checksum": "aebc7f7fe2d648a67b80f1290afeaf3923e6ccff9e29278b89e4ba4bc9fe83e3"}, "tags": [], "refs": [["geologia_suelo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/geologia/geologia.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "view"}, "created_at": 1637696439, "compiled_sql": "select\n\n     *\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_suelo\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\""}, "model.cecoc.sensor_roca_s980": {"raw_sql": "{{ config(\n    materialized='table'\n) }}\n\n{{ union_all_sensor([\n    ('fl980_folloline_ringresult_raw', 'S980', 'roca'),\n    ('fl980_1_folloline_ringresult_raw', 'S980', 'roca'),\n    ('fl980_2_folloline_ringresult_raw', 'S980', 'roca'),\n    ('fl980_3_folloline_ringresult_raw', 'S980', 'roca')\n   ])\n}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.union_all_sensor"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "sensor", "sensor_roca_s980"], "unique_id": "model.cecoc.sensor_roca_s980", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "sensor/sensor_roca_s980.sql", "original_file_path": "models/sensor/sensor_roca_s980.sql", "name": "sensor_roca_s980", "alias": "sensor_roca_s980", "checksum": {"name": "sha256", "checksum": "42020a0ae78d9dbf7afd0f36a3e7da0836bdec2120e7b82abae5bc9225d6e160"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/sensor/sensor_roca_s980.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\n\n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S980' as macro_modelo\n       from cecoc.fl980_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S980' as macro_modelo\n       from cecoc.fl980_1_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S980' as macro_modelo\n       from cecoc.fl980_2_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S980' as macro_modelo\n       from cecoc.fl980_3_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_roca_s980\""}, "model.cecoc.sensor_diccionario": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['sensor_diccionario_key'], 'type': 'hash'},\n    {'columns':['id_sensor'], 'type': 'btree'}\n    ]\n) }}\n\nselect\n\n      -- Claves subrogadas\n      {{ dbt_utils.surrogate_key([\n        '\"Id\"'\n         ]) }}::varchar(32) as sensor_diccionario_key\n\n     -- Fact fields\n    , \"Id\" as id_sensor\n\t, \"SensorGroupId\" as id_grupo_sensor\n\t, \"ShortItem\" as nombre_sensor\n\t, \"Scale\" as escala\n\t, \"MinValue\" as valor_minimo\n\t, \"MaxValue\" as valor_maximo\n\t, \"Precision\" as precision\n\t, \"Unit\" as unidad\n\t, \"SensorType\" as tipo_sensor\n\t, \"SensorValueType\" as tipo_valor_sensor\n\nfrom {{ source('sensor','dict_sensores_raw') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.sensor.dict_sensores_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["sensor_diccionario_key"], "type": "hash"}, {"columns": ["id_sensor"], "type": "btree"}], "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "sensor", "sensor_diccionario"], "unique_id": "model.cecoc.sensor_diccionario", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "sensor/sensor_diccionario.sql", "original_file_path": "models/sensor/sensor_diccionario.sql", "name": "sensor_diccionario", "alias": "sensor_diccionario", "checksum": {"name": "sha256", "checksum": "4da6f5dc2b9b8a82a1a07e708f270be63021268d403003aed494df6a9e36086c"}, "tags": [], "refs": [], "sources": [["sensor", "dict_sensores_raw"]], "description": "Informaci\u00f3n t\u00e9cnica sobre los sensores", "columns": {"sensor_diccionario_key": {"name": "sensor_diccionario_key", "description": "Clave subrogada para cruzar con la tabla \"sensor_diccionario\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_sensor": {"name": "id_sensor", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_grupo_sensor": {"name": "id_grupo_sensor", "description": "Id del grupo de sensores", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_sensor": {"name": "nombre_sensor", "description": "Nombre del sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "escala": {"name": "escala", "description": "Escala", "meta": {}, "data_type": null, "quote": true, "tags": []}, "valor_minimo": {"name": "valor_minimo", "description": "Valor m\u00ednimo del sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_maximo": {"name": "valor_maximo", "description": "Valor m\u00e1ximo del sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "precision": {"name": "precision", "description": "Precisi\u00f3n del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "unidad": {"name": "unidad", "description": "Unidad", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_sensor": {"name": "tipo_sensor", "description": "Tipo de sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_valor_sensor": {"name": "tipo_valor_sensor", "description": "Tipo de valor del sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/sensor/sensor_diccionario.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["sensor_diccionario_key"], "type": "hash"}, {"columns": ["id_sensor"], "type": "btree"}]}, "created_at": 1637696439, "compiled_sql": "\n\nselect\n\n      -- Claves subrogadas\n      md5(cast(coalesce(cast(\"Id\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n\n     -- Fact fields\n    , \"Id\" as id_sensor\n\t, \"SensorGroupId\" as id_grupo_sensor\n\t, \"ShortItem\" as nombre_sensor\n\t, \"Scale\" as escala\n\t, \"MinValue\" as valor_minimo\n\t, \"MaxValue\" as valor_maximo\n\t, \"Precision\" as precision\n\t, \"Unit\" as unidad\n\t, \"SensorType\" as tipo_sensor\n\t, \"SensorValueType\" as tipo_valor_sensor\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dict_sensores_raw\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_diccionario\""}, "model.cecoc.sensor_suelo": {"raw_sql": "{{ config(\n    materialized='table'\n) }}\n\n{{ union_all_sensor([\n    ('s1018_quito_ringresult_raw', 'S1018', 'suelo'),\n    ('s1019_quito_ringresult_raw', 'S1019', 'suelo'),\n    ('s1022_1_quito_ringresult_raw', 'S1022', 'suelo'),\n    ('s1022_2_quito_ringresult_raw', 'S1022', 'suelo'),\n    ('s1022_3_quito_ringresult_raw', 'S1022', 'suelo'),\n   ])\n}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.union_all_sensor"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "sensor", "sensor_suelo"], "unique_id": "model.cecoc.sensor_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "sensor/sensor_suelo.sql", "original_file_path": "models/sensor/sensor_suelo.sql", "name": "sensor_suelo", "alias": "sensor_suelo", "checksum": {"name": "sha256", "checksum": "abedccbd26ef076ef34e027744f4b250adaec6ddba5722aa91b854ece5e5467f"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/sensor/sensor_suelo.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\n\n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S1018' as macro_modelo\n       from cecoc.s1018_quito_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'suelo'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S1019' as macro_modelo\n       from cecoc.s1019_quito_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'suelo'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S1022' as macro_modelo\n       from cecoc.s1022_1_quito_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'suelo'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S1022' as macro_modelo\n       from cecoc.s1022_2_quito_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'suelo'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S1022' as macro_modelo\n       from cecoc.s1022_3_quito_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'suelo'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_suelo\""}, "model.cecoc.sensor_roca_s982_s983": {"raw_sql": "{{ config(\n    materialized='table'\n) }}\n\n{{ union_all_sensor([\n    ('fl_982_folloline_ringresult_raw', 'S982', 'roca'),\n    ('fl983_folloline_ringresult_raw', 'S983', 'roca')\n   ])\n}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.union_all_sensor"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "sensor", "sensor_roca_s982_s983"], "unique_id": "model.cecoc.sensor_roca_s982_s983", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "sensor/sensor_roca_s982_s983.sql", "original_file_path": "models/sensor/sensor_roca_s982_s983.sql", "name": "sensor_roca_s982_s983", "alias": "sensor_roca_s982_s983", "checksum": {"name": "sha256", "checksum": "0bb4a1f3bb06c30d6db45eb1d651b29d1b55013af7c60135ecd6f504cf28d911"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/sensor/sensor_roca_s982_s983.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\n\n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S982' as macro_modelo\n       from cecoc.fl_982_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S983' as macro_modelo\n       from cecoc.fl983_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_roca_s982_s983\""}, "model.cecoc.sensor": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['id_sensor'], 'type': 'btree'}\n    ],\n    post_hook = '''\n    -- workarround: temporary file size exceeds temp_file_limit (1021877kB) && the database system is in recovery mode\n    truncate cecoc.sensor;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s980;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s981;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s982_s983;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_suelo;\n\n    drop table cecoc.sensor_roca_s980;\n    drop table cecoc.sensor_roca_s981;\n    drop table cecoc.sensor_roca_s982_s983;\n    drop table cecoc.sensor_suelo;\n    '''\n) }}\n\n\n(\nselect * from {{ ref('sensor_roca_s980') }}\n    where 1 = 0\n)\nunion all\n(\nselect * from {{ ref('sensor_roca_s981') }}\n    where 1 = 0\n)\nunion all\n(\nselect * from {{ ref('sensor_roca_s982_s983') }}\n    where 1 = 0\n)\nunion all\n(\nselect * from {{ ref('sensor_suelo') }}\n    where 1 = 0\n)", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.sensor_roca_s980", "model.cecoc.sensor_roca_s981", "model.cecoc.sensor_roca_s982_s983", "model.cecoc.sensor_suelo"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["id_sensor"], "type": "btree"}], "post-hook": [{"sql": "\n    -- workarround: temporary file size exceeds temp_file_limit (1021877kB) && the database system is in recovery mode\n    truncate cecoc.sensor;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s980;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s981;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s982_s983;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_suelo;\n\n    drop table cecoc.sensor_roca_s980;\n    drop table cecoc.sensor_roca_s981;\n    drop table cecoc.sensor_roca_s982_s983;\n    drop table cecoc.sensor_suelo;\n    ", "transaction": true, "index": null}], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "sensor", "sensor"], "unique_id": "model.cecoc.sensor", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "sensor/sensor.sql", "original_file_path": "models/sensor/sensor.sql", "name": "sensor", "alias": "sensor", "checksum": {"name": "sha256", "checksum": "1c9b391beb05065d9c32e8a8fa1913a0d3d2377904e0b4433acaae53c96a5fde"}, "tags": [], "refs": [["sensor_roca_s980"], ["sensor_roca_s981"], ["sensor_roca_s982_s983"], ["sensor_suelo"]], "sources": [], "description": "Valores obtenidos por los distintos sensores de las tuneladoras", "columns": {"sensor_diccionario_key": {"name": "sensor_diccionario_key", "description": "Clave subrogada para cruzar con la tabla \"sensor_diccionario\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "id_sensor": {"name": "id_sensor", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_minimo": {"name": "valor_minimo", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_maximo": {"name": "valor_maximo", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_medio": {"name": "valor_medio", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_inicial": {"name": "valor_inicial", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "valor_final": {"name": "valor_final", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "suma_media": {"name": "suma_media", "description": "Suma media", "meta": {}, "data_type": null, "quote": null, "tags": []}, "recuento_medio": {"name": "recuento_medio", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_obra": {"name": "tipo_obra", "description": "Tipo de obra (suelo o roca)", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/sensor/sensor.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["id_sensor"], "type": "btree"}], "post-hook": ["\n    -- workarround: temporary file size exceeds temp_file_limit (1021877kB) && the database system is in recovery mode\n    truncate cecoc.sensor;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s980;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s981;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_roca_s982_s983;\n\n    insert into cecoc.sensor\n    select * from cecoc.sensor_suelo;\n\n    drop table cecoc.sensor_roca_s980;\n    drop table cecoc.sensor_roca_s981;\n    drop table cecoc.sensor_roca_s982_s983;\n    drop table cecoc.sensor_suelo;\n    "]}, "created_at": 1637696439, "compiled_sql": "\n\n\n(\nselect * from \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_roca_s980\"\n    where 1 = 0\n)\nunion all\n(\nselect * from \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_roca_s981\"\n    where 1 = 0\n)\nunion all\n(\nselect * from \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_roca_s982_s983\"\n    where 1 = 0\n)\nunion all\n(\nselect * from \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_suelo\"\n    where 1 = 0\n)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"sensor\""}, "model.cecoc.sensor_roca_s981": {"raw_sql": "{{ config(\n    materialized='table'\n) }}\n\n{{ union_all_sensor([\n    ('fl_981_folloline_ringresult_raw', 'S981', 'roca'),\n    ('fl981_1_folloline_ringresult_raw', 'S981', 'roca'),\n    ('fl981_3_folloline_ringresult_raw', 'S981', 'roca')\n   ])\n}}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.union_all_sensor"], "nodes": []}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "sensor", "sensor_roca_s981"], "unique_id": "model.cecoc.sensor_roca_s981", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "sensor/sensor_roca_s981.sql", "original_file_path": "models/sensor/sensor_roca_s981.sql", "name": "sensor_roca_s981", "alias": "sensor_roca_s981", "checksum": {"name": "sha256", "checksum": "e51e867e7759195efbf6ea8776894821f92131338c2f407555dcad5fa21e198f"}, "tags": [], "refs": [], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/sensor/sensor_roca_s981.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\n\n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S981' as macro_modelo\n       from cecoc.fl_981_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S981' as macro_modelo\n       from cecoc.fl981_1_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    union all\n\n    \n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       'S981' as macro_modelo\n       from cecoc.fl981_3_folloline_ringresult_raw\n    )\n\n    select\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(\"SensorId\" as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as sensor_diccionario_key\n        ,  md5(cast(coalesce(cast(macro_modelo as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , 'roca'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_roca_s981\""}, "model.cecoc.produccion_roca": {"raw_sql": "{{ config(\n    materialized='table',\n    pre_hook='''\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n    DECLARE x NUMERIC;\n    BEGIN\n    x = $1::NUMERIC;\n    RETURN TRUE;\n    EXCEPTION WHEN others THEN\n        RETURN FALSE;\n    END;\n    $$\n    STRICT\n    LANGUAGE plpgsql IMMUTABLE;\n    '''\n) }}\n\nwith produccion as (\n\n    select\n\n          -- Claves subrogadas\n          {{ dbt_utils.surrogate_key([\n            'fechas',\n            'turno'\n             ]) }} as dia_produccion_key\n        , {{ dbt_utils.surrogate_key([\n           'tunneling_machine_name'\n             ]) }} as tuneladora_key\n\n         -- Fact fields\n         , replace(anillo, ' ', '') as anillo\n         , produccion_excavacion as excavacion\n         , produccion_regripping as regripping\n         , produccion_montaje as montaje\n         , produccion_inspeccion_cortadores as inspeccion_cortadores\n\n     from {{ source('produccion_parada','production_stops_folloline_raw') }}\n     )\n\n{{ union_all_produccion_roca() }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.cecoc.union_all_produccion_roca"], "nodes": ["source.cecoc.produccion_parada.production_stops_folloline_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n    DECLARE x NUMERIC;\n    BEGIN\n    x = $1::NUMERIC;\n    RETURN TRUE;\n    EXCEPTION WHEN others THEN\n        RETURN FALSE;\n    END;\n    $$\n    STRICT\n    LANGUAGE plpgsql IMMUTABLE;\n    ", "transaction": true, "index": null}]}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "produccion_roca"], "unique_id": "model.cecoc.produccion_roca", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/produccion_roca.sql", "original_file_path": "models/produccion_parada/produccion_roca.sql", "name": "produccion_roca", "alias": "produccion_roca", "checksum": {"name": "sha256", "checksum": "7c0dd86af6c609e30b82f47c959441a00b8701dbcc3d65cd0b002c168ddd5636"}, "tags": [], "refs": [], "sources": [["produccion_parada", "production_stops_folloline_raw"]], "description": "Informaci\u00f3n sobre la producci\u00f3n realizada en cada anillo de los proyectos de roca", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda de la producci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tiempo": {"name": "tiempo", "description": "Tiempo invertido en la producci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/produccion_roca.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "pre-hook": ["\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n    DECLARE x NUMERIC;\n    BEGIN\n    x = $1::NUMERIC;\n    RETURN TRUE;\n    EXCEPTION WHEN others THEN\n        RETURN FALSE;\n    END;\n    $$\n    STRICT\n    LANGUAGE plpgsql IMMUTABLE;\n    "]}, "created_at": 1637696439, "compiled_sql": "\n\nwith produccion as (\n\n    select\n\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(fechas as \n    varchar\n), '') || '-' || coalesce(cast(turno as \n    varchar\n), '') as \n    varchar\n)) as dia_produccion_key\n        , md5(cast(coalesce(cast(tunneling_machine_name as \n    varchar\n), '') as \n    varchar\n)) as tuneladora_key\n\n         -- Fact fields\n         , replace(anillo, ' ', '') as anillo\n         , produccion_excavacion as excavacion\n         , produccion_regripping as regripping\n         , produccion_montaje as montaje\n         , produccion_inspeccion_cortadores as inspeccion_cortadores\n\n     from \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_folloline_raw\"\n     )\n\n\n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , anillo::float::int\n        , 'excavacion'::varchar(21) as categoria\n        , excavacion::float8::int8 as tiempo\n\n    from produccion\n\n    where excavacion is not null\n        and trim(excavacion) <> ''\n        and excavacion <> 'nan'\n        and excavacion <> '***'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , anillo::float::int\n        , 'regripping'::varchar(21) as categoria\n        , regripping::float8::int8 as tiempo\n\n    from produccion\n\n    where regripping is not null\n        and trim(regripping) <> ''\n        and regripping <> 'nan'\n        and regripping <> '***'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , anillo::float::int\n        , 'montaje'::varchar(21) as categoria\n        , montaje::float8::int8 as tiempo\n\n    from produccion\n\n    where montaje is not null\n        and trim(montaje) <> ''\n        and montaje <> 'nan'\n        and montaje <> '***'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , anillo::float::int\n        , 'inspeccion_cortadores'::varchar(21) as categoria\n        , inspeccion_cortadores::float8::int8 as tiempo\n\n    from produccion\n\n    where inspeccion_cortadores is not null\n        and trim(inspeccion_cortadores) <> ''\n        and inspeccion_cortadores <> 'nan'\n        and inspeccion_cortadores <> '***'\n        and isnumeric(anillo)\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"produccion_roca\""}, "model.cecoc.produccion": {"raw_sql": "select\n\n      dia_produccion_key\n    , tuneladora_key\n    , anillo\n    , categoria\n    , tiempo\n\nfrom {{ ref('produccion_roca') }}\n\nunion all\n\nselect\n\n      dia_produccion_key\n    , tuneladora_key\n    , anillo\n    , categoria\n    , tiempo\n\nfrom {{ ref('produccion_suelo') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.produccion_roca", "model.cecoc.produccion_suelo"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "produccion"], "unique_id": "model.cecoc.produccion", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/produccion.sql", "original_file_path": "models/produccion_parada/produccion.sql", "name": "produccion", "alias": "produccion", "checksum": {"name": "sha256", "checksum": "126317a0988932a4f895d2955a30595bf759c37eb73e89a8df8900c2f3016391"}, "tags": [], "refs": [["produccion_roca"], ["produccion_suelo"]], "sources": [], "description": "Informaci\u00f3n sobre la producci\u00f3n realizada en cada anillo", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda de la producci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tiempo": {"name": "tiempo", "description": "Tiempo invertido en la producci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/produccion.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "view"}, "created_at": 1637696439, "compiled_sql": "select\n\n      dia_produccion_key\n    , tuneladora_key\n    , anillo\n    , categoria\n    , tiempo\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"produccion_roca\"\n\nunion all\n\nselect\n\n      dia_produccion_key\n    , tuneladora_key\n    , anillo\n    , categoria\n    , tiempo\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"produccion_suelo\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"produccion\""}, "model.cecoc.categoria_comentario_parada_roca": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['categoria_comentario_parada_key'], 'type': 'hash'}\n    ]\n) }}\n\nwith comentario_sin_espacios as (\n\n    select\n\n          process_comments(process_determiners(parada)) as comentario_sin_espacios\n        , parada::varchar(543) as comentario\n        , categoria::varchar(38)\n\nfrom {{ source('produccion_parada','categorias_paradas_folloline_raw') }}\n\n)\nselect\n\n     {{ dbt_utils.surrogate_key([\n       'comentario_sin_espacios'\n       ]) }}::varchar(32) as categoria_comentario_parada_key\n     , comentario\n     , categoria\n\nfrom comentario_sin_espacios", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.produccion_parada.categorias_paradas_folloline_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["categoria_comentario_parada_key"], "type": "hash"}], "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "categoria_comentario_parada_roca"], "unique_id": "model.cecoc.categoria_comentario_parada_roca", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/categoria_comentario_parada_roca.sql", "original_file_path": "models/produccion_parada/categoria_comentario_parada_roca.sql", "name": "categoria_comentario_parada_roca", "alias": "categoria_comentario_parada_roca", "checksum": {"name": "sha256", "checksum": "dd5a329eb2457163df5217c985dfba0e3bdf8a74ab5a7030b0650d0e8dfd8ae0"}, "tags": [], "refs": [], "sources": [["produccion_parada", "categorias_paradas_folloline_raw"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/produccion_parada/categoria_comentario_parada_roca.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["categoria_comentario_parada_key"], "type": "hash"}]}, "created_at": 1637696438, "compiled_sql": "\n\nwith comentario_sin_espacios as (\n\n    select\n\n          process_comments(process_determiners(parada)) as comentario_sin_espacios\n        , parada::varchar(543) as comentario\n        , categoria::varchar(38)\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categorias_paradas_folloline_raw\"\n\n)\nselect\n\n     md5(cast(coalesce(cast(comentario_sin_espacios as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as categoria_comentario_parada_key\n     , comentario\n     , categoria\n\nfrom comentario_sin_espacios", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada_roca\""}, "model.cecoc.categoria_comentario_parada_suelo": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['categoria_comentario_parada_key'], 'type': 'hash'}\n    ]\n) }}\n\nwith\ncategoria_comentario_parada as (\n\n    select\n          to_date(fecha,'MM/DD/YYYY')::varchar(10) as fecha\n        , anillos as anillo\n        , case\n            when descripcion = '' then null\n            else descripcion\n          end::varchar(543) as comentario\n        , case\n            when categorias = '' then null\n            else categorias\n          end as categoria\n        , 'Suelo' as tipo_obra\n\n    from {{ source('produccion_parada','categorias_paradas_quito_raw') }}\n)\n\nselect\n\n     {{ dbt_utils.surrogate_key([\n       'fecha',\n       'anillo',\n       'tipo_obra'\n       ]) }}::varchar(32) as categoria_comentario_parada_key\n     , fecha::date as fecha\n     , anillo\n     , comentario\n     , categoria\n\nfrom categoria_comentario_parada", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.produccion_parada.categorias_paradas_quito_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["categoria_comentario_parada_key"], "type": "hash"}], "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "categoria_comentario_parada_suelo"], "unique_id": "model.cecoc.categoria_comentario_parada_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/categoria_comentario_parada_suelo.sql", "original_file_path": "models/produccion_parada/categoria_comentario_parada_suelo.sql", "name": "categoria_comentario_parada_suelo", "alias": "categoria_comentario_parada_suelo", "checksum": {"name": "sha256", "checksum": "a58e6cc4c34b9408144801acec4da707ffb72822c271e84f3a187852489806e9"}, "tags": [], "refs": [], "sources": [["produccion_parada", "categorias_paradas_quito_raw"]], "description": "Diccionario con cada una de las posibles paradas en los proyectos de suelo y su respectiva categor\u00eda", "columns": {"categoria_comentario_parada_key": {"name": "categoria_comentario_parada_key", "description": "Clave subrogada para cruzar con la tabla \"categoria_comentario_parada\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "comentario": {"name": "comentario", "description": "Cada una de las posibles paradas existentes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda asociada a cada parada", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/categoria_comentario_parada_suelo.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["categoria_comentario_parada_key"], "type": "hash"}]}, "created_at": 1637696439, "compiled_sql": "\n\nwith\ncategoria_comentario_parada as (\n\n    select\n          to_date(fecha,'MM/DD/YYYY')::varchar(10) as fecha\n        , anillos as anillo\n        , case\n            when descripcion = '' then null\n            else descripcion\n          end::varchar(543) as comentario\n        , case\n            when categorias = '' then null\n            else categorias\n          end as categoria\n        , 'Suelo' as tipo_obra\n\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"categorias_paradas_quito_raw\"\n)\n\nselect\n\n     md5(cast(coalesce(cast(fecha as \n    varchar\n), '') || '-' || coalesce(cast(anillo as \n    varchar\n), '') || '-' || coalesce(cast(tipo_obra as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as categoria_comentario_parada_key\n     , fecha::date as fecha\n     , anillo\n     , comentario\n     , categoria\n\nfrom categoria_comentario_parada", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada_suelo\""}, "model.cecoc.dia_produccion_suelo": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['dia_produccion_key'], 'type': 'hash'}\n    ]\n) }}\n\nselect\n\n      {{ dbt_utils.surrogate_key([\n       'fecha',\n       'tuneladora'\n         ]) }}::varchar(32) as dia_produccion_key\n    , titulo::varchar(154)\n    , nombre_tramo::varchar(53)\n    , nombre_fichero::varchar(84)\n    , to_date(fecha,'YYYY-MM-DD') as fecha\n    , proyect_name::varchar(5) as nombre_proyecto\n    , case\n        when trim(total_anillos_dia) <> '' then total_anillos_dia::float8::int8\n        else null\n      end total_anillos_dia\n    , case\n        when trim(total_metros_dia) <> '' then total_metros_dia::float8\n        else null\n      end total_metros_dia\n    , case\n        when pk_frente_inicio_dia = '_' then null\n        when trim(pk_frente_inicio_dia) <> '' then pk_frente_inicio_dia::float8\n        else null\n      end pk_frente_inicio_dia\n    , case\n        when trim(pk_frente_final_dia) <> '' then pk_frente_final_dia::float8\n        else null\n      end pk_frente_final_dia\n    , tramo_inicio::float8\n    , tramo_fin::float8\n    , to_date(fecha_inicio_tramo,'YYYY-MM-DD') as fecha_inicio_tramo\n    , longitud_tramo::float8\n    , case\n        when trim(anillos_colocados_tramo) <> '' then anillos_colocados_tramo::int8\n        else null\n      end anillos_colocados_tramo\n    , case\n        when trim(metros_tunel_excavados_tramo) <> '' then metros_tunel_excavados_tramo::float8\n        else null\n      end metros_tunel_excavados_tramo\n    , metros_tunel_por_excavar_tramo::float8\n    , case\n        when trim(dias_ejecucion_tramo) <> '' then dias_ejecucion_tramo::int8\n        else null\n      end dias_ejecucion_tramo\n    , case\n        when trim(rendimiento) <> '' then rendimiento::float8\n        else null\n      end rendimiento\n    , primer_anillo_pre_tunel::varchar(44)\n    , primer_excavacion_terreno::varchar(62)\n    , to_date(primer_anillo_tunel,'YYYY-MM-DD') as primer_anillo_tunel\n    , observaciones::varchar(1476)\n    , observaciones_fiscalizacion::varchar(770)\n    , case\n        when trim(desvio_vert_delante) <> '' then desvio_vert_delante::int8\n        else null\n      end desvio_vert_delante\n    , case\n        when trim(desvio_vert_atras) <> '' then desvio_vert_atras::int8\n        else null\n      end desvio_vert_atras\n    , case\n        when trim(desvio_horiz_delante) <> '' then desvio_horiz_delante::int8\n        else null\n      end desvio_horiz_delante\n    , case\n        when trim(desvio_horiz_atras) <> '' then desvio_horiz_atras::int8\n        else null\n      end desvio_horiz_atras\n    , firma_fiscalizacion::varchar(17)\n    , firma_contratista::varchar(29)\n\nfrom {{ source('produccion_parada','production_days_quito_raw') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.produccion_parada.production_days_quito_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["dia_produccion_key"], "type": "hash"}], "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "dia_produccion_suelo"], "unique_id": "model.cecoc.dia_produccion_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/dia_produccion_suelo.sql", "original_file_path": "models/produccion_parada/dia_produccion_suelo.sql", "name": "dia_produccion_suelo", "alias": "dia_produccion_suelo", "checksum": {"name": "sha256", "checksum": "a32a7dc29e4261bfe0475cddd63a3670c8dc5c40a7676b9352021dc6d9361520"}, "tags": [], "refs": [], "sources": [["produccion_parada", "production_days_quito_raw"]], "description": "Parte diario de producci\u00f3n de cada tuneladora empleada en el proyecto de Quito.\n\nEn esta tabla hay datos de:\n\n- Tiempo de producci\u00f3n por anillo\n\n- Tiempo de paradas por anillo\n\n- Longitud de avance por anillo\n\n- Peso del material extra\u00eddo por anillo\n\n- Inyecci\u00f3n de bicomponente por anillo\n\n- Par\u00e1metros de avance de tuneladora por anillo\n\n- Geolog\u00eda por anillo", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "titulo": {"name": "titulo", "description": "T\u00edtulo del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_tramo": {"name": "nombre_tramo", "description": "Nombre del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_fichero": {"name": "nombre_fichero", "description": "Nombre del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fecha": {"name": "fecha", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_proyecto": {"name": "nombre_proyecto", "description": "Nombre del proyecto", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_anillos_dia": {"name": "total_anillos_dia", "description": "N\u00famero total de anillos colocados en el d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_metros_dia": {"name": "total_metros_dia", "description": "N\u00famero total de metros excavados en el d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_inicio_dia": {"name": "pk_frente_inicio_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al inicio del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_final_dia": {"name": "pk_frente_final_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al final del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tramo_inicio": {"name": "tramo_inicio", "description": "Inicio del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tramo_fin": {"name": "tramo_fin", "description": "Fin del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fecha_inicio_tramo": {"name": "fecha_inicio_tramo", "description": "Fecha en la que se ha iniciado el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "longitud_tramo": {"name": "longitud_tramo", "description": "Longitud del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillos_colocados_tramo": {"name": "anillos_colocados_tramo", "description": "N\u00famero total de anillos colocados en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metros_tunel_excavados_tramo": {"name": "metros_tunel_excavados_tramo", "description": "N\u00famero total de metros que ya han sido excavados en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metros_tunel_por_excavar_tramo": {"name": "metros_tunel_por_excavar_tramo", "description": "N\u00famero total de metros que quedan por excavar en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "dias_ejecucion_tramo": {"name": "dias_ejecucion_tramo", "description": "D\u00edas invertidos en la ejecuci\u00f3n del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rendimiento": {"name": "rendimiento", "description": "Rendimiento en el tramo [m/d\u00eda]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "primer_anillo_pre_tunel": {"name": "primer_anillo_pre_tunel", "description": "Fecha en la que se coloc\u00f3 el primer anillo del pret\u00fanel", "meta": {}, "data_type": null, "quote": null, "tags": []}, "primer_excavacion_terreno": {"name": "primer_excavacion_terreno", "description": "Fecha en la que se produjo la primera excavaci\u00f3n de terreno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "primer_anillo_tunel": {"name": "primer_anillo_tunel", "description": "Fecha en la que se coloc\u00f3 el primer anillo del t\u00fanel", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observaciones": {"name": "observaciones", "description": "Observaciones diarias", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observaciones_fiscalizacion": {"name": "observaciones_fiscalizacion", "description": "Observaciones diarias de fiscalizaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_vert_delante": {"name": "desvio_vert_delante", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n vertical de la parte delantera del escudo respecto a te\u00f3rico", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_vert_atras": {"name": "desvio_vert_atras", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n vertical de la parte trasera del escudo respecto a te\u00f3rico", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_horiz_delante": {"name": "desvio_horiz_delante", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n horizontal de la parte delantera del escudo respecto a te\u00f3rico.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_horiz_atras": {"name": "desvio_horiz_atras", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n horizontal de la parte trasera del escudo respecto a te\u00f3rico.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "firma_fiscalizacion": {"name": "firma_fiscalizacion", "description": "Firma de la fiscalizaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "firma_contratista": {"name": "firma_contratista", "description": "Firma del contratista", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/dia_produccion_suelo.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["dia_produccion_key"], "type": "hash"}]}, "created_at": 1637696439, "compiled_sql": "\n\nselect\n\n      md5(cast(coalesce(cast(fecha as \n    varchar\n), '') || '-' || coalesce(cast(tuneladora as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as dia_produccion_key\n    , titulo::varchar(154)\n    , nombre_tramo::varchar(53)\n    , nombre_fichero::varchar(84)\n    , to_date(fecha,'YYYY-MM-DD') as fecha\n    , proyect_name::varchar(5) as nombre_proyecto\n    , case\n        when trim(total_anillos_dia) <> '' then total_anillos_dia::float8::int8\n        else null\n      end total_anillos_dia\n    , case\n        when trim(total_metros_dia) <> '' then total_metros_dia::float8\n        else null\n      end total_metros_dia\n    , case\n        when pk_frente_inicio_dia = '_' then null\n        when trim(pk_frente_inicio_dia) <> '' then pk_frente_inicio_dia::float8\n        else null\n      end pk_frente_inicio_dia\n    , case\n        when trim(pk_frente_final_dia) <> '' then pk_frente_final_dia::float8\n        else null\n      end pk_frente_final_dia\n    , tramo_inicio::float8\n    , tramo_fin::float8\n    , to_date(fecha_inicio_tramo,'YYYY-MM-DD') as fecha_inicio_tramo\n    , longitud_tramo::float8\n    , case\n        when trim(anillos_colocados_tramo) <> '' then anillos_colocados_tramo::int8\n        else null\n      end anillos_colocados_tramo\n    , case\n        when trim(metros_tunel_excavados_tramo) <> '' then metros_tunel_excavados_tramo::float8\n        else null\n      end metros_tunel_excavados_tramo\n    , metros_tunel_por_excavar_tramo::float8\n    , case\n        when trim(dias_ejecucion_tramo) <> '' then dias_ejecucion_tramo::int8\n        else null\n      end dias_ejecucion_tramo\n    , case\n        when trim(rendimiento) <> '' then rendimiento::float8\n        else null\n      end rendimiento\n    , primer_anillo_pre_tunel::varchar(44)\n    , primer_excavacion_terreno::varchar(62)\n    , to_date(primer_anillo_tunel,'YYYY-MM-DD') as primer_anillo_tunel\n    , observaciones::varchar(1476)\n    , observaciones_fiscalizacion::varchar(770)\n    , case\n        when trim(desvio_vert_delante) <> '' then desvio_vert_delante::int8\n        else null\n      end desvio_vert_delante\n    , case\n        when trim(desvio_vert_atras) <> '' then desvio_vert_atras::int8\n        else null\n      end desvio_vert_atras\n    , case\n        when trim(desvio_horiz_delante) <> '' then desvio_horiz_delante::int8\n        else null\n      end desvio_horiz_delante\n    , case\n        when trim(desvio_horiz_atras) <> '' then desvio_horiz_atras::int8\n        else null\n      end desvio_horiz_atras\n    , firma_fiscalizacion::varchar(17)\n    , firma_contratista::varchar(29)\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"production_days_quito_raw\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_suelo\""}, "model.cecoc.dia_produccion_roca": {"raw_sql": "{{ config(\n    materialized='table',\n    indexes=[\n    {'columns':['dia_produccion_key'], 'type': 'hash'}\n    ],\n    prehook='''\n    create or replace function is_date(s varchar) returns boolean as $$\n       begin\n       perform s::date;\n       return true;\n       exception when others then\n            return false;\n       end;\n       $$ language plpgsql;\n    ''',\n    pre_hook='''\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    '''\n) }}\n\nselect\n\n      {{ dbt_utils.surrogate_key([\n       'fecha',\n       'turno',\n       'tunneling_machine_name'\n        ]) }}::varchar(32) as dia_produccion_key\n    , fecha::date\n    , filename::varchar(44) as nombre_fichero\n    , n_anillo_final_turno::varchar(10)\n    , case\n        when length(anillos_colocados_tramo) > 3 then length(replace(anillos_colocados_tramo,',',''))/3::int8\n        when trim(anillos_colocados_tramo) <> '' then anillos_colocados_tramo::int8\n        else null\n      end anillos_colocados_tramo\n    , case\n        when not isnumeric(pk_frente_inicio_dia) then null\n        when trim(pk_frente_inicio_dia) <> '' then pk_frente_inicio_dia::float8\n        else null\n      end pk_frente_inicio_dia\n    , equipo::varchar(4)\n    , turno::varchar(6)\n    , \"TBM\"::varchar(5) as tbm\n    , case\n        when not isnumeric(pk_frente_final_dia) then null\n        when trim(pk_frente_final_dia) <> '' then replace(pk_frente_final_dia,',','.')::float8\n        else null\n      end pk_frente_final_dia\n\nfrom {{ source('produccion_parada','production_days_folloline_raw') }}\n    where is_date(fecha)", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"], "nodes": ["source.cecoc.produccion_parada.production_days_folloline_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "indexes": [{"columns": ["dia_produccion_key"], "type": "hash"}], "prehook": "\n    create or replace function is_date(s varchar) returns boolean as $$\n       begin\n       perform s::date;\n       return true;\n       exception when others then\n            return false;\n       end;\n       $$ language plpgsql;\n    ", "post-hook": [], "pre-hook": [{"sql": "\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    ", "transaction": true, "index": null}]}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "dia_produccion_roca"], "unique_id": "model.cecoc.dia_produccion_roca", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/dia_produccion_roca.sql", "original_file_path": "models/produccion_parada/dia_produccion_roca.sql", "name": "dia_produccion_roca", "alias": "dia_produccion_roca", "checksum": {"name": "sha256", "checksum": "73e0b82c526ad022b33d54ecbd3e6cbc2fd220bb261f44c5d252f83da4989aef"}, "tags": [], "refs": [], "sources": [["produccion_parada", "production_days_folloline_raw"]], "description": "Informaci\u00f3n general sobre la producci\u00f3n de cada d\u00eda trabajado en los proyectos de roca", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fecha": {"name": "fecha", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_fichero": {"name": "nombre_fichero", "description": "Nombre del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "n_anillo_final_turno": {"name": "n_anillo_final_turno", "description": "N\u00famero de anillo colocado al final del turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillos_colocados_tramo": {"name": "anillos_colocados_tramo", "description": "N\u00famero total de anillos colocados en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_inicio_dia": {"name": "pk_frente_inicio_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al inicio del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "equipo": {"name": "equipo", "description": "Equipo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno": {"name": "turno", "description": "Turno (d\u00eda o noche)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tbm": {"name": "tbm", "description": "Acr\u00f3nimo en ingl\u00e9s de Tuneladora (Tunnel Boring Manchine)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_final_dia": {"name": "pk_frente_final_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al final del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/dia_produccion_roca.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "indexes": [{"columns": ["dia_produccion_key"], "type": "hash"}], "prehook": "\n    create or replace function is_date(s varchar) returns boolean as $$\n       begin\n       perform s::date;\n       return true;\n       exception when others then\n            return false;\n       end;\n       $$ language plpgsql;\n    ", "pre-hook": ["\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    "]}, "created_at": 1637696439, "compiled_sql": "\n\nselect\n\n      md5(cast(coalesce(cast(fecha as \n    varchar\n), '') || '-' || coalesce(cast(turno as \n    varchar\n), '') || '-' || coalesce(cast(tunneling_machine_name as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as dia_produccion_key\n    , fecha::date\n    , filename::varchar(44) as nombre_fichero\n    , n_anillo_final_turno::varchar(10)\n    , case\n        when length(anillos_colocados_tramo) > 3 then length(replace(anillos_colocados_tramo,',',''))/3::int8\n        when trim(anillos_colocados_tramo) <> '' then anillos_colocados_tramo::int8\n        else null\n      end anillos_colocados_tramo\n    , case\n        when not isnumeric(pk_frente_inicio_dia) then null\n        when trim(pk_frente_inicio_dia) <> '' then pk_frente_inicio_dia::float8\n        else null\n      end pk_frente_inicio_dia\n    , equipo::varchar(4)\n    , turno::varchar(6)\n    , \"TBM\"::varchar(5) as tbm\n    , case\n        when not isnumeric(pk_frente_final_dia) then null\n        when trim(pk_frente_final_dia) <> '' then replace(pk_frente_final_dia,',','.')::float8\n        else null\n      end pk_frente_final_dia\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"production_days_folloline_raw\"\n    where is_date(fecha)", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_roca\""}, "model.cecoc.parada": {"raw_sql": "select\n\n\t  dia_produccion_key\n\t, tuneladora_key\n\t, categoria_comentario_parada_key\n\t, anillo\n\t, categoria\n\t, tiempo\n\t, comentario\n\nfrom {{ ref('parada_roca') }}\n\nunion all\n\nselect\n\n\t  dia_produccion_key\n\t, tuneladora_key\n\t, categoria_comentario_parada_key\n\t, anillo as text\n\t, categoria\n\t, tiempo as float8\n\t, comentario\n\nfrom {{ ref('parada_suelo') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.parada_roca", "model.cecoc.parada_suelo"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "parada"], "unique_id": "model.cecoc.parada", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/parada.sql", "original_file_path": "models/produccion_parada/parada.sql", "name": "parada", "alias": "parada", "checksum": {"name": "sha256", "checksum": "c27776a76ba3bf23994ba2a1c3b7c5ec03da10c359e312509e78b2f6f12f8ba3"}, "tags": [], "refs": [["parada_roca"], ["parada_suelo"]], "sources": [], "description": "Informaci\u00f3n sobre las paradas realizadas en cada anillo", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria_comentario_parada_key": {"name": "categoria_comentario_parada_key", "description": "Clave subrogada para cruzar con la tabla \"categoria_comentario_parada\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda de la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tiempo": {"name": "tiempo", "description": "Tiempo invertido en la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}, "comentario": {"name": "comentario", "description": "Comentario sobre la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/parada.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "view"}, "created_at": 1637696439, "compiled_sql": "select\n\n\t  dia_produccion_key\n\t, tuneladora_key\n\t, categoria_comentario_parada_key\n\t, anillo\n\t, categoria\n\t, tiempo\n\t, comentario\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"parada_roca\"\n\nunion all\n\nselect\n\n\t  dia_produccion_key\n\t, tuneladora_key\n\t, categoria_comentario_parada_key\n\t, anillo as text\n\t, categoria\n\t, tiempo as float8\n\t, comentario\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"parada_suelo\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"parada\""}, "model.cecoc.dia_produccion": {"raw_sql": "select\n\n      dia_produccion_key\n    , fecha\n    , anillos_colocados_tramo\n    , pk_frente_inicio_dia\n    , pk_frente_final_dia\n\nfrom {{ ref('dia_produccion_roca') }}\n\nunion all\n\nselect\n\n      dia_produccion_key\n    , fecha\n    , anillos_colocados_tramo\n    , pk_frente_inicio_dia\n    , pk_frente_final_dia\n\nfrom {{ ref('dia_produccion_suelo') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.dia_produccion_roca", "model.cecoc.dia_produccion_suelo"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "dia_produccion"], "unique_id": "model.cecoc.dia_produccion", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/dia_produccion.sql", "original_file_path": "models/produccion_parada/dia_produccion.sql", "name": "dia_produccion", "alias": "dia_produccion", "checksum": {"name": "sha256", "checksum": "8debc5ec992aba4cd8d7281df359584a41be93642ce0896d5c9ff11bc0e5c9d9"}, "tags": [], "refs": [["dia_produccion_roca"], ["dia_produccion_suelo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/dia_produccion.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "view"}, "created_at": 1637696439, "compiled_sql": "select\n\n      dia_produccion_key\n    , fecha\n    , anillos_colocados_tramo\n    , pk_frente_inicio_dia\n    , pk_frente_final_dia\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_roca\"\n\nunion all\n\nselect\n\n      dia_produccion_key\n    , fecha\n    , anillos_colocados_tramo\n    , pk_frente_inicio_dia\n    , pk_frente_final_dia\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_suelo\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion\""}, "model.cecoc.categoria_comentario_parada": {"raw_sql": "select\n\n      categoria_comentario_parada_key\n    , categoria\n    , comentario\n\nfrom {{ ref('categoria_comentario_parada_suelo') }}\n\nunion all\n\nselect\n\n      categoria_comentario_parada_key\n    , categoria\n    , comentario\n\nfrom {{ ref('categoria_comentario_parada_roca') }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.categoria_comentario_parada_suelo", "model.cecoc.categoria_comentario_parada_roca"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "categoria_comentario_parada"], "unique_id": "model.cecoc.categoria_comentario_parada", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/categoria_comentario_parada.sql", "original_file_path": "models/produccion_parada/categoria_comentario_parada.sql", "name": "categoria_comentario_parada", "alias": "categoria_comentario_parada", "checksum": {"name": "sha256", "checksum": "817aa8f1c06d549bc591e7969701948b853d63f295a863ff3cbb18f67687d01c"}, "tags": [], "refs": [["categoria_comentario_parada_suelo"], ["categoria_comentario_parada_roca"]], "sources": [], "description": "Diccionario con cada una de las posibles paradas y su respectiva categor\u00eda", "columns": {"categoria_comentario_parada_key": {"name": "categoria_comentario_parada_key", "description": "Clave subrogada para cruzar con la tabla \"categoria_comentario_parada\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "comentario": {"name": "comentario", "description": "Cada una de las posibles paradas existentes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda asociada a cada parada", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/categoria_comentario_parada.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "view"}, "created_at": 1637696439, "compiled_sql": "select\n\n      categoria_comentario_parada_key\n    , categoria\n    , comentario\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada_suelo\"\n\nunion all\n\nselect\n\n      categoria_comentario_parada_key\n    , categoria\n    , comentario\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada_roca\"", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada\""}, "model.cecoc.parada_roca": {"raw_sql": "{{ config(\n    materialized='table'\n) }}\n\nwith\ntipo_obra as (\n\n    select\n\n           fechas\n         , turno\n         , tunneling_machine_name\n         , 'Roca' as tipo_obra\n         , anillo\n         , paradas_inspeccion_cortadores as inspeccion_cortadores\n         , paradas_probe_drilling as probe_drilling\n         , paradas_parada_cortadores as parada_cortadores\n         , paradas_retraso_de_inyeccion as retraso_de_inyeccion\n         , paradas_extension_de_instalaciones as extension_de_instalaciones\n         , \"paradas_retraso_de_MSV\" as retraso_de_msv\n         , paradas_retraso_de_cinta as retraso_de_cinta\n         , \"paradas_retraso_hidraulico_mecanico_en_TBM\" as retraso_hidraulico_mecanico_en_tbm\n         , \"paradas_retraso_electrico_en_TBM\" as retraso_electrico_en_tbm\n         , paradas_trabajos_externos_planificados as trabajos_externos_planificados\n         , paradas_retraso_en_instalaciones_de_superficie as retraso_en_instalaciones_de_superficie\n         , paradas_pregrouting as pregrouting\n         , paradas_otros_retrasos as otras_paradas\n         , detalles_parada as comentario\n\n     from {{ source('produccion_parada','production_stops_folloline_raw') }} stops\n        left join {{ source('produccion_parada','production_stops_folloline_details_raw') }} stops_details\n            on stops.anillo = stops_details.anillo_parada\n            and stops.fechas = stops_details.fechas_parada\n            and stops.turno = stops_details.turno_parada\n\n     where stops.anillo <> 'nan'\n) ,\ncomentario_sin_espacios as (\n\n    select\n\n          {{ dbt_utils.surrogate_key([\n            'fechas',\n            'turno',\n            'tunneling_machine_name'\n             ]) }} as dia_produccion_key\n        , {{ dbt_utils.surrogate_key([\n           'tunneling_machine_name'\n             ]) }} as tuneladora_key\n\n         , process_comments(process_determiners(comentario)) as comentario_sin_espacios\n         , anillo\n         , inspeccion_cortadores\n         , probe_drilling\n         , parada_cortadores\n         , retraso_de_inyeccion\n         , extension_de_instalaciones\n         , retraso_de_msv\n         , retraso_de_cinta\n         , retraso_hidraulico_mecanico_en_tbm\n         , retraso_electrico_en_tbm\n         , trabajos_externos_planificados\n         , retraso_en_instalaciones_de_superficie\n         , pregrouting\n         , otras_paradas\n         , comentario\n\n    from tipo_obra\n),\nparadas as (\n\n    select\n\n        -- Claves subrogadas\n          dia_produccion_key\n        , tuneladora_key\n        , {{ dbt_utils.surrogate_key([\n           'comentario_sin_espacios'\n         ]) }} as categoria_comentario_parada_key\n\n        -- Fact fields\n        , anillo\n        , inspeccion_cortadores\n        , probe_drilling\n        , parada_cortadores\n        , retraso_de_inyeccion\n        , extension_de_instalaciones\n        , retraso_de_msv\n        , retraso_de_cinta\n        , retraso_hidraulico_mecanico_en_tbm\n        , retraso_electrico_en_tbm\n        , trabajos_externos_planificados\n        , retraso_en_instalaciones_de_superficie\n        , pregrouting\n        , otras_paradas\n        , comentario\n\n    from comentario_sin_espacios\n\n     )\n\n{{ union_all_parada_roca() }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.cecoc.union_all_parada_roca"], "nodes": ["source.cecoc.produccion_parada.production_stops_folloline_raw", "source.cecoc.produccion_parada.production_stops_folloline_details_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "parada_roca"], "unique_id": "model.cecoc.parada_roca", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/parada_roca.sql", "original_file_path": "models/produccion_parada/parada_roca.sql", "name": "parada_roca", "alias": "parada_roca", "checksum": {"name": "sha256", "checksum": "00b964c7778c2c3560ea590dadbcbf119422caa886880add0a1b9e32334e1b2a"}, "tags": [], "refs": [], "sources": [["produccion_parada", "production_stops_folloline_raw"], ["produccion_parada", "production_stops_folloline_details_raw"]], "description": "Informaci\u00f3n sobre las paradas realizadas en cada anillo de los proyectos de roca", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria_comentario_parada_key": {"name": "categoria_comentario_parada_key", "description": "Clave subrogada para cruzar con la tabla \"categoria_comentario_parada\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda de la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tiempo": {"name": "tiempo", "description": "Tiempo invertido en la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}, "comentario": {"name": "comentario", "description": "Comentario sobre la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/parada_roca.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696439, "compiled_sql": "\n\nwith\ntipo_obra as (\n\n    select\n\n           fechas\n         , turno\n         , tunneling_machine_name\n         , 'Roca' as tipo_obra\n         , anillo\n         , paradas_inspeccion_cortadores as inspeccion_cortadores\n         , paradas_probe_drilling as probe_drilling\n         , paradas_parada_cortadores as parada_cortadores\n         , paradas_retraso_de_inyeccion as retraso_de_inyeccion\n         , paradas_extension_de_instalaciones as extension_de_instalaciones\n         , \"paradas_retraso_de_MSV\" as retraso_de_msv\n         , paradas_retraso_de_cinta as retraso_de_cinta\n         , \"paradas_retraso_hidraulico_mecanico_en_TBM\" as retraso_hidraulico_mecanico_en_tbm\n         , \"paradas_retraso_electrico_en_TBM\" as retraso_electrico_en_tbm\n         , paradas_trabajos_externos_planificados as trabajos_externos_planificados\n         , paradas_retraso_en_instalaciones_de_superficie as retraso_en_instalaciones_de_superficie\n         , paradas_pregrouting as pregrouting\n         , paradas_otros_retrasos as otras_paradas\n         , detalles_parada as comentario\n\n     from \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_folloline_raw\" stops\n        left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_folloline_details_raw\" stops_details\n            on stops.anillo = stops_details.anillo_parada\n            and stops.fechas = stops_details.fechas_parada\n            and stops.turno = stops_details.turno_parada\n\n     where stops.anillo <> 'nan'\n) ,\ncomentario_sin_espacios as (\n\n    select\n\n          md5(cast(coalesce(cast(fechas as \n    varchar\n), '') || '-' || coalesce(cast(turno as \n    varchar\n), '') || '-' || coalesce(cast(tunneling_machine_name as \n    varchar\n), '') as \n    varchar\n)) as dia_produccion_key\n        , md5(cast(coalesce(cast(tunneling_machine_name as \n    varchar\n), '') as \n    varchar\n)) as tuneladora_key\n\n         , process_comments(process_determiners(comentario)) as comentario_sin_espacios\n         , anillo\n         , inspeccion_cortadores\n         , probe_drilling\n         , parada_cortadores\n         , retraso_de_inyeccion\n         , extension_de_instalaciones\n         , retraso_de_msv\n         , retraso_de_cinta\n         , retraso_hidraulico_mecanico_en_tbm\n         , retraso_electrico_en_tbm\n         , trabajos_externos_planificados\n         , retraso_en_instalaciones_de_superficie\n         , pregrouting\n         , otras_paradas\n         , comentario\n\n    from tipo_obra\n),\nparadas as (\n\n    select\n\n        -- Claves subrogadas\n          dia_produccion_key\n        , tuneladora_key\n        , md5(cast(coalesce(cast(comentario_sin_espacios as \n    varchar\n), '') as \n    varchar\n)) as categoria_comentario_parada_key\n\n        -- Fact fields\n        , anillo\n        , inspeccion_cortadores\n        , probe_drilling\n        , parada_cortadores\n        , retraso_de_inyeccion\n        , extension_de_instalaciones\n        , retraso_de_msv\n        , retraso_de_cinta\n        , retraso_hidraulico_mecanico_en_tbm\n        , retraso_electrico_en_tbm\n        , trabajos_externos_planificados\n        , retraso_en_instalaciones_de_superficie\n        , pregrouting\n        , otras_paradas\n        , comentario\n\n    from comentario_sin_espacios\n\n     )\n\n\n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'inspeccion_cortadores'::varchar(38) as categoria\n        , inspeccion_cortadores::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where inspeccion_cortadores is not null\n        and trim(inspeccion_cortadores) <> ''\n        and inspeccion_cortadores <> 'nan'\n        and inspeccion_cortadores <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'probe_drilling'::varchar(38) as categoria\n        , probe_drilling::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where probe_drilling is not null\n        and trim(probe_drilling) <> ''\n        and probe_drilling <> 'nan'\n        and probe_drilling <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'parada_cortadores'::varchar(38) as categoria\n        , parada_cortadores::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where parada_cortadores is not null\n        and trim(parada_cortadores) <> ''\n        and parada_cortadores <> 'nan'\n        and parada_cortadores <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'retraso_de_inyeccion'::varchar(38) as categoria\n        , retraso_de_inyeccion::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where retraso_de_inyeccion is not null\n        and trim(retraso_de_inyeccion) <> ''\n        and retraso_de_inyeccion <> 'nan'\n        and retraso_de_inyeccion <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'extension_de_instalaciones'::varchar(38) as categoria\n        , extension_de_instalaciones::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where extension_de_instalaciones is not null\n        and trim(extension_de_instalaciones) <> ''\n        and extension_de_instalaciones <> 'nan'\n        and extension_de_instalaciones <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'retraso_de_msv'::varchar(38) as categoria\n        , retraso_de_msv::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where retraso_de_msv is not null\n        and trim(retraso_de_msv) <> ''\n        and retraso_de_msv <> 'nan'\n        and retraso_de_msv <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'retraso_de_cinta'::varchar(38) as categoria\n        , retraso_de_cinta::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where retraso_de_cinta is not null\n        and trim(retraso_de_cinta) <> ''\n        and retraso_de_cinta <> 'nan'\n        and retraso_de_cinta <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'retraso_hidraulico_mecanico_en_tbm'::varchar(38) as categoria\n        , retraso_hidraulico_mecanico_en_tbm::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where retraso_hidraulico_mecanico_en_tbm is not null\n        and trim(retraso_hidraulico_mecanico_en_tbm) <> ''\n        and retraso_hidraulico_mecanico_en_tbm <> 'nan'\n        and retraso_hidraulico_mecanico_en_tbm <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'retraso_electrico_en_tbm'::varchar(38) as categoria\n        , retraso_electrico_en_tbm::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where retraso_electrico_en_tbm is not null\n        and trim(retraso_electrico_en_tbm) <> ''\n        and retraso_electrico_en_tbm <> 'nan'\n        and retraso_electrico_en_tbm <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'trabajos_externos_planificados'::varchar(38) as categoria\n        , trabajos_externos_planificados::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where trabajos_externos_planificados is not null\n        and trim(trabajos_externos_planificados) <> ''\n        and trabajos_externos_planificados <> 'nan'\n        and trabajos_externos_planificados <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'retraso_en_instalaciones_de_superficie'::varchar(38) as categoria\n        , retraso_en_instalaciones_de_superficie::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where retraso_en_instalaciones_de_superficie is not null\n        and trim(retraso_en_instalaciones_de_superficie) <> ''\n        and retraso_en_instalaciones_de_superficie <> 'nan'\n        and retraso_en_instalaciones_de_superficie <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'pregrouting'::varchar(38) as categoria\n        , pregrouting::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where pregrouting is not null\n        and trim(pregrouting) <> ''\n        and pregrouting <> 'nan'\n        and pregrouting <> 'O'\n        and isnumeric(anillo)\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , 'otras_paradas'::varchar(38) as categoria\n        , otras_paradas::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where otras_paradas is not null\n        and trim(otras_paradas) <> ''\n        and otras_paradas <> 'nan'\n        and otras_paradas <> 'O'\n        and isnumeric(anillo)\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"parada_roca\""}, "model.cecoc.produccion_suelo": {"raw_sql": "{{ config(\n    materialized='table',\n    pre_hook='''\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    '''\n) }}\n\nwith produccion as (\n\n    select\n\n          -- Claves subrogadas\n        {{ dbt_utils.surrogate_key([\n         'fechas',\n         'tuneladoras'\n          ]) }}::varchar(32) as dia_produccion_key\n        , {{ dbt_utils.surrogate_key([\n           'tuneladoras'\n             ]) }}::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , anillo::int8\n        , fabrica::varchar(13)\n        , case\n            when trim(posicion_clave) <> '' then posicion_clave::float8::int8\n            else null\n          end posicion_clave\n        , case\n            when trim(produccion_excavacion) <> '' then produccion_excavacion::float8::int8\n            else null\n          end excavacion\n        , case\n            when trim(produccion_montaje) <> '' then produccion_montaje::int8\n            else null\n          end montaje\n        , {{ data_type_suelo() }}\n\n\n     from {{ source('produccion_parada','production_stops_quito_raw') }}\n\n     where isnumeric(anillo)\n\n     )\n\n{{ union_all_produccion_suelo() }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.dbt_utils.surrogate_key", "macro.cecoc.data_type_suelo", "macro.cecoc.union_all_produccion_suelo"], "nodes": ["source.cecoc.produccion_parada.production_stops_quito_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    ", "transaction": true, "index": null}]}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "produccion_suelo"], "unique_id": "model.cecoc.produccion_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/produccion_suelo.sql", "original_file_path": "models/produccion_parada/produccion_suelo.sql", "name": "produccion_suelo", "alias": "produccion_suelo", "checksum": {"name": "sha256", "checksum": "a0d31365481e6bec13224acffea4e90af0a492900b8d7abc63ed1ed324f1c072"}, "tags": [], "refs": [], "sources": [["produccion_parada", "production_stops_quito_raw"]], "description": "Informaci\u00f3n sobre la producci\u00f3n realizada en cada anillo de los proyectos de suelo", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fabrica": {"name": "fabrica", "description": "N\u00famero de f\u00e1brica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "posicion_clave": {"name": "posicion_clave", "description": "Posici\u00f3n clave", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda de la producci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tiempo": {"name": "tiempo", "description": "Tiempo invertido en la producci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "long_avance": {"name": "long_avance", "description": "Longitud de avance", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_b1": {"name": "peso_material_extraido_b1", "description": "Peso del material extra\u00eddo (sin aditivos) B1", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_b2": {"name": "peso_material_extraido_b2", "description": "Peso del material extra\u00eddo (sin aditivos) B2", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_media": {"name": "peso_material_extraido_media", "description": "Peso medio del material extra\u00eddo (sin aditivos)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "inyeccion_bicomponente_vol": {"name": "inyeccion_bicomponente_vol", "description": "Volumen medio de inyecci\u00f3n de mortero bicomponente en relleno gap [m3]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "inyeccion_bicomponente_p": {"name": "inyeccion_bicomponente_p", "description": "Presi\u00f3n media de inyecci\u00f3n de mortero bicomponente en relleno gap [bar]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_empuje_total": {"name": "parametros_avance_tuneladora_empuje_total", "description": "Fuerza media de empuje total de todos los grupos cilindros por anillo [kN]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_par": {"name": "parametros_avance_tuneladora_par", "description": "Par motor del accionamiento principal [MNm]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_v_avance": {"name": "parametros_avance_tuneladora_v_avance", "description": "Velocidad de avance [mm/min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_v_rotacion": {"name": "parametros_avance_tuneladora_v_rotacion", "description": "Velocidad media de rotaci\u00f3n de la rueda de corte por anillo [rpm]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_clave": {"name": "parametros_avance_tuneladora_presion_tierras_clave", "description": "L\u00ednea 1 & 2 inyecci\u00f3n en la c\u00e1mara de excavaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_centro": {"name": "parametros_avance_tuneladora_presion_tierras_centro", "description": "Presi\u00f3n de aire en el frente distribuido por l\u00edneas de inyecci\u00f3n (superior, centro, abajo)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_abajo": {"name": "parametros_avance_tuneladora_presion_tierras_abajo", "description": "Presi\u00f3n de aire en el frente distribuido por l\u00edneas de inyecci\u00f3n (superior, centro, abajo)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_agua_adicionada": {"name": "parametros_avance_tuneladora_agua_adicionada", "description": "Cantidad de agua que se aporta en el frente del t\u00fanel para hacer la mezcla tensoactiva para acondicionamiento del terreno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_tratamiento_fir": {"name": "parametros_avance_tuneladora_tratamiento_fir", "description": "Ratio de inyecci\u00f3n de espuma para acondicionamiento del terreno en m\u00e1quinas de suelo. Relaci\u00f3n entre el volumen de espuma inyectada y el volumen de suelo excavado [%]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_tratamiento_fer": {"name": "parametros_avance_tuneladora_tratamiento_fer", "description": "Ratio de formaci\u00f3n de espuma para acondicionamiento del terreno en m\u00e1quinas de suelo. Relaci\u00f3n entre cantidad total de espuma y la cantidad total de soluci\u00f3n surfactante (agua + surfactante) [%]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geologia_auxiliar": {"name": "geologia_auxiliar", "description": "Geolog\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/produccion_suelo.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "pre-hook": ["\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    "]}, "created_at": 1637696439, "compiled_sql": "\n\nwith produccion as (\n\n    select\n\n          -- Claves subrogadas\n        md5(cast(coalesce(cast(fechas as \n    varchar\n), '') || '-' || coalesce(cast(tuneladoras as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as dia_produccion_key\n        , md5(cast(coalesce(cast(tuneladoras as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , anillo::int8\n        , fabrica::varchar(13)\n        , case\n            when trim(posicion_clave) <> '' then posicion_clave::float8::int8\n            else null\n          end posicion_clave\n        , case\n            when trim(produccion_excavacion) <> '' then produccion_excavacion::float8::int8\n            else null\n          end excavacion\n        , case\n            when trim(produccion_montaje) <> '' then produccion_montaje::int8\n            else null\n          end montaje\n        , case\n            when trim(long_avance) <> '' then long_avance::float8\n            else null\n         end long_avance\n       , case\n            when peso_material_extraido_b1 = '_' then null\n            when trim(peso_material_extraido_b1) <> '' then peso_material_extraido_b1::float8\n            else null\n         end peso_material_extraido_b1\n       , case\n            when trim(peso_material_extraido_b2) = '_' then null\n            when trim(peso_material_extraido_b2) <> '' then peso_material_extraido_b2::float8\n            else null\n         end peso_material_extraido_b2\n       , case\n            when trim(peso_material_extraido_media) = '_' then null\n            when trim(peso_material_extraido_media) <> '' then peso_material_extraido_media::float8\n            else null\n         end peso_material_extraido_media\n       , case\n            when not isnumeric(inyeccion_bicomponente_vol) then null\n            when inyeccion_bicomponente_vol = 'No se inyecta' then 0::float8\n            when inyeccion_bicomponente_vol = 'No se registra' then null\n            when trim(inyeccion_bicomponente_vol) <> '' then inyeccion_bicomponente_vol::float8\n            else null\n         end inyeccion_bicomponente_vol\n       , case\n            when trim(inyeccion_bicomponente_p) <> '' then replace(replace(inyeccion_bicomponente_p,' ',''),',','.')::float8\n            else null\n         end inyeccion_bicomponente_p\n       , case\n            when trim(parametros_avance_tuneladora_empuje_total) <> '' then parametros_avance_tuneladora_empuje_total::float8\n            else null\n         end parametros_avance_tuneladora_empuje_total\n       , case\n            when trim(parametros_avance_tuneladora_par) <> '' then parametros_avance_tuneladora_par::float8\n            else null\n         end parametros_avance_tuneladora_par\n       , case\n            when not isnumeric(parametros_avance_tuneladora_v_avance) then null\n            else parametros_avance_tuneladora_v_avance::float8\n         end parametros_avance_tuneladora_v_avance\n       , case\n            when not isnumeric(parametros_avance_tuneladora_v_rotacion) then null\n            when trim(parametros_avance_tuneladora_v_rotacion) <> '' then parametros_avance_tuneladora_v_rotacion::float8\n            else null\n         end parametros_avance_tuneladora_v_rotacion\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_clave) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_clave) <> '' then parametros_avance_tuneladora_presion_tierras_clave::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_clave\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_centro) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_centro) <> '' then parametros_avance_tuneladora_presion_tierras_centro::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_centro\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_abajo) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_abajo) <> '' then parametros_avance_tuneladora_presion_tierras_abajo::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_abajo\n       , case\n            when not isnumeric(parametros_avance_tuneladora_agua_adicionada) then null\n            when trim(parametros_avance_tuneladora_agua_adicionada) <> '' then replace(parametros_avance_tuneladora_agua_adicionada,' ','')::float8\n            else null\n         end parametros_avance_tuneladora_agua_adicionada\n       , case\n            when trim(parametros_avance_tuneladora_tratamiento_fir) <> '' then parametros_avance_tuneladora_tratamiento_fir::float8\n            else null\n         end parametros_avance_tuneladora_tratamiento_fir\n       , case\n            when trim(parametros_avance_tuneladora_tratamiento_fer) <> '' then replace(parametros_avance_tuneladora_tratamiento_fer,',','.')::float8\n            else null\n         end parametros_avance_tuneladora_tratamiento_fer\n       , geo::varchar(19) as geologia_auxiliar\n\n\n     from \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_raw\"\n\n     where isnumeric(anillo)\n\n     )\n\n\n\n    select\n          dia_produccion_key\n        , tuneladora_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , 'excavacion'::varchar(10) as categoria\n        , excavacion as tiempo\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n\n    from produccion\n\n    where excavacion is not null\n        and excavacion > 0\n\n    union all\n\n    \n\n    select\n          dia_produccion_key\n        , tuneladora_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , 'montaje'::varchar(10) as categoria\n        , montaje as tiempo\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n\n    from produccion\n\n    where montaje is not null\n        and montaje > 0\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"produccion_suelo\""}, "model.cecoc.parada_suelo": {"raw_sql": "{{ config(\n    materialized='table',\n    pre_hook='''\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    '''\n) }}\n\nwith\ntipo_obra as (\n\n    select\n          fechas\n        , tuneladoras\n        , 'Suelo' as tipo_obra\n        , case\n            when trim(anillo) <> '' then anillo::int8\n            else null\n          end anillo\n\t    , fabrica::varchar(13)\n\t    , case\n\t        when trim(posicion_clave) <> '' then posicion_clave::int8\n\t        else NULL\n\t      end posicion_clave\n\t    , case\n\t        when trim(paradas_tuneladora_revision_rdc) <> '' then paradas_tuneladora_revision_rdc::int8\n\t        else null\n\t      end tuneladora_revision_rdc\n\t    , case\n\t        when trim(paradas_tuneladora_mantenimiento) <> '' then paradas_tuneladora_mantenimiento::int8\n\t        else null\n\t      end tuneladora_mantenimiento\n\t    , case\n\t        when trim(paradas_vehiculos_averias) <> '' then paradas_vehiculos_averias::int8\n\t        else null\n\t      end vehiculos_averias\n\t    , case\n\t        when trim(paradas_vehiculos_esperas) <> '' then paradas_vehiculos_esperas::int8\n\t        else null\n\t      end vehiculos_esperas\n\t    , case\n\t        when paradas_cintas_cinta_tunel = ',' then null\n\t        when trim(paradas_cintas_cinta_tunel) <> '' then paradas_cintas_cinta_tunel::int8\n\t        else null\n\t      end cintas_cinta_tunel\n\t    , case\n\t        when trim(paradas_cintas_cinta_ext) <> '' then paradas_cintas_cinta_ext::int8\n\t        else null\n\t      end cintas_cinta_ext\n\t    , case\n\t        when trim(otras_paradas_1) <> '' then otras_paradas_1::float8::int8\n\t        else null\n\t      end otras_paradas_1\n\t    , case\n\t        when trim(otras_paradas_2) <> '' then otras_paradas_2::float8::int8\n\t        else null\n\t      end otras_paradas_2\n\t    , case\n\t        when trim(otras_paradas_3) <> '' then otras_paradas_3::float8::int8\n\t        else null\n\t      end otras_paradas_3\n\t    , case\n\t        when trim(otras_paradas_4) <> '' then otras_paradas_4::float8::int8\n\t        else null\n\t      end otras_paradas_4\n\t    , case\n\t        when trim(otras_paradas_5) <> '' then otras_paradas_5::float8::int8\n\t        else null\n\t      end otras_paradas_5\n\t    , case\n\t        when trim(otras_paradas_6) <> '' then otras_paradas_6::float8::int8\n\t        else null\n\t      end otras_paradas_6\n\t    , case\n\t        when trim(otras_paradas_7) <> '' then otras_paradas_7::float8::int8\n\t        else null\n\t      end otras_paradas_7\n\t    , case\n\t        when trim(otras_paradas_8) <> '' then otras_paradas_8::float8::int8\n\t        else null\n\t      end otras_paradas_8\n\t    , case\n\t        when trim(otras_paradas_9) <> '' then otras_paradas_9::float8::int8\n\t        else null\n\t      end otras_paradas_9\n\t    , case\n\t        when trim(otras_paradas_10) <> '' then otras_paradas_10::float8::int8\n\t        else null\n\t      end otras_paradas_10\n\t    , case\n\t        when trim(otras_paradas_11) <> '' then otras_paradas_11::float8::int8\n\t        else null\n\t      end otras_paradas_11\n\t    , case\n\t        when trim(total_paradas) <> '' then total_paradas::int8\n\t        else null\n\t      end total_paradas\n        , {{ data_type_suelo() }}\n\n\tfrom {{ source('produccion_parada','production_stops_quito_raw') }}\n\n\twhere isnumeric(anillo)\n\n),\nparadas as (\n\n    select\n\n          -- Claves subrogadas\n          {{ dbt_utils.surrogate_key([\n            'fechas',\n            'tuneladoras'\n             ]) }}::varchar(32) as dia_produccion_key\n        , {{ dbt_utils.surrogate_key([\n           'tuneladoras'\n             ]) }}::varchar(32) as tuneladora_key\n        , {{ dbt_utils.surrogate_key([\n           'fechas',\n           'anillo',\n           'tipo_obra'\n             ]) }}::varchar(32) as categoria_comentario_parada_key\n\n         -- Fact fields\n        , fechas\n        , tuneladoras\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , tuneladora_revision_rdc\n\t    , tuneladora_mantenimiento\n\t    , vehiculos_averias\n\t    , vehiculos_esperas\n\t    , cintas_cinta_tunel\n\t    , cintas_cinta_ext\n\t    , otras_paradas_1\n\t    , otras_paradas_2\n\t    , otras_paradas_3\n\t    , otras_paradas_4\n\t    , otras_paradas_5\n\t    , otras_paradas_6\n\t    , otras_paradas_7\n\t    , otras_paradas_8\n\t    , otras_paradas_9\n\t    , otras_paradas_10\n\t    , otras_paradas_11\n\t    , total_paradas\n        , long_avance\n       , peso_material_extraido_b1\n       , peso_material_extraido_b2\n       , peso_material_extraido_media\n       , inyeccion_bicomponente_vol\n       , inyeccion_bicomponente_p\n       , parametros_avance_tuneladora_empuje_total\n       , parametros_avance_tuneladora_par\n       , parametros_avance_tuneladora_v_avance\n       , parametros_avance_tuneladora_v_rotacion\n       , parametros_avance_tuneladora_presion_tierras_clave\n       , parametros_avance_tuneladora_presion_tierras_centro\n       , parametros_avance_tuneladora_presion_tierras_abajo\n       , parametros_avance_tuneladora_agua_adicionada\n       , parametros_avance_tuneladora_tratamiento_fir\n       , parametros_avance_tuneladora_tratamiento_fer\n       , geologia_auxiliar\n\n    from tipo_obra\n\t)\n\n{{ union_all_parada_suelo() }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.data_type_suelo", "macro.dbt_utils.surrogate_key", "macro.cecoc.union_all_parada_suelo"], "nodes": ["source.cecoc.produccion_parada.production_stops_quito_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": [{"sql": "\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    ", "transaction": true, "index": null}]}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "produccion_parada", "parada_suelo"], "unique_id": "model.cecoc.parada_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "produccion_parada/parada_suelo.sql", "original_file_path": "models/produccion_parada/parada_suelo.sql", "name": "parada_suelo", "alias": "parada_suelo", "checksum": {"name": "sha256", "checksum": "4e09bf5de504a81dca5b7442cb3d7ce8dd4872773937718615c47ad045777d4e"}, "tags": [], "refs": [], "sources": [["produccion_parada", "production_stops_quito_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"], ["produccion_parada", "production_stops_quito_details_raw"]], "description": "Informaci\u00f3n sobre las paradas realizadas en cada anillo de los proyectos de suelo", "columns": {"dia_produccion_key": {"name": "dia_produccion_key", "description": "Clave subrogada para cruzar con la tabla \"dia_produccion\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora_key": {"name": "tuneladora_key", "description": "Clave subrogada para cruzar con la tabla \"tuneladora\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria_comentario_parada_key": {"name": "categoria_comentario_parada_key", "description": "Clave subrogada para cruzar con la tabla \"categoria_comentario_parada\"", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fabrica": {"name": "fabrica", "description": "N\u00famero de f\u00e1brica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "posicion_clave": {"name": "posicion_clave", "description": "Posici\u00f3n clave", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda de la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tiempo": {"name": "tiempo", "description": "Tiempo invertido en la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_paradas": {"name": "total_paradas", "description": "Tiempo total invertido en paradas en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "long_avance": {"name": "long_avance", "description": "Longitud de avance", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_b1": {"name": "peso_material_extraido_b1", "description": "Peso del material extra\u00eddo (sin aditivos) B1", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_b2": {"name": "peso_material_extraido_b2", "description": "Peso del material extra\u00eddo (sin aditivos) B2", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_media": {"name": "peso_material_extraido_media", "description": "Peso medio del material extra\u00eddo (sin aditivos)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "inyeccion_bicomponente_vol": {"name": "inyeccion_bicomponente_vol", "description": "Volumen medio de inyecci\u00f3n de mortero bicomponente en relleno gap [m3]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "inyeccion_bicomponente_p": {"name": "inyeccion_bicomponente_p", "description": "Presi\u00f3n media de inyecci\u00f3n de mortero bicomponente en relleno gap [bar]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_empuje_total": {"name": "parametros_avance_tuneladora_empuje_total", "description": "Fuerza media de empuje total de todos los grupos cilindros por anillo [kN]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_par": {"name": "parametros_avance_tuneladora_par", "description": "Par motor del accionamiento principal [MNm]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_v_avance": {"name": "parametros_avance_tuneladora_v_avance", "description": "Velocidad de avance [mm/min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_v_rotacion": {"name": "parametros_avance_tuneladora_v_rotacion", "description": "Velocidad media de rotaci\u00f3n de la rueda de corte por anillo [rpm]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_clave": {"name": "parametros_avance_tuneladora_presion_tierras_clave", "description": "L\u00ednea 1 & 2 inyecci\u00f3n en la c\u00e1mara de excavaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_centro": {"name": "parametros_avance_tuneladora_presion_tierras_centro", "description": "Presi\u00f3n de aire en el frente distribuido por l\u00edneas de inyecci\u00f3n (superior, centro, abajo)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_abajo": {"name": "parametros_avance_tuneladora_presion_tierras_abajo", "description": "Presi\u00f3n de aire en el frente distribuido por l\u00edneas de inyecci\u00f3n (superior, centro, abajo)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_agua_adicionada": {"name": "parametros_avance_tuneladora_agua_adicionada", "description": "Cantidad de agua que se aporta en el frente del t\u00fanel para hacer la mezcla tensoactiva para acondicionamiento del terreno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_tratamiento_fir": {"name": "parametros_avance_tuneladora_tratamiento_fir", "description": "Ratio de inyecci\u00f3n de espuma para acondicionamiento del terreno en m\u00e1quinas de suelo. Relaci\u00f3n entre el volumen de espuma inyectada y el volumen de suelo excavado [%]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_tratamiento_fer": {"name": "parametros_avance_tuneladora_tratamiento_fer", "description": "Ratio de formaci\u00f3n de espuma para acondicionamiento del terreno en m\u00e1quinas de suelo. Relaci\u00f3n entre cantidad total de espuma y la cantidad total de soluci\u00f3n surfactante (agua + surfactante) [%]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geologia_auxiliar": {"name": "geologia_auxiliar", "description": "Geolog\u00eda del anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "comentario": {"name": "comentario", "description": "Comentario sobre la parada", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "docs": {"show": true}, "patch_path": "cecoc://models/schema.yml", "compiled_path": "target/compiled/cecoc/models/produccion_parada/parada_suelo.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table", "pre-hook": ["\n    CREATE OR REPLACE FUNCTION isnumeric(text) RETURNS BOOLEAN AS $$\n        DECLARE x NUMERIC;\n        BEGIN\n        x = $1::NUMERIC;\n        RETURN TRUE;\n        EXCEPTION WHEN others THEN\n            RETURN FALSE;\n        END;\n        $$\n        STRICT\n        LANGUAGE plpgsql IMMUTABLE;\n    "]}, "created_at": 1637696439, "compiled_sql": "\n\nwith\ntipo_obra as (\n\n    select\n          fechas\n        , tuneladoras\n        , 'Suelo' as tipo_obra\n        , case\n            when trim(anillo) <> '' then anillo::int8\n            else null\n          end anillo\n\t    , fabrica::varchar(13)\n\t    , case\n\t        when trim(posicion_clave) <> '' then posicion_clave::int8\n\t        else NULL\n\t      end posicion_clave\n\t    , case\n\t        when trim(paradas_tuneladora_revision_rdc) <> '' then paradas_tuneladora_revision_rdc::int8\n\t        else null\n\t      end tuneladora_revision_rdc\n\t    , case\n\t        when trim(paradas_tuneladora_mantenimiento) <> '' then paradas_tuneladora_mantenimiento::int8\n\t        else null\n\t      end tuneladora_mantenimiento\n\t    , case\n\t        when trim(paradas_vehiculos_averias) <> '' then paradas_vehiculos_averias::int8\n\t        else null\n\t      end vehiculos_averias\n\t    , case\n\t        when trim(paradas_vehiculos_esperas) <> '' then paradas_vehiculos_esperas::int8\n\t        else null\n\t      end vehiculos_esperas\n\t    , case\n\t        when paradas_cintas_cinta_tunel = ',' then null\n\t        when trim(paradas_cintas_cinta_tunel) <> '' then paradas_cintas_cinta_tunel::int8\n\t        else null\n\t      end cintas_cinta_tunel\n\t    , case\n\t        when trim(paradas_cintas_cinta_ext) <> '' then paradas_cintas_cinta_ext::int8\n\t        else null\n\t      end cintas_cinta_ext\n\t    , case\n\t        when trim(otras_paradas_1) <> '' then otras_paradas_1::float8::int8\n\t        else null\n\t      end otras_paradas_1\n\t    , case\n\t        when trim(otras_paradas_2) <> '' then otras_paradas_2::float8::int8\n\t        else null\n\t      end otras_paradas_2\n\t    , case\n\t        when trim(otras_paradas_3) <> '' then otras_paradas_3::float8::int8\n\t        else null\n\t      end otras_paradas_3\n\t    , case\n\t        when trim(otras_paradas_4) <> '' then otras_paradas_4::float8::int8\n\t        else null\n\t      end otras_paradas_4\n\t    , case\n\t        when trim(otras_paradas_5) <> '' then otras_paradas_5::float8::int8\n\t        else null\n\t      end otras_paradas_5\n\t    , case\n\t        when trim(otras_paradas_6) <> '' then otras_paradas_6::float8::int8\n\t        else null\n\t      end otras_paradas_6\n\t    , case\n\t        when trim(otras_paradas_7) <> '' then otras_paradas_7::float8::int8\n\t        else null\n\t      end otras_paradas_7\n\t    , case\n\t        when trim(otras_paradas_8) <> '' then otras_paradas_8::float8::int8\n\t        else null\n\t      end otras_paradas_8\n\t    , case\n\t        when trim(otras_paradas_9) <> '' then otras_paradas_9::float8::int8\n\t        else null\n\t      end otras_paradas_9\n\t    , case\n\t        when trim(otras_paradas_10) <> '' then otras_paradas_10::float8::int8\n\t        else null\n\t      end otras_paradas_10\n\t    , case\n\t        when trim(otras_paradas_11) <> '' then otras_paradas_11::float8::int8\n\t        else null\n\t      end otras_paradas_11\n\t    , case\n\t        when trim(total_paradas) <> '' then total_paradas::int8\n\t        else null\n\t      end total_paradas\n        , case\n            when trim(long_avance) <> '' then long_avance::float8\n            else null\n         end long_avance\n       , case\n            when peso_material_extraido_b1 = '_' then null\n            when trim(peso_material_extraido_b1) <> '' then peso_material_extraido_b1::float8\n            else null\n         end peso_material_extraido_b1\n       , case\n            when trim(peso_material_extraido_b2) = '_' then null\n            when trim(peso_material_extraido_b2) <> '' then peso_material_extraido_b2::float8\n            else null\n         end peso_material_extraido_b2\n       , case\n            when trim(peso_material_extraido_media) = '_' then null\n            when trim(peso_material_extraido_media) <> '' then peso_material_extraido_media::float8\n            else null\n         end peso_material_extraido_media\n       , case\n            when not isnumeric(inyeccion_bicomponente_vol) then null\n            when inyeccion_bicomponente_vol = 'No se inyecta' then 0::float8\n            when inyeccion_bicomponente_vol = 'No se registra' then null\n            when trim(inyeccion_bicomponente_vol) <> '' then inyeccion_bicomponente_vol::float8\n            else null\n         end inyeccion_bicomponente_vol\n       , case\n            when trim(inyeccion_bicomponente_p) <> '' then replace(replace(inyeccion_bicomponente_p,' ',''),',','.')::float8\n            else null\n         end inyeccion_bicomponente_p\n       , case\n            when trim(parametros_avance_tuneladora_empuje_total) <> '' then parametros_avance_tuneladora_empuje_total::float8\n            else null\n         end parametros_avance_tuneladora_empuje_total\n       , case\n            when trim(parametros_avance_tuneladora_par) <> '' then parametros_avance_tuneladora_par::float8\n            else null\n         end parametros_avance_tuneladora_par\n       , case\n            when not isnumeric(parametros_avance_tuneladora_v_avance) then null\n            else parametros_avance_tuneladora_v_avance::float8\n         end parametros_avance_tuneladora_v_avance\n       , case\n            when not isnumeric(parametros_avance_tuneladora_v_rotacion) then null\n            when trim(parametros_avance_tuneladora_v_rotacion) <> '' then parametros_avance_tuneladora_v_rotacion::float8\n            else null\n         end parametros_avance_tuneladora_v_rotacion\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_clave) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_clave) <> '' then parametros_avance_tuneladora_presion_tierras_clave::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_clave\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_centro) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_centro) <> '' then parametros_avance_tuneladora_presion_tierras_centro::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_centro\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_abajo) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_abajo) <> '' then parametros_avance_tuneladora_presion_tierras_abajo::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_abajo\n       , case\n            when not isnumeric(parametros_avance_tuneladora_agua_adicionada) then null\n            when trim(parametros_avance_tuneladora_agua_adicionada) <> '' then replace(parametros_avance_tuneladora_agua_adicionada,' ','')::float8\n            else null\n         end parametros_avance_tuneladora_agua_adicionada\n       , case\n            when trim(parametros_avance_tuneladora_tratamiento_fir) <> '' then parametros_avance_tuneladora_tratamiento_fir::float8\n            else null\n         end parametros_avance_tuneladora_tratamiento_fir\n       , case\n            when trim(parametros_avance_tuneladora_tratamiento_fer) <> '' then replace(parametros_avance_tuneladora_tratamiento_fer,',','.')::float8\n            else null\n         end parametros_avance_tuneladora_tratamiento_fer\n       , geo::varchar(19) as geologia_auxiliar\n\n\tfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_raw\"\n\n\twhere isnumeric(anillo)\n\n),\nparadas as (\n\n    select\n\n          -- Claves subrogadas\n          md5(cast(coalesce(cast(fechas as \n    varchar\n), '') || '-' || coalesce(cast(tuneladoras as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as dia_produccion_key\n        , md5(cast(coalesce(cast(tuneladoras as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as tuneladora_key\n        , md5(cast(coalesce(cast(fechas as \n    varchar\n), '') || '-' || coalesce(cast(anillo as \n    varchar\n), '') || '-' || coalesce(cast(tipo_obra as \n    varchar\n), '') as \n    varchar\n))::varchar(32) as categoria_comentario_parada_key\n\n         -- Fact fields\n        , fechas\n        , tuneladoras\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , tuneladora_revision_rdc\n\t    , tuneladora_mantenimiento\n\t    , vehiculos_averias\n\t    , vehiculos_esperas\n\t    , cintas_cinta_tunel\n\t    , cintas_cinta_ext\n\t    , otras_paradas_1\n\t    , otras_paradas_2\n\t    , otras_paradas_3\n\t    , otras_paradas_4\n\t    , otras_paradas_5\n\t    , otras_paradas_6\n\t    , otras_paradas_7\n\t    , otras_paradas_8\n\t    , otras_paradas_9\n\t    , otras_paradas_10\n\t    , otras_paradas_11\n\t    , total_paradas\n        , long_avance\n       , peso_material_extraido_b1\n       , peso_material_extraido_b2\n       , peso_material_extraido_media\n       , inyeccion_bicomponente_vol\n       , inyeccion_bicomponente_p\n       , parametros_avance_tuneladora_empuje_total\n       , parametros_avance_tuneladora_par\n       , parametros_avance_tuneladora_v_avance\n       , parametros_avance_tuneladora_v_rotacion\n       , parametros_avance_tuneladora_presion_tierras_clave\n       , parametros_avance_tuneladora_presion_tierras_centro\n       , parametros_avance_tuneladora_presion_tierras_abajo\n       , parametros_avance_tuneladora_agua_adicionada\n       , parametros_avance_tuneladora_tratamiento_fir\n       , parametros_avance_tuneladora_tratamiento_fer\n       , geologia_auxiliar\n\n    from tipo_obra\n\t)\n\n\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , 'tuneladora_revision_rdc'::varchar(24) as categoria\n        , tuneladora_revision_rdc as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where tuneladora_revision_rdc is not null\n        and tuneladora_revision_rdc > 0\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , 'tuneladora_mantenimiento'::varchar(24) as categoria\n        , tuneladora_mantenimiento as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where tuneladora_mantenimiento is not null\n        and tuneladora_mantenimiento > 0\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , 'vehiculos_averias'::varchar(24) as categoria\n        , vehiculos_averias as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where vehiculos_averias is not null\n        and vehiculos_averias > 0\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , 'vehiculos_esperas'::varchar(24) as categoria\n        , vehiculos_esperas as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where vehiculos_esperas is not null\n        and vehiculos_esperas > 0\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , 'cintas_cinta_tunel'::varchar(24) as categoria\n        , cintas_cinta_tunel as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where cintas_cinta_tunel is not null\n        and cintas_cinta_tunel > 0\n\n    union all\n\n    \n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , 'cintas_cinta_ext'::varchar(24) as categoria\n        , cintas_cinta_ext as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where cintas_cinta_ext is not null\n        and cintas_cinta_ext > 0\n\n    \n\n    \n\n    union all\n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_1 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_1_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_1 is not null\n            and otras_paradas_1 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_2 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_2_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_2 is not null\n            and otras_paradas_2 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_3 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_3_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_3 is not null\n            and otras_paradas_3 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_4 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_4_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_4 is not null\n            and otras_paradas_4 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_5 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_5_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_5 is not null\n            and otras_paradas_5 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_6 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_6_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_6 is not null\n            and otras_paradas_6 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_7 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_7_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_7 is not null\n            and otras_paradas_7 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_8 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_8_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_8 is not null\n            and otras_paradas_8 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_9 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_9_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_9 is not null\n            and otras_paradas_9 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_10 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_10_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_10 is not null\n            and otras_paradas_10 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    union all\n\n    \n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , otras_paradas_11 as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.otras_paradas_11_obs::varchar(632) as comentario\n\n        from paradas\n            left join \"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\" otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where otras_paradas_11 is not null\n            and otras_paradas_11 > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    \n\n    ", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"parada_suelo\""}, "model.cecoc.pbi_consumo_medio_grasa_cola": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador_dos_sensores('grasa_cola', 1224, 10970) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador_dos_sensores"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_consumo_medio_grasa_cola"], "unique_id": "model.cecoc.pbi_consumo_medio_grasa_cola", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_consumo_medio_grasa_cola.sql", "original_file_path": "models/contadores/pbi_consumo_medio_grasa_cola.sql", "name": "pbi_consumo_medio_grasa_cola", "alias": "pbi_consumo_medio_grasa_cola", "checksum": {"name": "sha256", "checksum": "bc99345637a59c12000473a0a0769bc0439390da8b01362048b495adfdb4d80f"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_consumo_medio_grasa_cola.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n\tselect anillo, tuneladora_key, sum(valor_medio) as valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1224\n\t    or id_sensor = 10970\n\t    group by 1,2\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n\t geologia_litologia.litologia_principal\n\t,geologia_litologia.litologia_secundaria\n\t,geologia_litologia.anillo\n\t,geologia_litologia.tuneladora_key\n\t,avg(contador.valor_medio) as grasa_cola\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_consumo_medio_grasa_cola\""}, "model.cecoc.pbi_contadores": {"raw_sql": "with\ngeologia_litologia as (\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from {{ ref('geologia') }} geologia\n    left join {{ ref('litologia') }} litologia using (litologia_key)\n)\nselect\n\t geologia_litologia.litologia_principal\n\t,geologia_litologia.litologia_secundaria\n\t,geologia_litologia.anillo\n\t,geologia_litologia.tuneladora_key\n\t,avg(penetracion_media.penetracion_media) as penetracion_media\n\t,avg(velocidad_media_rotacion.velocidad_media_rotacion) as velocidad_media_rotacion\n\t,avg(empuje_medio.empuje_medio) as empuje_medio\n\t,avg(par_medio.par_medio) as par_medio\n\t,avg(velocidad_avance_medio.velocidad_avance_medio) as velocidad_avance_medio\n\t,avg(sensor_clave.sensor_clave) as sensor_clave\n\t,avg(fer.fer) as fer\n\t,avg(fir.fir) as fir\n\t,avg(numero_anillos.numero_anillos) as numero_anillos\n\t,avg(tiempo_medio_excavacion.tiempo_medio_excavacion) as tiempo_medio_excavacion\n\t,avg(tiempo_medio_colocacion.tiempo_medio_colocacion) as tiempo_medio_colocacion\n\t,avg(grasa_cola.grasa_cola) as grasa_cola\n\t,avg(ep2.ep2) as ep2\n\t,avg(polimeros.polimeros) as polimeros\n\t,avg(agua.agua) as agua\n\t,avg(bentonita.bentonita) as bentonita\n\t,avg(energia_electrica.energia_electrica) as energia_electrica\nfrom\n\tgeologia_litologia\nleft join cecoc.pbi_parametro_avance_penetracion_media penetracion_media using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_velocidad_media_rotacion velocidad_media_rotacion using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_empuje_medio empuje_medio using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_par_medio par_medio using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_velocidad_avance_medio velocidad_avance_medio using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_sensor_clave sensor_clave using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_fer fer using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_fir fir using (anillo, tuneladora_key)\nleft join cecoc.pbi_tiempo_avance_numero_anillos numero_anillos using (anillo, tuneladora_key)\nleft join cecoc.pbi_tiempo_avance_tiempo_medio_excavacion tiempo_medio_excavacion using (anillo, tuneladora_key)\nleft join cecoc.pbi_tiempo_avance_tiempo_medio_colocacion tiempo_medio_colocacion using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_grasa_cola grasa_cola using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_ep2 ep2 using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_polimeros polimeros using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_agua agua using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_bentonita bentonita using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_energia_electrica energia_electrica using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "compiled": true, "resource_type": "model", "depends_on": {"macros": [], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "view", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_contadores"], "unique_id": "model.cecoc.pbi_contadores", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_contadores.sql", "original_file_path": "models/contadores/pbi_contadores.sql", "name": "pbi_contadores", "alias": "pbi_contadores", "checksum": {"name": "sha256", "checksum": "f0f9123496df52d0ca5a509502dc10524997174e7e409cc186fb5ed105f7ccfb"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_contadores.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "view"}, "created_at": 1637696438, "compiled_sql": "with\ngeologia_litologia as (\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n)\nselect\n\t geologia_litologia.litologia_principal\n\t,geologia_litologia.litologia_secundaria\n\t,geologia_litologia.anillo\n\t,geologia_litologia.tuneladora_key\n\t,avg(penetracion_media.penetracion_media) as penetracion_media\n\t,avg(velocidad_media_rotacion.velocidad_media_rotacion) as velocidad_media_rotacion\n\t,avg(empuje_medio.empuje_medio) as empuje_medio\n\t,avg(par_medio.par_medio) as par_medio\n\t,avg(velocidad_avance_medio.velocidad_avance_medio) as velocidad_avance_medio\n\t,avg(sensor_clave.sensor_clave) as sensor_clave\n\t,avg(fer.fer) as fer\n\t,avg(fir.fir) as fir\n\t,avg(numero_anillos.numero_anillos) as numero_anillos\n\t,avg(tiempo_medio_excavacion.tiempo_medio_excavacion) as tiempo_medio_excavacion\n\t,avg(tiempo_medio_colocacion.tiempo_medio_colocacion) as tiempo_medio_colocacion\n\t,avg(grasa_cola.grasa_cola) as grasa_cola\n\t,avg(ep2.ep2) as ep2\n\t,avg(polimeros.polimeros) as polimeros\n\t,avg(agua.agua) as agua\n\t,avg(bentonita.bentonita) as bentonita\n\t,avg(energia_electrica.energia_electrica) as energia_electrica\nfrom\n\tgeologia_litologia\nleft join cecoc.pbi_parametro_avance_penetracion_media penetracion_media using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_velocidad_media_rotacion velocidad_media_rotacion using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_empuje_medio empuje_medio using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_par_medio par_medio using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_velocidad_avance_medio velocidad_avance_medio using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_sensor_clave sensor_clave using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_fer fer using (anillo, tuneladora_key)\nleft join cecoc.pbi_parametro_avance_fir fir using (anillo, tuneladora_key)\nleft join cecoc.pbi_tiempo_avance_numero_anillos numero_anillos using (anillo, tuneladora_key)\nleft join cecoc.pbi_tiempo_avance_tiempo_medio_excavacion tiempo_medio_excavacion using (anillo, tuneladora_key)\nleft join cecoc.pbi_tiempo_avance_tiempo_medio_colocacion tiempo_medio_colocacion using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_grasa_cola grasa_cola using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_ep2 ep2 using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_polimeros polimeros using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_agua agua using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_bentonita bentonita using (anillo, tuneladora_key)\nleft join cecoc.pbi_consumo_medio_energia_electrica energia_electrica using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_contadores\""}, "model.cecoc.pbi_parametro_avance_velocidad_media_rotacion": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('velocidad_media_rotacion', 1142) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_velocidad_media_rotacion"], "unique_id": "model.cecoc.pbi_parametro_avance_velocidad_media_rotacion", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_velocidad_media_rotacion.sql", "original_file_path": "models/contadores/pbi_parametro_avance_velocidad_media_rotacion.sql", "name": "pbi_parametro_avance_velocidad_media_rotacion", "alias": "pbi_parametro_avance_velocidad_media_rotacion", "checksum": {"name": "sha256", "checksum": "f59842a21ac498d3cd4a5318be0d6b0b60831af149603d903197dfa7e5ab29b0"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_velocidad_media_rotacion.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1142\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as velocidad_media_rotacion\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_velocidad_media_rotacion\""}, "model.cecoc.pbi_consumo_medio_energia_electrica": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador_dos_sensores('energia_electrica', 10949, 10952) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador_dos_sensores"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_consumo_medio_energia_electrica"], "unique_id": "model.cecoc.pbi_consumo_medio_energia_electrica", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_consumo_medio_energia_electrica.sql", "original_file_path": "models/contadores/pbi_consumo_medio_energia_electrica.sql", "name": "pbi_consumo_medio_energia_electrica", "alias": "pbi_consumo_medio_energia_electrica", "checksum": {"name": "sha256", "checksum": "40139bc9c44cddfdf4f68740877388cd6130c746cb373fafb9cd5e0a06cf5155"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_consumo_medio_energia_electrica.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n\tselect anillo, tuneladora_key, sum(valor_medio) as valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 10949\n\t    or id_sensor = 10952\n\t    group by 1,2\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n\t geologia_litologia.litologia_principal\n\t,geologia_litologia.litologia_secundaria\n\t,geologia_litologia.anillo\n\t,geologia_litologia.tuneladora_key\n\t,avg(contador.valor_medio) as energia_electrica\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_consumo_medio_energia_electrica\""}, "model.cecoc.pbi_parametro_avance_fer": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('fer', 2058) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_fer"], "unique_id": "model.cecoc.pbi_parametro_avance_fer", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_fer.sql", "original_file_path": "models/contadores/pbi_parametro_avance_fer.sql", "name": "pbi_parametro_avance_fer", "alias": "pbi_parametro_avance_fer", "checksum": {"name": "sha256", "checksum": "efc4180655007b37ed66cbb8d58c9e92bdb0d48017f56d79efbe5c9937b580f8"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_fer.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 2058\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as fer\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_fer\""}, "model.cecoc.pbi_tiempo_avance_tiempo_medio_colocacion": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('tiempo_medio_colocacion', 1045) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_tiempo_avance_tiempo_medio_colocacion"], "unique_id": "model.cecoc.pbi_tiempo_avance_tiempo_medio_colocacion", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_tiempo_avance_tiempo_medio_colocacion.sql", "original_file_path": "models/contadores/pbi_tiempo_avance_tiempo_medio_colocacion.sql", "name": "pbi_tiempo_avance_tiempo_medio_colocacion", "alias": "pbi_tiempo_avance_tiempo_medio_colocacion", "checksum": {"name": "sha256", "checksum": "f807da287dd9b3baae2c9a08d610c71e0b56e59e31ea8258dafaeefd9011bba1"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_tiempo_avance_tiempo_medio_colocacion.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1045\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as tiempo_medio_colocacion\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_tiempo_avance_tiempo_medio_colocacion\""}, "model.cecoc.pbi_parametro_avance_empuje_medio": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('empuje_medio', 1140) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_empuje_medio"], "unique_id": "model.cecoc.pbi_parametro_avance_empuje_medio", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_empuje_medio.sql", "original_file_path": "models/contadores/pbi_parametro_avance_empuje_medio.sql", "name": "pbi_parametro_avance_empuje_medio", "alias": "pbi_parametro_avance_empuje_medio", "checksum": {"name": "sha256", "checksum": "260ae224bc53664550ec2f549a36a491c62fb767982cf8cc20dc5e5ba33cb405"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_empuje_medio.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1140\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as empuje_medio\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_empuje_medio\""}, "model.cecoc.pbi_consumo_medio_ep2": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('ep2', 1212) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_consumo_medio_ep2"], "unique_id": "model.cecoc.pbi_consumo_medio_ep2", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_consumo_medio_ep2.sql", "original_file_path": "models/contadores/pbi_consumo_medio_ep2.sql", "name": "pbi_consumo_medio_ep2", "alias": "pbi_consumo_medio_ep2", "checksum": {"name": "sha256", "checksum": "69fb8cd8a2410019d0db2c020bd722b07a8c1665061acbc8edaca8379d891d9b"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_consumo_medio_ep2.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1212\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as ep2\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_consumo_medio_ep2\""}, "model.cecoc.pbi_parametro_avance_sensor_clave": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('sensor_clave', 117) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_sensor_clave"], "unique_id": "model.cecoc.pbi_parametro_avance_sensor_clave", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_sensor_clave.sql", "original_file_path": "models/contadores/pbi_parametro_avance_sensor_clave.sql", "name": "pbi_parametro_avance_sensor_clave", "alias": "pbi_parametro_avance_sensor_clave", "checksum": {"name": "sha256", "checksum": "7cb2904c3b2302bb4c64de65ea28c76db66bbc52661e4d68f39d532d05cb9da7"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_sensor_clave.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 117\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as sensor_clave\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_sensor_clave\""}, "model.cecoc.pbi_tiempo_avance_tiempo_medio_excavacion": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('tiempo_medio_excavacion', 1044) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_tiempo_avance_tiempo_medio_excavacion"], "unique_id": "model.cecoc.pbi_tiempo_avance_tiempo_medio_excavacion", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_tiempo_avance_tiempo_medio_excavacion.sql", "original_file_path": "models/contadores/pbi_tiempo_avance_tiempo_medio_excavacion.sql", "name": "pbi_tiempo_avance_tiempo_medio_excavacion", "alias": "pbi_tiempo_avance_tiempo_medio_excavacion", "checksum": {"name": "sha256", "checksum": "b84b8d211aa3707a63749b173f5d16b80e3b714ee13d57b8b321ff1733aa715d"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_tiempo_avance_tiempo_medio_excavacion.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1044\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as tiempo_medio_excavacion\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_tiempo_avance_tiempo_medio_excavacion\""}, "model.cecoc.pbi_tiempo_avance_numero_anillos": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('numero_anillos', 147) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_tiempo_avance_numero_anillos"], "unique_id": "model.cecoc.pbi_tiempo_avance_numero_anillos", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_tiempo_avance_numero_anillos.sql", "original_file_path": "models/contadores/pbi_tiempo_avance_numero_anillos.sql", "name": "pbi_tiempo_avance_numero_anillos", "alias": "pbi_tiempo_avance_numero_anillos", "checksum": {"name": "sha256", "checksum": "389356d449a636471ac660fbb801359174b2584cc40f5b6bafcbfcf0353374d7"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_tiempo_avance_numero_anillos.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 147\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as numero_anillos\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_tiempo_avance_numero_anillos\""}, "model.cecoc.pbi_consumo_medio_bentonita": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador_dos_sensores('bentonita', 1466, 1655) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador_dos_sensores"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_consumo_medio_bentonita"], "unique_id": "model.cecoc.pbi_consumo_medio_bentonita", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_consumo_medio_bentonita.sql", "original_file_path": "models/contadores/pbi_consumo_medio_bentonita.sql", "name": "pbi_consumo_medio_bentonita", "alias": "pbi_consumo_medio_bentonita", "checksum": {"name": "sha256", "checksum": "8d44de9bdc6b2790e0a0d30e68238332c8da83c4db6e901a290044e19c96b3f6"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_consumo_medio_bentonita.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n\tselect anillo, tuneladora_key, sum(valor_medio) as valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1466\n\t    or id_sensor = 1655\n\t    group by 1,2\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n\t geologia_litologia.litologia_principal\n\t,geologia_litologia.litologia_secundaria\n\t,geologia_litologia.anillo\n\t,geologia_litologia.tuneladora_key\n\t,avg(contador.valor_medio) as bentonita\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_consumo_medio_bentonita\""}, "model.cecoc.pbi_parametro_avance_velocidad_avance_medio": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('velocidad_avance_medio', 1137) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_velocidad_avance_medio"], "unique_id": "model.cecoc.pbi_parametro_avance_velocidad_avance_medio", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_velocidad_avance_medio.sql", "original_file_path": "models/contadores/pbi_parametro_avance_velocidad_avance_medio.sql", "name": "pbi_parametro_avance_velocidad_avance_medio", "alias": "pbi_parametro_avance_velocidad_avance_medio", "checksum": {"name": "sha256", "checksum": "0ca7a769853e5971dfb0f46bfcec32e2869c62511fc03ceb62cdc6578b472a62"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_velocidad_avance_medio.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1137\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as velocidad_avance_medio\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_velocidad_avance_medio\""}, "model.cecoc.pbi_parametro_avance_penetracion_media": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('penetracion_media', 1138) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_penetracion_media"], "unique_id": "model.cecoc.pbi_parametro_avance_penetracion_media", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_penetracion_media.sql", "original_file_path": "models/contadores/pbi_parametro_avance_penetracion_media.sql", "name": "pbi_parametro_avance_penetracion_media", "alias": "pbi_parametro_avance_penetracion_media", "checksum": {"name": "sha256", "checksum": "f16480a5f3b8807cc41a7dd0abf36783a2dd92b551774edcd318c6e833198071"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_penetracion_media.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1138\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as penetracion_media\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_penetracion_media\""}, "model.cecoc.pbi_parametro_avance_par_medio": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('par_medio', 1139) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_par_medio"], "unique_id": "model.cecoc.pbi_parametro_avance_par_medio", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_par_medio.sql", "original_file_path": "models/contadores/pbi_parametro_avance_par_medio.sql", "name": "pbi_parametro_avance_par_medio", "alias": "pbi_parametro_avance_par_medio", "checksum": {"name": "sha256", "checksum": "19f5b1cb2b2573530a8901203e814262189df42aea04da169cd0e71db7444f5c"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_par_medio.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 1139\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as par_medio\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_par_medio\""}, "model.cecoc.pbi_consumo_medio_polimeros": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('polimeros', 2019) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_consumo_medio_polimeros"], "unique_id": "model.cecoc.pbi_consumo_medio_polimeros", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_consumo_medio_polimeros.sql", "original_file_path": "models/contadores/pbi_consumo_medio_polimeros.sql", "name": "pbi_consumo_medio_polimeros", "alias": "pbi_consumo_medio_polimeros", "checksum": {"name": "sha256", "checksum": "2dc5cc4e02a544366e7838030f1c29b3d1ac26a2b83f572490a31e63c08aad84"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_consumo_medio_polimeros.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 2019\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as polimeros\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_consumo_medio_polimeros\""}, "model.cecoc.pbi_parametro_avance_fir": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('fir', 2117) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_parametro_avance_fir"], "unique_id": "model.cecoc.pbi_parametro_avance_fir", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_parametro_avance_fir.sql", "original_file_path": "models/contadores/pbi_parametro_avance_fir.sql", "name": "pbi_parametro_avance_fir", "alias": "pbi_parametro_avance_fir", "checksum": {"name": "sha256", "checksum": "9d09fe5852b6d1a9fd3c1492575af1bf0d955b8b89ae27ef29482dd788d90eb9"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_parametro_avance_fir.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 2117\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as fir\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_parametro_avance_fir\""}, "model.cecoc.pbi_consumo_medio_agua": {"raw_sql": "{{ config(\n    materialized='table',\n) }}\n\n{{ contador('agua', 2018) }}", "compiled": true, "resource_type": "model", "depends_on": {"macros": ["macro.cecoc.contador"], "nodes": ["model.cecoc.geologia", "model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": null, "database": null, "tags": [], "meta": {}, "materialized": "table", "persist_docs": {"relation": true, "columns": true}, "quoting": {}, "column_types": {}, "full_refresh": null, "on_schema_change": "ignore", "post-hook": [], "pre-hook": []}, "database": "cct-analitico-prototipo-database", "schema": "cecoc", "fqn": ["cecoc", "contadores", "pbi_consumo_medio_agua"], "unique_id": "model.cecoc.pbi_consumo_medio_agua", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "contadores/pbi_consumo_medio_agua.sql", "original_file_path": "models/contadores/pbi_consumo_medio_agua.sql", "name": "pbi_consumo_medio_agua", "alias": "pbi_consumo_medio_agua", "checksum": {"name": "sha256", "checksum": "17a6d59d352181abe592d3afc8d2c6bdaebfc6bc3ea38ac8529c82bf5e1d6f3c"}, "tags": [], "refs": [["geologia"], ["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/contadores/pbi_consumo_medio_agua.sql", "build_path": null, "deferred": false, "unrendered_config": {"persist_docs": {"relation": true, "columns": true}, "materialized": "table"}, "created_at": 1637696438, "compiled_sql": "\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = 2018\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia\" geologia\n    left join \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\" litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as agua\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"pbi_consumo_medio_agua\""}, "test.cecoc.unique_litologia_litologia_key.c3bdbb7024": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "litologia_key", "model": "{{ get_where_subquery(ref('litologia')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_litologia_litologia_key"], "unique_id": "test.cecoc.unique_litologia_litologia_key.c3bdbb7024", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_litologia_litologia_key.sql", "original_file_path": "models/schema.yml", "name": "unique_litologia_litologia_key", "alias": "unique_litologia_litologia_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_litologia_litologia_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    litologia_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\"\nwhere litologia_key is not null\ngroup by litologia_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "litologia_key"}, "test.cecoc.not_null_litologia_litologia_key.d0195ccac6": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "litologia_key", "model": "{{ get_where_subquery(ref('litologia')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.litologia"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_litologia_litologia_key"], "unique_id": "test.cecoc.not_null_litologia_litologia_key.d0195ccac6", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_litologia_litologia_key.sql", "original_file_path": "models/schema.yml", "name": "not_null_litologia_litologia_key", "alias": "not_null_litologia_litologia_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["litologia"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_litologia_litologia_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"litologia\"\nwhere litologia_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "litologia_key"}, "test.cecoc.unique_categoria_comentario_parada_categoria_comentario_parada_key.302cd19c63": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}{{ config(alias=\"unique_categoria_comentario_pa_92ee6e1326b60cccbced1823e4bc918e\") }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "categoria_comentario_parada_key", "model": "{{ get_where_subquery(ref('categoria_comentario_parada')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.categoria_comentario_parada"]}, "config": {"enabled": true, "alias": "unique_categoria_comentario_pa_92ee6e1326b60cccbced1823e4bc918e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_categoria_comentario_parada_categoria_comentario_parada_key"], "unique_id": "test.cecoc.unique_categoria_comentario_parada_categoria_comentario_parada_key.302cd19c63", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_categoria_comentario_pa_92ee6e1326b60cccbced1823e4bc918e.sql", "original_file_path": "models/schema.yml", "name": "unique_categoria_comentario_parada_categoria_comentario_parada_key", "alias": "unique_categoria_comentario_pa_92ee6e1326b60cccbced1823e4bc918e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["categoria_comentario_parada"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_categoria_comentario_pa_92ee6e1326b60cccbced1823e4bc918e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_categoria_comentario_pa_92ee6e1326b60cccbced1823e4bc918e"}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    categoria_comentario_parada_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada\"\nwhere categoria_comentario_parada_key is not null\ngroup by categoria_comentario_parada_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "categoria_comentario_parada_key"}, "test.cecoc.not_null_categoria_comentario_parada_categoria_comentario_parada_key.29fb82a45d": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"not_null_categoria_comentario__d2f3dea8dcb283fd23fc345dc09620d5\") }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "categoria_comentario_parada_key", "model": "{{ get_where_subquery(ref('categoria_comentario_parada')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.categoria_comentario_parada"]}, "config": {"enabled": true, "alias": "not_null_categoria_comentario__d2f3dea8dcb283fd23fc345dc09620d5", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_categoria_comentario_parada_categoria_comentario_parada_key"], "unique_id": "test.cecoc.not_null_categoria_comentario_parada_categoria_comentario_parada_key.29fb82a45d", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_categoria_comentario__d2f3dea8dcb283fd23fc345dc09620d5.sql", "original_file_path": "models/schema.yml", "name": "not_null_categoria_comentario_parada_categoria_comentario_parada_key", "alias": "not_null_categoria_comentario__d2f3dea8dcb283fd23fc345dc09620d5", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["categoria_comentario_parada"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_categoria_comentario__d2f3dea8dcb283fd23fc345dc09620d5.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_categoria_comentario__d2f3dea8dcb283fd23fc345dc09620d5"}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada\"\nwhere categoria_comentario_parada_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "categoria_comentario_parada_key"}, "test.cecoc.unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key.48cbe4d90d": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}{{ config(alias=\"unique_categoria_comentario_pa_8845916a63b4adb1438a7ca7f1dc0db2\") }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "categoria_comentario_parada_key", "model": "{{ get_where_subquery(ref('categoria_comentario_parada_suelo')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.categoria_comentario_parada_suelo"]}, "config": {"enabled": true, "alias": "unique_categoria_comentario_pa_8845916a63b4adb1438a7ca7f1dc0db2", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key"], "unique_id": "test.cecoc.unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key.48cbe4d90d", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_categoria_comentario_pa_8845916a63b4adb1438a7ca7f1dc0db2.sql", "original_file_path": "models/schema.yml", "name": "unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key", "alias": "unique_categoria_comentario_pa_8845916a63b4adb1438a7ca7f1dc0db2", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["categoria_comentario_parada_suelo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_categoria_comentario_pa_8845916a63b4adb1438a7ca7f1dc0db2.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "unique_categoria_comentario_pa_8845916a63b4adb1438a7ca7f1dc0db2"}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    categoria_comentario_parada_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada_suelo\"\nwhere categoria_comentario_parada_key is not null\ngroup by categoria_comentario_parada_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "categoria_comentario_parada_key"}, "test.cecoc.not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key.465d45a3cf": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}{{ config(alias=\"not_null_categoria_comentario__7fc0cc7c0b6dec3e86973a893f218b0e\") }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "categoria_comentario_parada_key", "model": "{{ get_where_subquery(ref('categoria_comentario_parada_suelo')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.categoria_comentario_parada_suelo"]}, "config": {"enabled": true, "alias": "not_null_categoria_comentario__7fc0cc7c0b6dec3e86973a893f218b0e", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key"], "unique_id": "test.cecoc.not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key.465d45a3cf", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_categoria_comentario__7fc0cc7c0b6dec3e86973a893f218b0e.sql", "original_file_path": "models/schema.yml", "name": "not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key", "alias": "not_null_categoria_comentario__7fc0cc7c0b6dec3e86973a893f218b0e", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["categoria_comentario_parada_suelo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_categoria_comentario__7fc0cc7c0b6dec3e86973a893f218b0e.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "not_null_categoria_comentario__7fc0cc7c0b6dec3e86973a893f218b0e"}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"categoria_comentario_parada_suelo\"\nwhere categoria_comentario_parada_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "categoria_comentario_parada_key"}, "test.cecoc.unique_dia_produccion_roca_dia_produccion_key.579b5680fe": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "dia_produccion_key", "model": "{{ get_where_subquery(ref('dia_produccion_roca')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.dia_produccion_roca"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_dia_produccion_roca_dia_produccion_key"], "unique_id": "test.cecoc.unique_dia_produccion_roca_dia_produccion_key.579b5680fe", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_dia_produccion_roca_dia_produccion_key.sql", "original_file_path": "models/schema.yml", "name": "unique_dia_produccion_roca_dia_produccion_key", "alias": "unique_dia_produccion_roca_dia_produccion_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["dia_produccion_roca"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_dia_produccion_roca_dia_produccion_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    dia_produccion_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_roca\"\nwhere dia_produccion_key is not null\ngroup by dia_produccion_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dia_produccion_key"}, "test.cecoc.not_null_dia_produccion_roca_dia_produccion_key.efe74bdc65": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "dia_produccion_key", "model": "{{ get_where_subquery(ref('dia_produccion_roca')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.dia_produccion_roca"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_dia_produccion_roca_dia_produccion_key"], "unique_id": "test.cecoc.not_null_dia_produccion_roca_dia_produccion_key.efe74bdc65", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_dia_produccion_roca_dia_produccion_key.sql", "original_file_path": "models/schema.yml", "name": "not_null_dia_produccion_roca_dia_produccion_key", "alias": "not_null_dia_produccion_roca_dia_produccion_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["dia_produccion_roca"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_dia_produccion_roca_dia_produccion_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_roca\"\nwhere dia_produccion_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dia_produccion_key"}, "test.cecoc.unique_dia_produccion_suelo_dia_produccion_key.70a66c66c1": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "dia_produccion_key", "model": "{{ get_where_subquery(ref('dia_produccion_suelo')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.dia_produccion_suelo"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_dia_produccion_suelo_dia_produccion_key"], "unique_id": "test.cecoc.unique_dia_produccion_suelo_dia_produccion_key.70a66c66c1", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_dia_produccion_suelo_dia_produccion_key.sql", "original_file_path": "models/schema.yml", "name": "unique_dia_produccion_suelo_dia_produccion_key", "alias": "unique_dia_produccion_suelo_dia_produccion_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["dia_produccion_suelo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_dia_produccion_suelo_dia_produccion_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    dia_produccion_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_suelo\"\nwhere dia_produccion_key is not null\ngroup by dia_produccion_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dia_produccion_key"}, "test.cecoc.not_null_dia_produccion_suelo_dia_produccion_key.a92f734a88": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "dia_produccion_key", "model": "{{ get_where_subquery(ref('dia_produccion_suelo')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.dia_produccion_suelo"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_dia_produccion_suelo_dia_produccion_key"], "unique_id": "test.cecoc.not_null_dia_produccion_suelo_dia_produccion_key.a92f734a88", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_dia_produccion_suelo_dia_produccion_key.sql", "original_file_path": "models/schema.yml", "name": "not_null_dia_produccion_suelo_dia_produccion_key", "alias": "not_null_dia_produccion_suelo_dia_produccion_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["dia_produccion_suelo"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_dia_produccion_suelo_dia_produccion_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"dia_produccion_suelo\"\nwhere dia_produccion_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "dia_produccion_key"}, "test.cecoc.unique_sensor_sensor_diccionario_key.fa2f73b59e": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sensor_diccionario_key", "model": "{{ get_where_subquery(ref('sensor')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.sensor"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_sensor_sensor_diccionario_key"], "unique_id": "test.cecoc.unique_sensor_sensor_diccionario_key.fa2f73b59e", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_sensor_sensor_diccionario_key.sql", "original_file_path": "models/schema.yml", "name": "unique_sensor_sensor_diccionario_key", "alias": "unique_sensor_sensor_diccionario_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["sensor"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_sensor_sensor_diccionario_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    sensor_diccionario_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor\"\nwhere sensor_diccionario_key is not null\ngroup by sensor_diccionario_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sensor_diccionario_key"}, "test.cecoc.not_null_sensor_sensor_diccionario_key.7b11870c80": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sensor_diccionario_key", "model": "{{ get_where_subquery(ref('sensor')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.sensor"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_sensor_sensor_diccionario_key"], "unique_id": "test.cecoc.not_null_sensor_sensor_diccionario_key.7b11870c80", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_sensor_sensor_diccionario_key.sql", "original_file_path": "models/schema.yml", "name": "not_null_sensor_sensor_diccionario_key", "alias": "not_null_sensor_sensor_diccionario_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["sensor"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_sensor_sensor_diccionario_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor\"\nwhere sensor_diccionario_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sensor_diccionario_key"}, "test.cecoc.unique_sensor_diccionario_sensor_diccionario_key.da7e8a0309": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "sensor_diccionario_key", "model": "{{ get_where_subquery(ref('sensor_diccionario')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.sensor_diccionario"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_sensor_diccionario_sensor_diccionario_key"], "unique_id": "test.cecoc.unique_sensor_diccionario_sensor_diccionario_key.da7e8a0309", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_sensor_diccionario_sensor_diccionario_key.sql", "original_file_path": "models/schema.yml", "name": "unique_sensor_diccionario_sensor_diccionario_key", "alias": "unique_sensor_diccionario_sensor_diccionario_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["sensor_diccionario"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_sensor_diccionario_sensor_diccionario_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    sensor_diccionario_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_diccionario\"\nwhere sensor_diccionario_key is not null\ngroup by sensor_diccionario_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sensor_diccionario_key"}, "test.cecoc.not_null_sensor_diccionario_sensor_diccionario_key.5d16d432f1": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "sensor_diccionario_key", "model": "{{ get_where_subquery(ref('sensor_diccionario')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.sensor_diccionario"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_sensor_diccionario_sensor_diccionario_key"], "unique_id": "test.cecoc.not_null_sensor_diccionario_sensor_diccionario_key.5d16d432f1", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_sensor_diccionario_sensor_diccionario_key.sql", "original_file_path": "models/schema.yml", "name": "not_null_sensor_diccionario_sensor_diccionario_key", "alias": "not_null_sensor_diccionario_sensor_diccionario_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["sensor_diccionario"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_sensor_diccionario_sensor_diccionario_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"sensor_diccionario\"\nwhere sensor_diccionario_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "sensor_diccionario_key"}, "test.cecoc.unique_tuneladora_tuneladora_key.7fc259c2a6": {"raw_sql": "{{ test_unique(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "unique", "kwargs": {"column_name": "tuneladora_key", "model": "{{ get_where_subquery(ref('tuneladora')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_unique", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.tuneladora"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "unique_tuneladora_tuneladora_key"], "unique_id": "test.cecoc.unique_tuneladora_tuneladora_key.7fc259c2a6", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/unique_tuneladora_tuneladora_key.sql", "original_file_path": "models/schema.yml", "name": "unique_tuneladora_tuneladora_key", "alias": "unique_tuneladora_tuneladora_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["tuneladora"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/unique_tuneladora_tuneladora_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect\n    tuneladora_key as unique_field,\n    count(*) as n_records\n\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"tuneladora\"\nwhere tuneladora_key is not null\ngroup by tuneladora_key\nhaving count(*) > 1\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "tuneladora_key"}, "test.cecoc.not_null_tuneladora_tuneladora_key.dd4de0f951": {"raw_sql": "{{ test_not_null(**_dbt_schema_test_kwargs) }}", "test_metadata": {"name": "not_null", "kwargs": {"column_name": "tuneladora_key", "model": "{{ get_where_subquery(ref('tuneladora')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_not_null", "macro.dbt.get_where_subquery"], "nodes": ["model.cecoc.tuneladora"]}, "config": {"enabled": true, "alias": null, "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "not_null_tuneladora_tuneladora_key"], "unique_id": "test.cecoc.not_null_tuneladora_tuneladora_key.dd4de0f951", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/not_null_tuneladora_tuneladora_key.sql", "original_file_path": "models/schema.yml", "name": "not_null_tuneladora_tuneladora_key", "alias": "not_null_tuneladora_tuneladora_key", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [["tuneladora"]], "sources": [], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/not_null_tuneladora_tuneladora_key.sql", "build_path": null, "deferred": false, "unrendered_config": {}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nselect *\nfrom \"cct-analitico-prototipo-database\".\"cecoc\".\"tuneladora\"\nwhere tuneladora_key is null\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "tuneladora_key"}, "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita.5fe9dcbcbd": {"raw_sql": "{{ test_accepted_values(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_accepted_values_geologi_cca41bdf2571c651869e668e6d4c51d8\") }}", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Arenas", "Limos", "Gravas", "Turbas", "Tobas", "Arcillas", "Rellleno", "Andesita"], "column_name": "\"Litologia_Principal\"", "model": "{{ get_where_subquery(source('geologia', 'geologia_quito_raw')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.default__test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["source.cecoc.geologia.geologia_quito_raw"]}, "config": {"enabled": true, "alias": "source_accepted_values_geologi_cca41bdf2571c651869e668e6d4c51d8", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita"], "unique_id": "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita.5fe9dcbcbd", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/source_accepted_values_geologi_cca41bdf2571c651869e668e6d4c51d8.sql", "original_file_path": "models/schema.yml", "name": "source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita", "alias": "source_accepted_values_geologi_cca41bdf2571c651869e668e6d4c51d8", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["geologia", "geologia_quito_raw"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/source_accepted_values_geologi_cca41bdf2571c651869e668e6d4c51d8.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_accepted_values_geologi_cca41bdf2571c651869e668e6d4c51d8"}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        \"Litologia_Principal\" as value_field,\n        count(*) as n_records\n\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_quito_raw\"\n    group by \"Litologia_Principal\"\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Arenas','Limos','Gravas','Turbas','Tobas','Arcillas','Rellleno','Andesita'\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "\"Litologia_Principal\""}, "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__.e4ac1cce43": {"raw_sql": "{{ test_accepted_values(**_dbt_schema_test_kwargs) }}{{ config(alias=\"source_accepted_values_geologi_b0dd614b27a6a156dd55854fd9684a12\") }}", "test_metadata": {"name": "accepted_values", "kwargs": {"values": ["Limos", "Arcillas", "Gravas", "Grava y bloque", ""], "column_name": "\"Litologia_Secundaria\"", "model": "{{ get_where_subquery(source('geologia', 'geologia_quito_raw')) }}"}, "namespace": null}, "compiled": true, "resource_type": "test", "depends_on": {"macros": ["macro.dbt.test_accepted_values", "macro.dbt.default__test_accepted_values", "macro.dbt.get_where_subquery"], "nodes": ["source.cecoc.geologia.geologia_quito_raw"]}, "config": {"enabled": true, "alias": "source_accepted_values_geologi_b0dd614b27a6a156dd55854fd9684a12", "schema": "dbt_test__audit", "database": null, "tags": [], "meta": {}, "materialized": "test", "severity": "ERROR", "store_failures": null, "where": null, "limit": null, "fail_calc": "count(*)", "warn_if": "!= 0", "error_if": "!= 0"}, "database": "cct-analitico-prototipo-database", "schema": "cecoc_dbt_test__audit", "fqn": ["cecoc", "schema_test", "source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__"], "unique_id": "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__.e4ac1cce43", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "schema_test/source_accepted_values_geologi_b0dd614b27a6a156dd55854fd9684a12.sql", "original_file_path": "models/schema.yml", "name": "source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__", "alias": "source_accepted_values_geologi_b0dd614b27a6a156dd55854fd9684a12", "checksum": {"name": "none", "checksum": ""}, "tags": ["schema"], "refs": [], "sources": [["geologia", "geologia_quito_raw"]], "description": "", "columns": {}, "meta": {}, "docs": {"show": true}, "patch_path": null, "compiled_path": "target/compiled/cecoc/models/schema.yml/schema_test/source_accepted_values_geologi_b0dd614b27a6a156dd55854fd9684a12.sql", "build_path": null, "deferred": false, "unrendered_config": {"alias": "source_accepted_values_geologi_b0dd614b27a6a156dd55854fd9684a12"}, "created_at": 1637696439, "compiled_sql": "\n    \n    \n\nwith all_values as (\n\n    select\n        \"Litologia_Secundaria\" as value_field,\n        count(*) as n_records\n\n    from \"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_quito_raw\"\n    group by \"Litologia_Secundaria\"\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    'Limos','Arcillas','Gravas','Grava y bloque',''\n)\n\n\n", "extra_ctes_injected": true, "extra_ctes": [], "relation_name": null, "column_name": "\"Litologia_Secundaria\""}}, "sources": {"source.cecoc.geologia.geologia_quito_raw": {"fqn": ["cecoc", "geologia", "geologia_quito_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.geologia.geologia_quito_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "geologia_quito_raw", "source_name": "geologia", "source_description": "", "loader": "", "identifier": "geologia_quito_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Par\u00e1metros geol\u00f3gicos recabados por las distintas tuneladoras empleadas en Quito. Concretamente, las llamadas Guaragua (Norte), Carolina (Sur-s) y Luz de Am\u00e9rica (Sur-n).\n\nDichos par\u00e1metros se toman por n\u00famero de anillo, pk y pareja de litolog\u00edas (principal-secundaria).", "columns": {"index": {"name": "index", "description": "\u00cdndice (por tipo de tuneladora)", "meta": {}, "data_type": null, "quote": true, "tags": []}, "pk": {"name": "pk", "description": "Punto kilom\u00e9trico", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo_g": {"name": "anillo_g", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "Litologia_Principal": {"name": "Litologia_Principal", "description": "Litolog\u00eda principal", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Litologia_Secundaria": {"name": "Litologia_Secundaria", "description": "Litolog\u00eda secundaria", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Eventos": {"name": "Eventos", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RCS": {"name": "RCS", "description": "Resistencia a compresi\u00f3n simple de la roca [Mpa]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "E": {"name": "E", "description": "M\u00f3dulo de deformaci\u00f3n de la roca [Mpa]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RMR": {"name": "RMR", "description": "Clasificaci\u00f3n geomec\u00e1nica de Bieniawski para caracterizar la competencia y excavabilidad de macizos rocosos [0-100]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "GSI": {"name": "GSI", "description": "Clasificaci\u00f3n geomec\u00e1nica de Hoek para caracterizar la competencia y excavabilidad de macizos rocosos [0-100]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Q": {"name": "Q", "description": "Clasificaci\u00f3n geomec\u00e1nica de Barton para caracterizar la competencia y excavabilidad de macizos rocosos [0-1000]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "CAI": {"name": "CAI", "description": "\u00cdndice de abrasividad Cerchar [0-6]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "F": {"name": "F", "description": "\u00cdndice de dureza Schimazec [0-1]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Otro": {"name": "Otro", "description": "Cualquier \u00edndice de dureza o abrasividad [i.e. DRI]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "\u03c1": {"name": "\u03c1", "description": "Densidad espec\u00edfica suelo [T/m3]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "PHI": {"name": "PHI", "description": "\u00c1ngulo de fricci\u00f3n [\u00ba]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "C": {"name": "C", "description": "Cohesi\u00f3n efectiva del terreno [Mpa]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "tuneladora": {"name": "tuneladora", "description": "Nombre de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "modelo": {"name": "modelo", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_quito_raw\"", "created_at": 1637696439}, "source.cecoc.geologia.geologia_colores_raw": {"fqn": ["cecoc", "geologia", "geologia_colores_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.geologia.geologia_colores_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "geologia_colores_raw", "source_name": "geologia", "source_description": "", "loader": "", "identifier": "geologia_colores_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Informaci\u00f3n sobre las posibles parejas de litolog\u00edas existentes y sus respectivos colores", "columns": {"Litolog\u00eda Principal": {"name": "Litolog\u00eda Principal", "description": "Litolog\u00eda principal", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Litolog\u00eda Secundaria": {"name": "Litolog\u00eda Secundaria", "description": "Litolog\u00eda secundaria", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Descripcion": {"name": "Descripcion", "description": "Informaci\u00f3n adicional sobre las parejas de litolog\u00edas", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Color": {"name": "Color", "description": "Color correspondiente a cada pareja de litolog\u00edas", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"geologia_colores_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.categorias_paradas_quito_raw": {"fqn": ["cecoc", "produccion_parada", "categorias_paradas_quito_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.categorias_paradas_quito_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "categorias_paradas_quito_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "categorias_paradas_quito_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Diccionario con cada parada posible en el proyecto de Quito y su respectiva categor\u00eda", "columns": {"fecha": {"name": "fecha", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillos": {"name": "anillos", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "1": {"name": "1", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "2": {"name": "2", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "3": {"name": "3", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "4": {"name": "4", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "descripcion": {"name": "descripcion", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "modelo": {"name": "modelo", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categorias": {"name": "categorias", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"categorias_paradas_quito_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.categorias_paradas_folloline_raw": {"fqn": ["cecoc", "produccion_parada", "categorias_paradas_folloline_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.categorias_paradas_folloline_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "categorias_paradas_folloline_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "categorias_paradas_folloline_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Diccionario con cada parada posible en el proyecto de Folloline y su respectiva categor\u00eda", "columns": {"index": {"name": "index", "description": "\u00cdndice", "meta": {}, "data_type": null, "quote": true, "tags": []}, "parada": {"name": "parada", "description": "Cada una de las posibles paradas existentes", "meta": {}, "data_type": null, "quote": null, "tags": []}, "categoria": {"name": "categoria", "description": "Categor\u00eda asociada a cada parada", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"categorias_paradas_folloline_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.production_days_quito_raw": {"fqn": ["cecoc", "produccion_parada", "production_days_quito_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.production_days_quito_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "production_days_quito_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "production_days_quito_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "En esta tabla se recoge:\n\n- Informaci\u00f3n general sobre la producci\u00f3n de cada d\u00eda trabajado en el proyecto de Quito\n\n- Informaci\u00f3n general sobre el tramo excavado en el correspondiente d\u00eda", "columns": {"level_0": {"name": "level_0", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "index": {"name": "index", "description": "\u00cdndice formado por el nombre del proyecto y la fecha [project_name+fecha]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "titulo": {"name": "titulo", "description": "T\u00edtulo del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_tramo": {"name": "nombre_tramo", "description": "Nombre del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "nombre_fichero": {"name": "nombre_fichero", "description": "Nombre del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora": {"name": "tuneladora", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fecha": {"name": "fecha", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "proyect_name": {"name": "proyect_name", "description": "Nombre del proyecto", "meta": {}, "data_type": null, "quote": null, "tags": [], "test": [{"accepted_values": {"values": ["Quito"]}}]}, "total_anillos_dia": {"name": "total_anillos_dia", "description": "N\u00famero total de anillos colocados en el d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_metros_dia": {"name": "total_metros_dia", "description": "N\u00famero total de metros excavados en el d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_inicio_dia": {"name": "pk_frente_inicio_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al inicio del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_final_dia": {"name": "pk_frente_final_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al final del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tramo_inicio": {"name": "tramo_inicio", "description": "Inicio del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tramo_fin": {"name": "tramo_fin", "description": "Fin del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fecha_inicio_tramo": {"name": "fecha_inicio_tramo", "description": "Fecha en la que se ha iniciado el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "longitud_tramo": {"name": "longitud_tramo", "description": "Longitud del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillos_colocados_tramo": {"name": "anillos_colocados_tramo", "description": "N\u00famero total de anillos colocados en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metros_tunel_excavados_tramo": {"name": "metros_tunel_excavados_tramo", "description": "N\u00famero total de metros que ya han sido excavados en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "metros_tunel_por_excavar_tramo": {"name": "metros_tunel_por_excavar_tramo", "description": "N\u00famero total de metros que quedan por excavar en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "dias_ejecucion_tramo": {"name": "dias_ejecucion_tramo", "description": "D\u00edas invertidos en la ejecuci\u00f3n del tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "rendimiento": {"name": "rendimiento", "description": "Rendimiento en el tramo [m/d\u00eda]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "primer_anillo_pre_tunel": {"name": "primer_anillo_pre_tunel", "description": "Fecha en la que se coloc\u00f3 el primer anillo del pret\u00fanel", "meta": {}, "data_type": null, "quote": null, "tags": []}, "primer_excavacion_terreno": {"name": "primer_excavacion_terreno", "description": "Fecha en la que se produjo la primera excavaci\u00f3n de terreno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "primer_anillo_tunel": {"name": "primer_anillo_tunel", "description": "Fecha en la que se coloc\u00f3 el primer anillo del t\u00fanel", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observaciones": {"name": "observaciones", "description": "Observaciones diarias", "meta": {}, "data_type": null, "quote": null, "tags": []}, "observaciones_fiscalizacion": {"name": "observaciones_fiscalizacion", "description": "Observaciones diarias de fiscalizaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_vert_delante": {"name": "desvio_vert_delante", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n vertical de la parte delantera del escudo respecto a te\u00f3rico", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_vert_atras": {"name": "desvio_vert_atras", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n vertical de la parte trasera del escudo respecto a te\u00f3rico", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_horiz_delante": {"name": "desvio_horiz_delante", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n horizontal de la parte delantera del escudo respecto a te\u00f3rico.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "desvio_horiz_atras": {"name": "desvio_horiz_atras", "description": "Sistema de guiado topogr\u00e1fico. Desviaci\u00f3n horizontal de la parte trasera del escudo respecto a te\u00f3rico.", "meta": {}, "data_type": null, "quote": null, "tags": []}, "firma_fiscalizacion": {"name": "firma_fiscalizacion", "description": "Firma de la fiscalizaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "firma_contratista": {"name": "firma_contratista", "description": "Firma del contratista", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"production_days_quito_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.production_days_folloline_raw": {"fqn": ["cecoc", "produccion_parada", "production_days_folloline_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.production_days_folloline_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "production_days_folloline_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "production_days_folloline_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Informaci\u00f3n general sobre la producci\u00f3n de cada d\u00eda trabajado en el proyecto de Folloline", "columns": {"index": {"name": "index", "description": "\u00cdndice", "meta": {}, "data_type": null, "quote": true, "tags": []}, "fecha": {"name": "fecha", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "filename": {"name": "filename", "description": "Nombre del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tunneling_machine_name": {"name": "tunneling_machine_name", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "n_anillo_final_turno": {"name": "n_anillo_final_turno", "description": "N\u00famero de anillo colocado al final del turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillos_colocados_tramo": {"name": "anillos_colocados_tramo", "description": "N\u00famero total de anillos colocados en el tramo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "pk_frente_inicio_dia": {"name": "pk_frente_inicio_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al inicio del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}, "equipo": {"name": "equipo", "description": "Equipo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno": {"name": "turno", "description": "Turno (d\u00eda o noche)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "TBM": {"name": "TBM", "description": "Acr\u00f3nimo en ingl\u00e9s de Tuneladora (Tunnel Boring Manchine)", "meta": {}, "data_type": null, "quote": true, "tags": []}, "pk_frente_final_dia": {"name": "pk_frente_final_dia", "description": "Punto kilom\u00e9trico (posici\u00f3n) en el que se encuentra la TBM al final del d\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"production_days_folloline_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.production_stops_quito_raw": {"fqn": ["cecoc", "produccion_parada", "production_stops_quito_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.production_stops_quito_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "production_stops_quito_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "production_stops_quito_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Parte diario de producci\u00f3n de cada tuneladora empleada en el proyecto de Quito.\n\nEn esta tabla hay datos de:\n\n- Tiempo de producci\u00f3n por anillo\n\n- Tiempo de paradas por anillo\n\n- Longitud de avance por anillo\n\n- Peso del material extra\u00eddo por anillo\n\n- Inyecci\u00f3n de bicomponente por anillo\n\n- Par\u00e1metros de avance de tuneladora por anillo\n\n- Geolog\u00eda por anillo", "columns": {"level_0": {"name": "level_0", "description": "", "meta": {}, "data_type": null, "quote": null, "tags": []}, "index": {"name": "index", "description": "\u00cdndice", "meta": {}, "data_type": null, "quote": true, "tags": []}, "tuneladoras": {"name": "tuneladoras", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fechas": {"name": "fechas", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fabrica": {"name": "fabrica", "description": "N\u00famero de f\u00e1brica", "meta": {}, "data_type": null, "quote": null, "tags": []}, "posicion_clave": {"name": "posicion_clave", "description": "Posici\u00f3n clave", "meta": {}, "data_type": null, "quote": null, "tags": []}, "produccion_excavacion": {"name": "produccion_excavacion", "description": "Tiempo invertido en la excavaci\u00f3n (producci\u00f3n) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "produccion_montaje": {"name": "produccion_montaje", "description": "Tiempo invertido en el montaje (producci\u00f3n) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_tuneladora_revision_rdc": {"name": "paradas_tuneladora_revision_rdc", "description": "Tiempo invertido en la revisi\u00f3n de las tuneladoras (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_tuneladora_mantenimiento": {"name": "paradas_tuneladora_mantenimiento", "description": "Tiempo invertido en el mantenimiento de las tuneladoras (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_vehiculos_averias": {"name": "paradas_vehiculos_averias", "description": "Tiempo invertido en las aver\u00edas de los veh\u00edculos (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_vehiculos_esperas": {"name": "paradas_vehiculos_esperas", "description": "Tiempo invertido en las esperas de los veh\u00edculos (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_cintas_cinta_tunel": {"name": "paradas_cintas_cinta_tunel", "description": "Tiempo invertido en las cintas del t\u00fanel (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_cintas_cinta_ext": {"name": "paradas_cintas_cinta_ext", "description": "Tiempo invertido en las cintas exteriores (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_1": {"name": "otras_paradas_1", "description": "Tiempo invertido en otras paradas 1 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_2": {"name": "otras_paradas_2", "description": "Tiempo invertido en otras paradas 2 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_3": {"name": "otras_paradas_3", "description": "Tiempo invertido en otras paradas 3 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_4": {"name": "otras_paradas_4", "description": "Tiempo invertido en otras paradas 4 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_5": {"name": "otras_paradas_5", "description": "Tiempo invertido en otras paradas 5 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_6": {"name": "otras_paradas_6", "description": "Tiempo invertido en otras paradas 6 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_7": {"name": "otras_paradas_7", "description": "Tiempo invertido en otras paradas 7 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_8": {"name": "otras_paradas_8", "description": "Tiempo invertido en otras paradas 8 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_9": {"name": "otras_paradas_9", "description": "Tiempo invertido en otras paradas 9 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_10": {"name": "otras_paradas_10", "description": "Tiempo invertido en otras paradas 10 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_11": {"name": "otras_paradas_11", "description": "Tiempo invertido en otras paradas 11 (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "total_paradas": {"name": "total_paradas", "description": "Tiempo total invertido en paradas en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "long_avance": {"name": "long_avance", "description": "Longitud de avance", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_b1": {"name": "peso_material_extraido_b1", "description": "Peso del material extra\u00eddo (sin aditivos) B1", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_b2": {"name": "peso_material_extraido_b2", "description": "Peso del material extra\u00eddo (sin aditivos) B2", "meta": {}, "data_type": null, "quote": null, "tags": []}, "peso_material_extraido_media": {"name": "peso_material_extraido_media", "description": "Peso medio del material extra\u00eddo (sin aditivos)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "inyeccion_bicomponente_vol": {"name": "inyeccion_bicomponente_vol", "description": "Volumen medio de inyecci\u00f3n de mortero bicomponente en relleno gap [m3]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "inyeccion_bicomponente_p": {"name": "inyeccion_bicomponente_p", "description": "Presi\u00f3n media de inyecci\u00f3n de mortero bicomponente en relleno gap [bar]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_empuje_total": {"name": "parametros_avance_tuneladora_empuje_total", "description": "Fuerza media de empuje total de todos los grupos cilindros por anillo [kN]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_par": {"name": "parametros_avance_tuneladora_par", "description": "Par motor del accionamiento principal [MNm]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_v_avance": {"name": "parametros_avance_tuneladora_v_avance", "description": "Velocidad de avance [mm/min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_v_rotacion": {"name": "parametros_avance_tuneladora_v_rotacion", "description": "Velocidad media de rotaci\u00f3n de la rueda de corte por anillo [rpm]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_clave": {"name": "parametros_avance_tuneladora_presion_tierras_clave", "description": "L\u00ednea 1 & 2 inyecci\u00f3n en la c\u00e1mara de excavaci\u00f3n", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_centro": {"name": "parametros_avance_tuneladora_presion_tierras_centro", "description": "Presi\u00f3n de aire en el frente distribuido por l\u00edneas de inyecci\u00f3n (superior, centro, abajo)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_presion_tierras_abajo": {"name": "parametros_avance_tuneladora_presion_tierras_abajo", "description": "Presi\u00f3n de aire en el frente distribuido por l\u00edneas de inyecci\u00f3n (superior, centro, abajo)", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_agua_adicionada": {"name": "parametros_avance_tuneladora_agua_adicionada", "description": "Cantidad de agua que se aporta en el frente del t\u00fanel para hacer la mezcla tensoactiva para acondicionamiento del terreno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_tratamiento_fir": {"name": "parametros_avance_tuneladora_tratamiento_fir", "description": "Ratio de inyecci\u00f3n de espuma para acondicionamiento del terreno en m\u00e1quinas de suelo. Relaci\u00f3n entre el volumen de espuma inyectada y el volumen de suelo excavado [%]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "parametros_avance_tuneladora_tratamiento_fer": {"name": "parametros_avance_tuneladora_tratamiento_fer", "description": "Ratio de formaci\u00f3n de espuma para acondicionamiento del terreno en m\u00e1quinas de suelo. Relaci\u00f3n entre cantidad total de espuma y la cantidad total de soluci\u00f3n surfactante (agua + surfactante) [%]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "geo": {"name": "geo", "description": "Geolog\u00eda", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.production_stops_quito_details_raw": {"fqn": ["cecoc", "produccion_parada", "production_stops_quito_details_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.production_stops_quito_details_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "production_stops_quito_details_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "production_stops_quito_details_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Descripci\u00f3n diaria de otras paradas en el proyecto de Quito", "columns": {"index": {"name": "index", "description": "\u00cdndice", "meta": {}, "data_type": null, "quote": true, "tags": []}, "tuneladora": {"name": "tuneladora", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fecha": {"name": "fecha", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_1_obs": {"name": "otras_paradas_1_obs", "description": "Descripci\u00f3n de otras paradas 1 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_2_obs": {"name": "otras_paradas_2_obs", "description": "Descripci\u00f3n de otras paradas 2 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_3_obs": {"name": "otras_paradas_3_obs", "description": "Descripci\u00f3n de otras paradas 3 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_4_obs": {"name": "otras_paradas_4_obs", "description": "Descripci\u00f3n de otras paradas 4 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_5_obs": {"name": "otras_paradas_5_obs", "description": "Descripci\u00f3n de otras paradas 5 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_6_obs": {"name": "otras_paradas_6_obs", "description": "Descripci\u00f3n de otras paradas 6 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_7_obs": {"name": "otras_paradas_7_obs", "description": "Descripci\u00f3n de otras paradas 7 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_8_obs": {"name": "otras_paradas_8_obs", "description": "Descripci\u00f3n de otras paradas 8 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_9_obs": {"name": "otras_paradas_9_obs", "description": "Descripci\u00f3n de otras paradas 9 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_10_obs": {"name": "otras_paradas_10_obs", "description": "Descripci\u00f3n de otras paradas 10 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "otras_paradas_11_obs": {"name": "otras_paradas_11_obs", "description": "Descripci\u00f3n de otras paradas 11 en cada fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_quito_details_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.production_stops_folloline_raw": {"fqn": ["cecoc", "produccion_parada", "production_stops_folloline_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.production_stops_folloline_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "production_stops_folloline_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "production_stops_folloline_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Informaci\u00f3n sobre los tiempos de producci\u00f3n y de paradas en cada anillo colocado en el proyecto de Folloline", "columns": {"index": {"name": "index", "description": "\u00cdndice", "meta": {}, "data_type": null, "quote": true, "tags": []}, "tunneling_machine_name": {"name": "tunneling_machine_name", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fechas": {"name": "fechas", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "filename": {"name": "filename", "description": "Nombre del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno": {"name": "turno", "description": "Turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo": {"name": "anillo", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "produccion_excavacion": {"name": "produccion_excavacion", "description": "Tiempo invertido en la excavaci\u00f3n (producci\u00f3n) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "produccion_regripping": {"name": "produccion_regripping", "description": "Tiempo invertido en el regripping (producci\u00f3n) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "produccion_montaje": {"name": "produccion_montaje", "description": "Tiempo invertido en el montaje (producci\u00f3n) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "produccion_inspeccion_cortadores": {"name": "produccion_inspeccion_cortadores", "description": "Tiempo invertido en la inspecci\u00f3n de cortadores (producci\u00f3n) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_inspeccion_cortadores": {"name": "paradas_inspeccion_cortadores", "description": "Tiempo invertido en la inspecci\u00f3n de cortadores (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_probe_drilling": {"name": "paradas_probe_drilling", "description": "Tiempo invertido en el probe drilling (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_parada_cortadores": {"name": "paradas_parada_cortadores", "description": "Tiempo invertido en la parada de cortadores (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_retraso_de_inyeccion": {"name": "paradas_retraso_de_inyeccion", "description": "Tiempo invertido en el retraso de inyecci\u00f3n (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_extension_de_instalaciones": {"name": "paradas_extension_de_instalaciones", "description": "Tiempo invertido en la extensi\u00f3n de instalaciones (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_retraso_de_MSV": {"name": "paradas_retraso_de_MSV", "description": "Tiempo invertido en el retraso de MSV (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "paradas_retraso_de_cinta": {"name": "paradas_retraso_de_cinta", "description": "Tiempo invertido en el retraso de cinta (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_retraso_hidraulico_mecanico_en_TBM": {"name": "paradas_retraso_hidraulico_mecanico_en_TBM", "description": "Tiempo invertido en el retraso hidr\u00e1ulico/mec\u00e1nico en TBM (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "paradas_retraso_electrico_en_TBM": {"name": "paradas_retraso_electrico_en_TBM", "description": "Tiempo invertido en el retraso el\u00e9ctrico en TBM (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": true, "tags": []}, "paradas_trabajos_externos_planificados": {"name": "paradas_trabajos_externos_planificados", "description": "Tiempo invertido en trabajos externos planificados (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_retraso_en_instalaciones_de_superficie": {"name": "paradas_retraso_en_instalaciones_de_superficie", "description": "Tiempo invertido en el retraso en instalaciones de superficie (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_pregrouting": {"name": "paradas_pregrouting", "description": "Tiempo invertido en el pregrouting (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}, "paradas_otros_retrasos": {"name": "paradas_otros_retrasos", "description": "Tiempo invertido en otros retrasos (paradas) en cada anillo [min]", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_folloline_raw\"", "created_at": 1637696439}, "source.cecoc.produccion_parada.production_stops_folloline_details_raw": {"fqn": ["cecoc", "produccion_parada", "production_stops_folloline_details_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.produccion_parada.production_stops_folloline_details_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "production_stops_folloline_details_raw", "source_name": "produccion_parada", "source_description": "", "loader": "", "identifier": "production_stops_folloline_details_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Detalles sobre las paradas llevadas a cabo en cada anillo colocado en el proyecto de Folloline", "columns": {"index": {"name": "index", "description": "\u00cdndice", "meta": {}, "data_type": null, "quote": true, "tags": []}, "tunneling_machine_name_parada": {"name": "tunneling_machine_name_parada", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fechas_parada": {"name": "fechas_parada", "description": "Fecha", "meta": {}, "data_type": null, "quote": null, "tags": []}, "filename_parada": {"name": "filename_parada", "description": "Nombre del excel del que se han extra\u00eddo los datos", "meta": {}, "data_type": null, "quote": null, "tags": []}, "turno_parada": {"name": "turno_parada", "description": "Turno", "meta": {}, "data_type": null, "quote": null, "tags": []}, "anillo_parada": {"name": "anillo_parada", "description": "N\u00famero de anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}, "detalles_parada": {"name": "detalles_parada", "description": "Comentario sobre las paradas realizadas en el respectivo anillo", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"production_stops_folloline_details_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.dict_sensores_raw": {"fqn": ["cecoc", "sensor", "dict_sensores_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.dict_sensores_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "dict_sensores_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "dict_sensores_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Informaci\u00f3n t\u00e9cnica sobre los sensores", "columns": {"Id": {"name": "Id", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "SensorGroupId": {"name": "SensorGroupId", "description": "Id del grupo de sensores", "meta": {}, "data_type": null, "quote": true, "tags": []}, "ShortItem": {"name": "ShortItem", "description": "Nombre del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AdressPLC": {"name": "AdressPLC", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Scale": {"name": "Scale", "description": "Escala", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Precision": {"name": "Precision", "description": "Precisi\u00f3n del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Unit": {"name": "Unit", "description": "Unidad", "meta": {}, "data_type": null, "quote": true, "tags": []}, "SensorType": {"name": "SensorType", "description": "Tipo de sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "SensorValueType": {"name": "SensorValueType", "description": "Tipo de valor del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Pos": {"name": "Pos", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "PLCAdress": {"name": "PLCAdress", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "PathSchematic": {"name": "PathSchematic", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "IsExternal": {"name": "IsExternal", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "Inactive": {"name": "Inactive", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "ScanTime": {"name": "ScanTime", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "IsMemory": {"name": "IsMemory", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "IsLogToDB": {"name": "IsLogToDB", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "IsSystem": {"name": "IsSystem", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AggregateStatuses": {"name": "AggregateStatuses", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}, "SensorOpcChannelType": {"name": "SensorOpcChannelType", "description": "", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"dict_sensores_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.s1018_quito_ringresult_raw": {"fqn": ["cecoc", "sensor", "s1018_quito_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.s1018_quito_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "s1018_quito_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "s1018_quito_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S1018 (Quito) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}, "modelo": {"name": "modelo", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"s1018_quito_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.s1019_quito_ringresult_raw": {"fqn": ["cecoc", "sensor", "s1019_quito_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.s1019_quito_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "s1019_quito_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "s1019_quito_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S1019 (Quito) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"s1019_quito_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.s1022_1_quito_ringresult_raw": {"fqn": ["cecoc", "sensor", "s1022_1_quito_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.s1022_1_quito_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "s1022_1_quito_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "s1022_1_quito_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S1022 (Quito) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"s1022_1_quito_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.s1022_2_quito_ringresult_raw": {"fqn": ["cecoc", "sensor", "s1022_2_quito_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.s1022_2_quito_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "s1022_2_quito_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "s1022_2_quito_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S1022 (Quito) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"s1022_2_quito_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.s1022_3_quito_ringresult_raw": {"fqn": ["cecoc", "sensor", "s1022_3_quito_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.s1022_3_quito_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "s1022_3_quito_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "s1022_3_quito_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S1022 (Quito) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"s1022_3_quito_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl980_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl980_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl980_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl980_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl980_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S980 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl980_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl980_1_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl980_1_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl980_1_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl980_1_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl980_1_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S980 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl980_1_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl980_2_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl980_2_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl980_2_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl980_2_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl980_2_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S980 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl980_2_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl980_3_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl980_3_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl980_3_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl980_3_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl980_3_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S980 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl980_3_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl_981_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl_981_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl_981_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl_981_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl_981_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S981 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl_981_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl981_1_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl981_1_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl981_1_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl981_1_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl981_1_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S981 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl981_1_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl981_3_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl981_3_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl981_3_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl981_3_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl981_3_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S981 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl981_3_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl_982_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl_982_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl_982_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl_982_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl_982_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S982 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl_982_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.sensor.fl983_folloline_ringresult_raw": {"fqn": ["cecoc", "sensor", "fl983_folloline_ringresult_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.sensor.fl983_folloline_ringresult_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "fl983_folloline_ringresult_raw", "source_name": "sensor", "source_description": "", "loader": "", "identifier": "fl983_folloline_ringresult_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Valores obtenidos por cada uno de los sensores de la tuneladora S983 (Folloline) en cada anillo", "columns": {"SensorId": {"name": "SensorId", "description": "Id del sensor", "meta": {}, "data_type": null, "quote": true, "tags": []}, "RingId": {"name": "RingId", "description": "Id del anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MinValue": {"name": "MinValue", "description": "Valor m\u00ednimo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "MaxValue": {"name": "MaxValue", "description": "Valor m\u00e1ximo del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageValue": {"name": "AverageValue", "description": "Valor medio del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "StartValue": {"name": "StartValue", "description": "Valor inicial del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "EndValue": {"name": "EndValue", "description": "Valor final del sensor por anillo", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageSum": {"name": "AverageSum", "description": "Suma media", "meta": {}, "data_type": null, "quote": true, "tags": []}, "AverageCount": {"name": "AverageCount", "description": "Recuento medio", "meta": {}, "data_type": null, "quote": true, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"fl983_folloline_ringresult_raw\"", "created_at": 1637696439}, "source.cecoc.tuneladora.tuneladoras_metadata_raw": {"fqn": ["cecoc", "tuneladora", "tuneladoras_metadata_raw"], "database": "cct-analitico-prototipo-database", "schema": "cecoc", "unique_id": "source.cecoc.tuneladora.tuneladoras_metadata_raw", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "models/schema.yml", "original_file_path": "models/schema.yml", "name": "tuneladoras_metadata_raw", "source_name": "tuneladora", "source_description": "", "loader": "", "identifier": "tuneladoras_metadata_raw", "resource_type": "source", "quoting": {"database": null, "schema": null, "identifier": null, "column": null}, "loaded_at_field": null, "freshness": {"warn_after": null, "error_after": null, "filter": null}, "external": null, "description": "Informaci\u00f3n t\u00e9cnica sobre las tuneladoras", "columns": {"project": {"name": "project", "description": "Proyecto en el que se ha empleado la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tuneladora": {"name": "tuneladora", "description": "Nombre de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "fabricante": {"name": "fabricante", "description": "Fabricante de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo": {"name": "tipo", "description": "Tipo de tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "modelo": {"name": "modelo", "description": "Modelo de la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "a\u00f1o_ejecucion_inicio": {"name": "a\u00f1o_ejecucion_inicio", "description": "A\u00f1o en el que se utiliz\u00f3 la tuneladora por primera vez", "meta": {}, "data_type": null, "quote": null, "tags": []}, "a\u00f1o_ejecucion_fin": {"name": "a\u00f1o_ejecucion_fin", "description": "A\u00f1o en el que se utiliz\u00f3 la tuneladora por \u00faltima vez", "meta": {}, "data_type": null, "quote": null, "tags": []}, "diametro_excavacion": {"name": "diametro_excavacion", "description": "Di\u00e1metro excavado por la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "longitud_acumulada": {"name": "longitud_acumulada", "description": "Longitud acumulada excavada por la tuneladora", "meta": {}, "data_type": null, "quote": null, "tags": []}, "tipo_obra": {"name": "tipo_obra", "description": "Tipo de obra en el que se puede emplear la tuneladora (suelo o roca)", "meta": {}, "data_type": null, "quote": null, "tags": []}}, "meta": {}, "source_meta": {}, "tags": [], "config": {"enabled": true}, "patch_path": null, "unrendered_config": {}, "relation_name": "\"cct-analitico-prototipo-database\".\"cecoc\".\"tuneladoras_metadata_raw\"", "created_at": 1637696439}}, "macros": {"macro.cecoc.union_all_produccion_suelo": {"unique_id": "macro.cecoc.union_all_produccion_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/union_all_produccion_suelo.sql", "original_file_path": "macros/union_all_produccion_suelo.sql", "name": "union_all_produccion_suelo", "macro_sql": "{% macro union_all_produccion_suelo() -%}\n\n    {%- set categorias_produccion = ['excavacion', 'montaje'] -%}\n\n    {% for categoria in categorias_produccion %}\n\n    select\n          dia_produccion_key\n        , tuneladora_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , '{{ categoria }}'::varchar(10) as categoria\n        , {{ categoria }} as tiempo\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n\n    from produccion\n\n    where {{ categoria }} is not null\n        and {{ categoria }} > 0\n\n    {% if not loop.last -%} union all {%- endif %}\n\n    {% endfor %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.union_all_sensor": {"unique_id": "macro.cecoc.union_all_sensor", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/union_all_sensor.sql", "original_file_path": "macros/union_all_sensor.sql", "name": "union_all_sensor", "macro_sql": "{% macro union_all_sensor(sensor_tables) -%}\n\n    {% for sensor_table, modelo, tipo in sensor_tables %}\n\n    (\n    with\n     sensor_with_modelo as (\n       select\n        *,\n       '{{ modelo }}' as macro_modelo\n       from cecoc.{{ sensor_table }}\n    )\n\n    select\n          -- Claves subrogadas\n          {{ dbt_utils.surrogate_key([\n            '\"SensorId\"'\n             ]) }}::varchar(32) as sensor_diccionario_key\n        ,  {{ dbt_utils.surrogate_key([\n            \"macro_modelo\"\n            ]) }}::varchar(32) as tuneladora_key\n\n         -- Fact fields\n        , \"SensorId\" as id_sensor\n        , \"RingId\" as anillo\n        , \"MinValue\" as valor_minimo\n        , \"MaxValue\" as valor_maximo\n        , \"AverageValue\" as valor_medio\n        , \"StartValue\" as valor_inicial\n        , \"EndValue\" as valor_final\n        , \"AverageSum\" as suma_media\n        , \"AverageCount\" as recuento_medio\n        , '{{ tipo }}'::varchar(5) as tipo_obra\n\n    from sensor_with_modelo\n    )\n\n    {% if not loop.last -%} union all {%- endif %}\n\n    {% endfor %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.contador_dos_sensores": {"unique_id": "macro.cecoc.contador_dos_sensores", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/contador_dos_sensores.sql", "original_file_path": "macros/contador_dos_sensores.sql", "name": "contador_dos_sensores", "macro_sql": "{% macro contador_dos_sensores(field, id_sensor, id_sensor_2) -%}\n\nwith\ncontador as (\n\n\tselect anillo, tuneladora_key, sum(valor_medio) as valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = {{ id_sensor }}\n\t    or id_sensor = {{ id_sensor_2 }}\n\t    group by 1,2\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from {{ ref('geologia') }} geologia\n    left join {{ ref('litologia') }} litologia using (litologia_key)\n\n)\nselect\n\t geologia_litologia.litologia_principal\n\t,geologia_litologia.litologia_secundaria\n\t,geologia_litologia.anillo\n\t,geologia_litologia.tuneladora_key\n\t,avg(contador.valor_medio) as {{ field }}\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.union_all_parada_roca": {"unique_id": "macro.cecoc.union_all_parada_roca", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/union_all_parada_roca.sql", "original_file_path": "macros/union_all_parada_roca.sql", "name": "union_all_parada_roca", "macro_sql": "{% macro union_all_parada_roca() -%}\n\n    {%- set categorias_parada = ['inspeccion_cortadores',\n                                 'probe_drilling',\n                                 'parada_cortadores',\n                                 'retraso_de_inyeccion',\n                                 'extension_de_instalaciones',\n                                 'retraso_de_msv',\n                                 'retraso_de_cinta',\n                                 'retraso_hidraulico_mecanico_en_tbm',\n                                 'retraso_electrico_en_tbm',\n                                 'trabajos_externos_planificados',\n                                 'retraso_en_instalaciones_de_superficie',\n                                 'pregrouting',\n                                 'otras_paradas'] -%}\n\n    {% for categoria in categorias_parada %}\n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , categoria_comentario_parada_key::varchar(32)\n        , anillo::float8::int8\n        , '{{ categoria }}'::varchar(38) as categoria\n        , {{ categoria }}::float8::int8 as tiempo\n        , comentario::varchar(763)\n\n    from paradas\n\n    where {{ categoria }} is not null\n        and trim({{ categoria }}) <> ''\n        and {{ categoria }} <> 'nan'\n        and {{ categoria }} <> 'O'\n        and isnumeric(anillo)\n\n    {% if not loop.last -%} union all {%- endif %}\n\n    {% endfor %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.contador": {"unique_id": "macro.cecoc.contador", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/contador.sql", "original_file_path": "macros/contador.sql", "name": "contador", "macro_sql": "{% macro contador(field, id_sensor) -%}\n\nwith\ncontador as (\n\n    select anillo, tuneladora_key, valor_medio\n\tfrom cecoc.sensor\n\t    where id_sensor = {{ id_sensor }}\n\n),\ngeologia_litologia as (\n\n    select\n          geologia.anillo\n        , geologia.tuneladora_key\n        , litologia.litologia_principal\n        , litologia.litologia_secundaria\n    from {{ ref('geologia') }} geologia\n    left join {{ ref('litologia') }} litologia using (litologia_key)\n\n)\nselect\n      geologia_litologia.anillo\n    , geologia_litologia.tuneladora_key\n    , geologia_litologia.litologia_principal\n    , geologia_litologia.litologia_secundaria\n\t, avg(contador.valor_medio) as {{ field }}\nfrom\n    geologia_litologia\nleft join contador contador using (anillo, tuneladora_key)\n\tgroup by 1,2,3,4\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.data_type_suelo": {"unique_id": "macro.cecoc.data_type_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/data_type_suelo.sql", "original_file_path": "macros/data_type_suelo.sql", "name": "data_type_suelo", "macro_sql": "{% macro data_type_suelo() -%}\n\n     case\n            when trim(long_avance) <> '' then long_avance::float8\n            else null\n         end long_avance\n       , case\n            when peso_material_extraido_b1 = '_' then null\n            when trim(peso_material_extraido_b1) <> '' then peso_material_extraido_b1::float8\n            else null\n         end peso_material_extraido_b1\n       , case\n            when trim(peso_material_extraido_b2) = '_' then null\n            when trim(peso_material_extraido_b2) <> '' then peso_material_extraido_b2::float8\n            else null\n         end peso_material_extraido_b2\n       , case\n            when trim(peso_material_extraido_media) = '_' then null\n            when trim(peso_material_extraido_media) <> '' then peso_material_extraido_media::float8\n            else null\n         end peso_material_extraido_media\n       , case\n            when not isnumeric(inyeccion_bicomponente_vol) then null\n            when inyeccion_bicomponente_vol = 'No se inyecta' then 0::float8\n            when inyeccion_bicomponente_vol = 'No se registra' then null\n            when trim(inyeccion_bicomponente_vol) <> '' then inyeccion_bicomponente_vol::float8\n            else null\n         end inyeccion_bicomponente_vol\n       , case\n            when trim(inyeccion_bicomponente_p) <> '' then replace(replace(inyeccion_bicomponente_p,' ',''),',','.')::float8\n            else null\n         end inyeccion_bicomponente_p\n       , case\n            when trim(parametros_avance_tuneladora_empuje_total) <> '' then parametros_avance_tuneladora_empuje_total::float8\n            else null\n         end parametros_avance_tuneladora_empuje_total\n       , case\n            when trim(parametros_avance_tuneladora_par) <> '' then parametros_avance_tuneladora_par::float8\n            else null\n         end parametros_avance_tuneladora_par\n       , case\n            when not isnumeric(parametros_avance_tuneladora_v_avance) then null\n            else parametros_avance_tuneladora_v_avance::float8\n         end parametros_avance_tuneladora_v_avance\n       , case\n            when not isnumeric(parametros_avance_tuneladora_v_rotacion) then null\n            when trim(parametros_avance_tuneladora_v_rotacion) <> '' then parametros_avance_tuneladora_v_rotacion::float8\n            else null\n         end parametros_avance_tuneladora_v_rotacion\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_clave) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_clave) <> '' then parametros_avance_tuneladora_presion_tierras_clave::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_clave\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_centro) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_centro) <> '' then parametros_avance_tuneladora_presion_tierras_centro::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_centro\n       , case\n            when not isnumeric(parametros_avance_tuneladora_presion_tierras_abajo) then null\n            when trim(parametros_avance_tuneladora_presion_tierras_abajo) <> '' then parametros_avance_tuneladora_presion_tierras_abajo::float8\n            else null\n         end parametros_avance_tuneladora_presion_tierras_abajo\n       , case\n            when not isnumeric(parametros_avance_tuneladora_agua_adicionada) then null\n            when trim(parametros_avance_tuneladora_agua_adicionada) <> '' then replace(parametros_avance_tuneladora_agua_adicionada,' ','')::float8\n            else null\n         end parametros_avance_tuneladora_agua_adicionada\n       , case\n            when trim(parametros_avance_tuneladora_tratamiento_fir) <> '' then parametros_avance_tuneladora_tratamiento_fir::float8\n            else null\n         end parametros_avance_tuneladora_tratamiento_fir\n       , case\n            when trim(parametros_avance_tuneladora_tratamiento_fer) <> '' then replace(parametros_avance_tuneladora_tratamiento_fer,',','.')::float8\n            else null\n         end parametros_avance_tuneladora_tratamiento_fer\n       , geo::varchar(19) as geologia_auxiliar\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.union_all_parada_suelo": {"unique_id": "macro.cecoc.union_all_parada_suelo", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/union_all_parada_suelo.sql", "original_file_path": "macros/union_all_parada_suelo.sql", "name": "union_all_parada_suelo", "macro_sql": "{% macro union_all_parada_suelo() -%}\n\n    {%- set categorias_parada = ['tuneladora_revision_rdc'\n                                 ,'tuneladora_mantenimiento'\n                                 ,'vehiculos_averias'\n                                 ,'vehiculos_esperas'\n                                 ,'cintas_cinta_tunel'\n                                 ,'cintas_cinta_ext'] -%}\n\n    {% for categoria in categorias_parada %}\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , null::varchar(32) as categoria_comentario_parada_key\n        , anillo\n\t    , fabrica\n\t    , posicion_clave\n\t    , '{{ categoria }}'::varchar(24) as categoria\n        , {{ categoria }} as tiempo\n\t    , total_paradas\n\t    , long_avance\n\t    , peso_material_extraido_b1\n\t    , peso_material_extraido_b2\n\t    , peso_material_extraido_media\n\t    , inyeccion_bicomponente_vol\n\t    , inyeccion_bicomponente_p\n\t    , parametros_avance_tuneladora_empuje_total\n\t    , parametros_avance_tuneladora_par\n\t    , parametros_avance_tuneladora_v_avance\n\t    , parametros_avance_tuneladora_v_rotacion\n\t    , parametros_avance_tuneladora_presion_tierras_clave\n\t    , parametros_avance_tuneladora_presion_tierras_centro\n\t    , parametros_avance_tuneladora_presion_tierras_abajo\n\t    , parametros_avance_tuneladora_agua_adicionada\n\t    , parametros_avance_tuneladora_tratamiento_fir\n\t    , parametros_avance_tuneladora_tratamiento_fer\n\t    , geologia_auxiliar\n\t    , null::varchar(632) as comentario\n\n    from paradas\n\n    where {{ categoria }} is not null\n        and {{ categoria }} > 0\n\n    {% if not loop.last -%} union all {%- endif %}\n\n    {% endfor %}\n\n    union all\n\n    {%- set otras_paradas = ['otras_paradas_1'\n                            ,'otras_paradas_2'\n                            ,'otras_paradas_3'\n                            ,'otras_paradas_4'\n                            ,'otras_paradas_5'\n                            ,'otras_paradas_6'\n                            ,'otras_paradas_7'\n                            ,'otras_paradas_8'\n                            ,'otras_paradas_9'\n                            ,'otras_paradas_10'\n                            ,'otras_paradas_11'] -%}\n\n    {% for otra_parada_n in otras_paradas %}\n\n    (with\n    otras_paradas_join_comentario as (\n\n        select\n\n              dia_produccion_key\n            , categoria_comentario_parada_key\n            , tuneladora_key\n            , anillo\n            , fabrica\n            , posicion_clave\n            , 'otras_paradas' as categoria\n            , {{ otra_parada_n }} as tiempo\n            , total_paradas\n            , long_avance\n            , peso_material_extraido_b1\n            , peso_material_extraido_b2\n            , peso_material_extraido_media\n            , inyeccion_bicomponente_vol\n            , inyeccion_bicomponente_p\n            , parametros_avance_tuneladora_empuje_total\n            , parametros_avance_tuneladora_par\n            , parametros_avance_tuneladora_v_avance\n            , parametros_avance_tuneladora_v_rotacion\n            , parametros_avance_tuneladora_presion_tierras_clave\n            , parametros_avance_tuneladora_presion_tierras_centro\n            , parametros_avance_tuneladora_presion_tierras_abajo\n            , parametros_avance_tuneladora_agua_adicionada\n            , parametros_avance_tuneladora_tratamiento_fir\n            , parametros_avance_tuneladora_tratamiento_fer\n            , geologia_auxiliar\n            , otras_paradas_comentarios.{{ otra_parada_n }}_obs::varchar(632) as comentario\n\n        from paradas\n            left join {{ source('produccion_parada','production_stops_quito_details_raw') }} otras_paradas_comentarios\n                on (\n                    paradas.fechas = substring(otras_paradas_comentarios.fecha::varchar,1,10)\n                    and paradas.tuneladoras = otras_paradas_comentarios.tuneladora\n            )\n\n        where {{ otra_parada_n }} is not null\n            and {{ otra_parada_n }} > 0\n    )\n\n    select\n\n          dia_produccion_key\n        , tuneladora_key\n        , categoria_comentario_parada_key\n        , anillo\n        , fabrica\n        , posicion_clave\n        , categoria::varchar(24)\n        , tiempo\n        , total_paradas\n        , long_avance\n        , peso_material_extraido_b1\n        , peso_material_extraido_b2\n        , peso_material_extraido_media\n        , inyeccion_bicomponente_vol\n        , inyeccion_bicomponente_p\n        , parametros_avance_tuneladora_empuje_total\n        , parametros_avance_tuneladora_par\n        , parametros_avance_tuneladora_v_avance\n        , parametros_avance_tuneladora_v_rotacion\n        , parametros_avance_tuneladora_presion_tierras_clave\n        , parametros_avance_tuneladora_presion_tierras_centro\n        , parametros_avance_tuneladora_presion_tierras_abajo\n        , parametros_avance_tuneladora_agua_adicionada\n        , parametros_avance_tuneladora_tratamiento_fir\n        , parametros_avance_tuneladora_tratamiento_fer\n        , geologia_auxiliar\n        , comentario\n\n    from otras_paradas_join_comentario\n    )\n\n    {% if not loop.last -%} union all {%- endif %}\n\n    {% endfor %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.cecoc.union_all_produccion_roca": {"unique_id": "macro.cecoc.union_all_produccion_roca", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "macros/union_all_produccion_roca.sql", "original_file_path": "macros/union_all_produccion_roca.sql", "name": "union_all_produccion_roca", "macro_sql": "{% macro union_all_produccion_roca() -%}\n\n    {%- set categorias_produccion = ['excavacion', 'regripping', 'montaje', 'inspeccion_cortadores'] -%}\n\n    {% for categoria in categorias_produccion %}\n\n    select\n\n          dia_produccion_key::varchar(32)\n        , tuneladora_key::varchar(32)\n        , anillo::float::int\n        , '{{ categoria }}'::varchar(21) as categoria\n        , {{ categoria }}::float8::int8 as tiempo\n\n    from produccion\n\n    where {{ categoria }} is not null\n        and trim({{ categoria }}) <> ''\n        and {{ categoria }} <> 'nan'\n        and {{ categoria }} <> '***'\n        and isnumeric(anillo)\n\n    {% if not loop.last -%} union all {%- endif %}\n\n    {% endfor %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres_get_relations": {"unique_id": "macro.dbt_postgres.postgres_get_relations", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/relations.sql", "original_file_path": "macros/relations.sql", "name": "postgres_get_relations", "macro_sql": "{% macro postgres_get_relations () -%}\n\n  {#\n      -- in pg_depend, objid is the dependent, refobjid is the referenced object\n      --  > a pg_depend entry indicates that the referenced object cannot be\n      --  > dropped without also dropping the dependent object.\n  #}\n\n  {%- call statement('relations', fetch_result=True) -%}\n    with relation as (\n        select\n            pg_rewrite.ev_class as class,\n            pg_rewrite.oid as id\n        from pg_rewrite\n    ),\n    class as (\n        select\n            oid as id,\n            relname as name,\n            relnamespace as schema,\n            relkind as kind\n        from pg_class\n    ),\n    dependency as (\n        select\n            pg_depend.objid as id,\n            pg_depend.refobjid as ref\n        from pg_depend\n    ),\n    schema as (\n        select\n            pg_namespace.oid as id,\n            pg_namespace.nspname as name\n        from pg_namespace\n        where nspname != 'information_schema' and nspname not like 'pg\\_%'\n    ),\n    referenced as (\n        select\n            relation.id AS id,\n            referenced_class.name ,\n            referenced_class.schema ,\n            referenced_class.kind\n        from relation\n        join class as referenced_class on relation.class=referenced_class.id\n        where referenced_class.kind in ('r', 'v')\n    ),\n    relationships as (\n        select\n            referenced.name as referenced_name,\n            referenced.schema as referenced_schema_id,\n            dependent_class.name as dependent_name,\n            dependent_class.schema as dependent_schema_id,\n            referenced.kind as kind\n        from referenced\n        join dependency on referenced.id=dependency.id\n        join class as dependent_class on dependency.ref=dependent_class.id\n        where\n            (referenced.name != dependent_class.name or\n             referenced.schema != dependent_class.schema)\n    )\n\n    select\n        referenced_schema.name as referenced_schema,\n        relationships.referenced_name as referenced_name,\n        dependent_schema.name as dependent_schema,\n        relationships.dependent_name as dependent_name\n    from relationships\n    join schema as dependent_schema on relationships.dependent_schema_id=dependent_schema.id\n    join schema as referenced_schema on relationships.referenced_schema_id=referenced_schema.id\n    group by referenced_schema, referenced_name, dependent_schema, dependent_name\n    order by referenced_schema, referenced_name, dependent_schema, dependent_name;\n\n  {%- endcall -%}\n\n  {{ return(load_result('relations').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__create_table_as": {"unique_id": "macro.dbt_postgres.postgres__create_table_as", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_table_as", "macro_sql": "{% macro postgres__create_table_as(temporary, relation, sql) -%}\n  {%- set unlogged = config.get('unlogged', default=false) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary -%}\n    temporary\n  {%- elif unlogged -%}\n    unlogged\n  {%- endif %} table {{ relation }}\n  as (\n    {{ sql }}\n  );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__get_create_index_sql": {"unique_id": "macro.dbt_postgres.postgres__get_create_index_sql", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_create_index_sql", "macro_sql": "{% macro postgres__get_create_index_sql(relation, index_dict) -%}\n  {%- set index_config = adapter.parse_index(index_dict) -%}\n  {%- set comma_separated_columns = \", \".join(index_config.columns) -%}\n  {%- set index_name = index_config.render(relation) -%}\n\n  create {% if index_config.unique -%}\n    unique\n  {%- endif %} index if not exists\n  \"{{ index_name }}\"\n  on {{ relation }} {% if index_config.type -%}\n    using {{ index_config.type }}\n  {%- endif %}\n  ({{ comma_separated_columns }});\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__create_schema": {"unique_id": "macro.dbt_postgres.postgres__create_schema", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__create_schema", "macro_sql": "{% macro postgres__create_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier().include(database=False) }}\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__drop_schema": {"unique_id": "macro.dbt_postgres.postgres__drop_schema", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__drop_schema", "macro_sql": "{% macro postgres__drop_schema(relation) -%}\n  {% if relation.database -%}\n    {{ adapter.verify_database(relation.database) }}\n  {%- endif -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier().include(database=False) }} cascade\n  {%- endcall -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__get_columns_in_relation": {"unique_id": "macro.dbt_postgres.postgres__get_columns_in_relation", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__get_columns_in_relation", "macro_sql": "{% macro postgres__get_columns_in_relation(relation) -%}\n  {% call statement('get_columns_in_relation', fetch_result=True) %}\n      select\n          column_name,\n          data_type,\n          character_maximum_length,\n          numeric_precision,\n          numeric_scale\n\n      from {{ relation.information_schema('columns') }}\n      where table_name = '{{ relation.identifier }}'\n        {% if relation.schema %}\n        and table_schema = '{{ relation.schema }}'\n        {% endif %}\n      order by ordinal_position\n\n  {% endcall %}\n  {% set table = load_result('get_columns_in_relation').table %}\n  {{ return(sql_convert_columns_in_relation(table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt.sql_convert_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__list_relations_without_caching": {"unique_id": "macro.dbt_postgres.postgres__list_relations_without_caching", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_relations_without_caching", "macro_sql": "{% macro postgres__list_relations_without_caching(schema_relation) %}\n  {% call statement('list_relations_without_caching', fetch_result=True) -%}\n    select\n      '{{ schema_relation.database }}' as database,\n      tablename as name,\n      schemaname as schema,\n      'table' as type\n    from pg_tables\n    where schemaname ilike '{{ schema_relation.schema }}'\n    union all\n    select\n      '{{ schema_relation.database }}' as database,\n      viewname as name,\n      schemaname as schema,\n      'view' as type\n    from pg_views\n    where schemaname ilike '{{ schema_relation.schema }}'\n  {% endcall %}\n  {{ return(load_result('list_relations_without_caching').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__information_schema_name": {"unique_id": "macro.dbt_postgres.postgres__information_schema_name", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__information_schema_name", "macro_sql": "{% macro postgres__information_schema_name(database) -%}\n  {% if database_name -%}\n    {{ adapter.verify_database(database_name) }}\n  {%- endif -%}\n  information_schema\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__list_schemas": {"unique_id": "macro.dbt_postgres.postgres__list_schemas", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__list_schemas", "macro_sql": "{% macro postgres__list_schemas(database) %}\n  {% if database -%}\n    {{ adapter.verify_database(database) }}\n  {%- endif -%}\n  {% call statement('list_schemas', fetch_result=True, auto_begin=False) %}\n    select distinct nspname from pg_namespace\n  {% endcall %}\n  {{ return(load_result('list_schemas').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__check_schema_exists": {"unique_id": "macro.dbt_postgres.postgres__check_schema_exists", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__check_schema_exists", "macro_sql": "{% macro postgres__check_schema_exists(information_schema, schema) -%}\n  {% if information_schema.database -%}\n    {{ adapter.verify_database(information_schema.database) }}\n  {%- endif -%}\n  {% call statement('check_schema_exists', fetch_result=True, auto_begin=False) %}\n    select count(*) from pg_namespace where nspname = '{{ schema }}'\n  {% endcall %}\n  {{ return(load_result('check_schema_exists').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__current_timestamp": {"unique_id": "macro.dbt_postgres.postgres__current_timestamp", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__current_timestamp", "macro_sql": "{% macro postgres__current_timestamp() -%}\n  now()\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__snapshot_string_as_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_string_as_time", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_string_as_time", "macro_sql": "{% macro postgres__snapshot_string_as_time(timestamp) -%}\n    {%- set result = \"'\" ~ timestamp ~ \"'::timestamp without time zone\" -%}\n    {{ return(result) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__snapshot_get_time": {"unique_id": "macro.dbt_postgres.postgres__snapshot_get_time", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__snapshot_get_time", "macro_sql": "{% macro postgres__snapshot_get_time() -%}\n  {{ current_timestamp() }}::timestamp without time zone\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__make_temp_relation": {"unique_id": "macro.dbt_postgres.postgres__make_temp_relation", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__make_temp_relation", "macro_sql": "{% macro postgres__make_temp_relation(base_relation, suffix) %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% set dtstring = dt.strftime(\"%H%M%S%f\") %}\n    {% set suffix_length = suffix|length + dtstring|length %}\n    {% set relation_max_name_length = 63 %}\n    {% if suffix_length > relation_max_name_length %}\n        {% do exceptions.raise_compiler_error('Temp relation suffix is too long (' ~ suffix|length ~ ' characters). Maximum length is ' ~ (relation_max_name_length - dtstring|length) ~ ' characters.') %}\n    {% endif %}\n    {% set tmp_identifier = base_relation.identifier[:relation_max_name_length - suffix_length] ~ suffix ~ dtstring %}\n    {% do return(base_relation.incorporate(\n                                  path={\n                                    \"identifier\": tmp_identifier,\n                                    \"schema\": none,\n                                    \"database\": none\n                                  })) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres_escape_comment": {"unique_id": "macro.dbt_postgres.postgres_escape_comment", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres_escape_comment", "macro_sql": "{% macro postgres_escape_comment(comment) -%}\n  {% if comment is not string %}\n    {% do exceptions.raise_compiler_error('cannot escape a non-string: ' ~ comment) %}\n  {% endif %}\n  {%- set magic = '$dbt_comment_literal_block$' -%}\n  {%- if magic in comment -%}\n    {%- do exceptions.raise_compiler_error('The string ' ~ magic ~ ' is not allowed in comments.') -%}\n  {%- endif -%}\n  {{ magic }}{{ comment }}{{ magic }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__alter_relation_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_relation_comment", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_relation_comment", "macro_sql": "{% macro postgres__alter_relation_comment(relation, comment) %}\n  {% set escaped_comment = postgres_escape_comment(comment) %}\n  comment on {{ relation.type }} {{ relation }} is {{ escaped_comment }};\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__alter_column_comment": {"unique_id": "macro.dbt_postgres.postgres__alter_column_comment", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/adapters.sql", "original_file_path": "macros/adapters.sql", "name": "postgres__alter_column_comment", "macro_sql": "{% macro postgres__alter_column_comment(relation, column_dict) %}\n  {% for column_name in column_dict %}\n    {% set comment = column_dict[column_name]['description'] %}\n    {% set escaped_comment = postgres_escape_comment(comment) %}\n    comment on column {{ relation }}.{{ adapter.quote(column_name) if column_dict[column_name]['quote'] else column_name }} is {{ escaped_comment }};\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres_escape_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__get_catalog": {"unique_id": "macro.dbt_postgres.postgres__get_catalog", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/catalog.sql", "original_file_path": "macros/catalog.sql", "name": "postgres__get_catalog", "macro_sql": "{% macro postgres__get_catalog(information_schema, schemas) -%}\n\n  {%- call statement('catalog', fetch_result=True) -%}\n    {#\n      If the user has multiple databases set and the first one is wrong, this will fail.\n      But we won't fail in the case where there are multiple quoting-difference-only dbs, which is better.\n    #}\n    {% set database = information_schema.database %}\n    {{ adapter.verify_database(database) }}\n\n    select\n        '{{ database }}' as table_database,\n        sch.nspname as table_schema,\n        tbl.relname as table_name,\n        case tbl.relkind\n            when 'v' then 'VIEW'\n            else 'BASE TABLE'\n        end as table_type,\n        tbl_desc.description as table_comment,\n        col.attname as column_name,\n        col.attnum as column_index,\n        pg_catalog.format_type(col.atttypid, col.atttypmod) as column_type,\n        col_desc.description as column_comment,\n        pg_get_userbyid(tbl.relowner) as table_owner\n\n    from pg_catalog.pg_namespace sch\n    join pg_catalog.pg_class tbl on tbl.relnamespace = sch.oid\n    join pg_catalog.pg_attribute col on col.attrelid = tbl.oid\n    left outer join pg_catalog.pg_description tbl_desc on (tbl_desc.objoid = tbl.oid and tbl_desc.objsubid = 0)\n    left outer join pg_catalog.pg_description col_desc on (col_desc.objoid = tbl.oid and col_desc.objsubid = col.attnum)\n\n    where (\n        {%- for schema in schemas -%}\n          upper(sch.nspname) = upper('{{ schema }}'){%- if not loop.last %} or {% endif -%}\n        {%- endfor -%}\n      )\n      and not pg_is_other_temp_schema(sch.oid) -- not a temporary schema belonging to another session\n      and tbl.relpersistence = 'p' -- [p]ermanent table. Other values are [u]nlogged table, [t]emporary table\n      and tbl.relkind in ('r', 'v', 'f', 'p') -- o[r]dinary table, [v]iew, [f]oreign table, [p]artitioned table. Other values are [i]ndex, [S]equence, [c]omposite type, [t]OAST table, [m]aterialized view\n      and col.attnum > 0 -- negative numbers are used for system columns such as oid\n      and not col.attisdropped -- column as not been dropped\n\n    order by\n        sch.nspname,\n        tbl.relname,\n        col.attnum\n\n  {%- endcall -%}\n\n  {{ return(load_result('catalog').table) }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt_postgres.postgres__snapshot_merge_sql": {"unique_id": "macro.dbt_postgres.postgres__snapshot_merge_sql", "package_name": "dbt_postgres", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/postgres", "path": "macros/materializations/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot_merge.sql", "name": "postgres__snapshot_merge_sql", "macro_sql": "{% macro postgres__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    update {{ target }}\n    set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_scd_id::text = {{ target }}.dbt_scd_id::text\n      and DBT_INTERNAL_SOURCE.dbt_change_type::text in ('update'::text, 'delete'::text)\n      and {{ target }}.dbt_valid_to is null;\n\n    insert into {{ target }} ({{ insert_cols_csv }})\n    select {% for column in insert_cols -%}\n        DBT_INTERNAL_SOURCE.{{ column }} {%- if not loop.last %}, {%- endif %}\n    {%- endfor %}\n    from {{ source }} as DBT_INTERNAL_SOURCE\n    where DBT_INTERNAL_SOURCE.dbt_change_type::text = 'insert'::text;\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.statement": {"unique_id": "macro.dbt.statement", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "statement", "macro_sql": "{% macro statement(name=None, fetch_result=False, auto_begin=True) -%}\n  {%- if execute: -%}\n    {%- set sql = caller() -%}\n\n    {%- if name == 'main' -%}\n      {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n      {{ write(sql) }}\n    {%- endif -%}\n\n    {%- set res, table = adapter.execute(sql, auto_begin=auto_begin, fetch=fetch_result) -%}\n    {%- if name is not none -%}\n      {{ store_result(name, response=res, agate_table=table) }}\n    {%- endif -%}\n\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.noop_statement": {"unique_id": "macro.dbt.noop_statement", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/core.sql", "original_file_path": "macros/core.sql", "name": "noop_statement", "macro_sql": "{% macro noop_statement(name=None, message=None, code=None, rows_affected=None, res=None) -%}\n  {%- set sql = caller() -%}\n\n  {%- if name == 'main' -%}\n    {{ log('Writing runtime SQL for node \"{}\"'.format(model['unique_id'])) }}\n    {{ write(sql) }}\n  {%- endif -%}\n\n  {%- if name is not none -%}\n    {{ store_raw_result(name, message=message, code=code, rows_affected=rows_affected, agate_table=res) }}\n  {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.generate_schema_name": {"unique_id": "macro.dbt.generate_schema_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name", "macro_sql": "{% macro generate_schema_name(custom_schema_name, node) -%}\n    {{ return(adapter.dispatch('generate_schema_name', 'dbt')(custom_schema_name, node)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.default__generate_schema_name": {"unique_id": "macro.dbt.default__generate_schema_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "default__generate_schema_name", "macro_sql": "{% macro default__generate_schema_name(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if custom_schema_name is none -%}\n\n        {{ default_schema }}\n\n    {%- else -%}\n\n        {{ default_schema }}_{{ custom_schema_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.generate_schema_name_for_env": {"unique_id": "macro.dbt.generate_schema_name_for_env", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_schema.sql", "original_file_path": "macros/etc/get_custom_schema.sql", "name": "generate_schema_name_for_env", "macro_sql": "{% macro generate_schema_name_for_env(custom_schema_name, node) -%}\n\n    {%- set default_schema = target.schema -%}\n    {%- if target.name == 'prod' and custom_schema_name is not none -%}\n\n        {{ custom_schema_name | trim }}\n\n    {%- else -%}\n\n        {{ default_schema }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.generate_alias_name": {"unique_id": "macro.dbt.generate_alias_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_alias.sql", "original_file_path": "macros/etc/get_custom_alias.sql", "name": "generate_alias_name", "macro_sql": "{% macro generate_alias_name(custom_alias_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_alias_name', 'dbt')(custom_alias_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_alias_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.default__generate_alias_name": {"unique_id": "macro.dbt.default__generate_alias_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_alias.sql", "original_file_path": "macros/etc/get_custom_alias.sql", "name": "default__generate_alias_name", "macro_sql": "{% macro default__generate_alias_name(custom_alias_name=none, node=none) -%}\n\n    {%- if custom_alias_name is none -%}\n\n        {{ node.name }}\n\n    {%- else -%}\n\n        {{ custom_alias_name | trim }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.generate_database_name": {"unique_id": "macro.dbt.generate_database_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "generate_database_name", "macro_sql": "{% macro generate_database_name(custom_database_name=none, node=none) -%}\n    {% do return(adapter.dispatch('generate_database_name', 'dbt')(custom_database_name, node)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__generate_database_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.default__generate_database_name": {"unique_id": "macro.dbt.default__generate_database_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/get_custom_database.sql", "original_file_path": "macros/etc/get_custom_database.sql", "name": "default__generate_database_name", "macro_sql": "{% macro default__generate_database_name(custom_database_name=none, node=none) -%}\n    {%- set default_database = target.database -%}\n    {%- if custom_database_name is none -%}\n\n        {{ default_database }}\n\n    {%- else -%}\n\n        {{ custom_database_name }}\n\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.convert_datetime": {"unique_id": "macro.dbt.convert_datetime", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "convert_datetime", "macro_sql": "{% macro convert_datetime(date_str, date_fmt) %}\n\n  {% set error_msg -%}\n      The provided partition date '{{ date_str }}' does not match the expected format '{{ date_fmt }}'\n  {%- endset %}\n\n  {% set res = try_or_compiler_error(error_msg, modules.datetime.datetime.strptime, date_str.strip(), date_fmt) %}\n  {{ return(res) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.dates_in_range": {"unique_id": "macro.dbt.dates_in_range", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "dates_in_range", "macro_sql": "{% macro dates_in_range(start_date_str, end_date_str=none, in_fmt=\"%Y%m%d\", out_fmt=\"%Y%m%d\") %}\n    {% set end_date_str = start_date_str if end_date_str is none else end_date_str %}\n\n    {% set start_date = convert_datetime(start_date_str, in_fmt) %}\n    {% set end_date = convert_datetime(end_date_str, in_fmt) %}\n\n    {% set day_count = (end_date - start_date).days %}\n    {% if day_count < 0 %}\n        {% set msg -%}\n            Partiton start date is after the end date ({{ start_date }}, {{ end_date }})\n        {%- endset %}\n\n        {{ exceptions.raise_compiler_error(msg, model) }}\n    {% endif %}\n\n    {% set date_list = [] %}\n    {% for i in range(0, day_count + 1) %}\n        {% set the_date = (modules.datetime.timedelta(days=i) + start_date) %}\n        {% if not out_fmt %}\n            {% set _ = date_list.append(the_date) %}\n        {% else %}\n            {% set _ = date_list.append(the_date.strftime(out_fmt)) %}\n        {% endif %}\n    {% endfor %}\n\n    {{ return(date_list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.convert_datetime"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.partition_range": {"unique_id": "macro.dbt.partition_range", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "partition_range", "macro_sql": "{% macro partition_range(raw_partition_date, date_fmt='%Y%m%d') %}\n    {% set partition_range = (raw_partition_date | string).split(\",\") %}\n\n    {% if (partition_range | length) == 1 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = none %}\n    {% elif (partition_range | length) == 2 %}\n      {% set start_date = partition_range[0] %}\n      {% set end_date = partition_range[1] %}\n    {% else %}\n      {{ exceptions.raise_compiler_error(\"Invalid partition time. Expected format: {Start Date}[,{End Date}]. Got: \" ~ raw_partition_date) }}\n    {% endif %}\n\n    {{ return(dates_in_range(start_date, end_date, in_fmt=date_fmt)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.dates_in_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.py_current_timestring": {"unique_id": "macro.dbt.py_current_timestring", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/datetime.sql", "original_file_path": "macros/etc/datetime.sql", "name": "py_current_timestring", "macro_sql": "{% macro py_current_timestring() %}\n    {% set dt = modules.datetime.datetime.now() %}\n    {% do return(dt.strftime(\"%Y%m%d%H%M%S%f\")) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.get_where_subquery": {"unique_id": "macro.dbt.get_where_subquery", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/where_subquery.sql", "original_file_path": "macros/etc/where_subquery.sql", "name": "get_where_subquery", "macro_sql": "{% macro get_where_subquery(relation) -%}\n    {% do return(adapter.dispatch('get_where_subquery')(relation)) %}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_where_subquery"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.default__get_where_subquery": {"unique_id": "macro.dbt.default__get_where_subquery", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/where_subquery.sql", "original_file_path": "macros/etc/where_subquery.sql", "name": "default__get_where_subquery", "macro_sql": "{% macro default__get_where_subquery(relation) -%}\n    {% set where = config.get('where', '') %}\n    {% if where %}\n        {%- set filtered -%}\n            (select * from {{ relation }} where {{ where }}) dbt_subquery\n        {%- endset -%}\n        {% do return(filtered) %}\n    {%- else -%}\n        {% do return(relation) %}\n    {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.is_incremental": {"unique_id": "macro.dbt.is_incremental", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/is_incremental.sql", "original_file_path": "macros/etc/is_incremental.sql", "name": "is_incremental", "macro_sql": "{% macro is_incremental() %}\n    {#-- do not run introspective queries in parsing #}\n    {% if not execute %}\n        {{ return(False) }}\n    {% else %}\n        {% set relation = adapter.get_relation(this.database, this.schema, this.table) %}\n        {{ return(relation is not none\n                  and relation.type == 'table'\n                  and model.config.materialized == 'incremental'\n                  and not should_full_refresh()) }}\n    {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.run_query": {"unique_id": "macro.dbt.run_query", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/etc/query.sql", "original_file_path": "macros/etc/query.sql", "name": "run_query", "macro_sql": "{% macro run_query(sql) %}\n  {% call statement(\"run_query_statement\", fetch_result=true, auto_begin=false) %}\n    {{ sql }}\n  {% endcall %}\n\n  {% do return(load_result(\"run_query_statement\").table) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.get_test_sql": {"unique_id": "macro.dbt.get_test_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "get_test_sql", "macro_sql": "{% macro get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n  {{ adapter.dispatch('get_test_sql', 'dbt')(main_sql, fail_calc, warn_if, error_if, limit) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.default__get_test_sql": {"unique_id": "macro.dbt.default__get_test_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "default__get_test_sql", "macro_sql": "{% macro default__get_test_sql(main_sql, fail_calc, warn_if, error_if, limit) -%}\n    select\n      {{ fail_calc }} as failures,\n      {{ fail_calc }} {{ warn_if }} as should_warn,\n      {{ fail_calc }} {{ error_if }} as should_error\n    from (\n      {{ main_sql }}\n      {{ \"limit \" ~ limit if limit != none }}\n    ) dbt_internal_test\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.materialization_test_default": {"unique_id": "macro.dbt.materialization_test_default", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/test.sql", "original_file_path": "macros/materializations/test.sql", "name": "materialization_test_default", "macro_sql": "\n\n{%- materialization test, default -%}\n\n  {% set relations = [] %}\n\n  {% if should_store_failures() %}\n\n    {% set identifier = model['alias'] %}\n    {% set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n    {% set target_relation = api.Relation.create(\n        identifier=identifier, schema=schema, database=database, type='table') -%} %}\n    \n    {% if old_relation %}\n        {% do adapter.drop_relation(old_relation) %}\n    {% endif %}\n    \n    {% call statement(auto_begin=True) %}\n        {{ create_table_as(False, target_relation, sql) }}\n    {% endcall %}\n    \n    {% do relations.append(target_relation) %}\n  \n    {% set main_sql %}\n        select *\n        from {{ target_relation }}\n    {% endset %}\n    \n    {{ adapter.commit() }}\n  \n  {% else %}\n\n      {% set main_sql = sql %}\n  \n  {% endif %}\n\n  {% set limit = config.get('limit') %}\n  {% set fail_calc = config.get('fail_calc') %}\n  {% set warn_if = config.get('warn_if') %}\n  {% set error_if = config.get('error_if') %}\n\n  {% call statement('main', fetch_result=True) -%}\n\n    {{ get_test_sql(main_sql, fail_calc, warn_if, error_if, limit)}}\n\n  {%- endcall %}\n  \n  {{ return({'relations': relations}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_store_failures", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.get_test_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.run_hooks": {"unique_id": "macro.dbt.run_hooks", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "run_hooks", "macro_sql": "{% macro run_hooks(hooks, inside_transaction=True) %}\n  {% for hook in hooks | selectattr('transaction', 'equalto', inside_transaction)  %}\n    {% if not inside_transaction and loop.first %}\n      {% call statement(auto_begin=inside_transaction) %}\n        commit;\n      {% endcall %}\n    {% endif %}\n    {% set rendered = render(hook.get('sql')) | trim %}\n    {% if (rendered | length) > 0 %}\n      {% call statement(auto_begin=inside_transaction) %}\n        {{ rendered }}\n      {% endcall %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.column_list": {"unique_id": "macro.dbt.column_list", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list", "macro_sql": "{% macro column_list(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {% if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.column_list_for_create_table": {"unique_id": "macro.dbt.column_list_for_create_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "column_list_for_create_table", "macro_sql": "{% macro column_list_for_create_table(columns) %}\n  {%- for col in columns %}\n    {{ col.name }} {{ col.data_type }} {%- if not loop.last %},{% endif %}\n  {% endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.make_hook_config": {"unique_id": "macro.dbt.make_hook_config", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "make_hook_config", "macro_sql": "{% macro make_hook_config(sql, inside_transaction) %}\n    {{ tojson({\"sql\": sql, \"transaction\": inside_transaction}) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.before_begin": {"unique_id": "macro.dbt.before_begin", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "before_begin", "macro_sql": "{% macro before_begin(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.in_transaction": {"unique_id": "macro.dbt.in_transaction", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "in_transaction", "macro_sql": "{% macro in_transaction(sql) %}\n    {{ make_hook_config(sql, inside_transaction=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.after_commit": {"unique_id": "macro.dbt.after_commit", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "after_commit", "macro_sql": "{% macro after_commit(sql) %}\n    {{ make_hook_config(sql, inside_transaction=False) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_hook_config"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.drop_relation_if_exists": {"unique_id": "macro.dbt.drop_relation_if_exists", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "drop_relation_if_exists", "macro_sql": "{% macro drop_relation_if_exists(relation) %}\n  {% if relation is not none %}\n    {{ adapter.drop_relation(relation) }}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.load_relation": {"unique_id": "macro.dbt.load_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "load_relation", "macro_sql": "{% macro load_relation(relation) %}\n  {% do return(adapter.get_relation(\n    database=relation.database,\n    schema=relation.schema,\n    identifier=relation.identifier\n  )) -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.should_full_refresh": {"unique_id": "macro.dbt.should_full_refresh", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_full_refresh", "macro_sql": "{% macro should_full_refresh() %}\n  {% set config_full_refresh = config.get('full_refresh') %}\n  {% if config_full_refresh is none %}\n    {% set config_full_refresh = flags.FULL_REFRESH %}\n  {% endif %}\n  {% do return(config_full_refresh) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.should_store_failures": {"unique_id": "macro.dbt.should_store_failures", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/helpers.sql", "original_file_path": "macros/materializations/helpers.sql", "name": "should_store_failures", "macro_sql": "{% macro should_store_failures() %}\n  {% set config_store_failures = config.get('store_failures') %}\n  {% if config_store_failures is none %}\n    {% set config_store_failures = flags.STORE_FAILURES %}\n  {% endif %}\n  {% do return(config_store_failures) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696436}, "macro.dbt.materialization_table_default": {"unique_id": "macro.dbt.materialization_table_default", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/table/table.sql", "original_file_path": "macros/materializations/table/table.sql", "name": "materialization_table_default", "macro_sql": "{% materialization table, default %}\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type='table') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema,\n                                                      database=database,\n                                                      type='table') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n      See ../view/view.sql for more information about this relation.\n  */\n  {%- set backup_relation_type = 'table' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema,\n                                                database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_table_as(False, intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  {% if old_relation is not none %}\n      {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do create_indexes(target_relation) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  -- finally, drop the existing/backup relation after the commit\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt.create_indexes", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.strategy_dispatch": {"unique_id": "macro.dbt.strategy_dispatch", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "strategy_dispatch", "macro_sql": "{% macro strategy_dispatch(name) -%}\n{% set original_name = name %}\n  {% if '.' in name %}\n    {% set package_name, name = name.split(\".\", 1) %}\n  {% else %}\n    {% set package_name = none %}\n  {% endif %}\n\n  {% if package_name is none %}\n    {% set package_context = context %}\n  {% elif package_name in context %}\n    {% set package_context = context[package_name] %}\n  {% else %}\n    {% set error_msg %}\n        Could not find package '{{package_name}}', called with '{{original_name}}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n\n  {%- set search_name = 'snapshot_' ~ name ~ '_strategy' -%}\n\n  {% if search_name not in package_context %}\n    {% set error_msg %}\n        The specified strategy macro '{{name}}' was not found in package '{{ package_name }}'\n    {% endset %}\n    {{ exceptions.raise_compiler_error(error_msg | trim) }}\n  {% endif %}\n  {{ return(package_context[search_name]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_hash_arguments": {"unique_id": "macro.dbt.snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_hash_arguments", "macro_sql": "{% macro snapshot_hash_arguments(args) -%}\n  {{ adapter.dispatch('snapshot_hash_arguments', 'dbt')(args) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__snapshot_hash_arguments": {"unique_id": "macro.dbt.default__snapshot_hash_arguments", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_hash_arguments", "macro_sql": "{% macro default__snapshot_hash_arguments(args) -%}\n    md5({%- for arg in args -%}\n        coalesce(cast({{ arg }} as varchar ), '')\n        {% if not loop.last %} || '|' || {% endif %}\n    {%- endfor -%})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_get_time": {"unique_id": "macro.dbt.snapshot_get_time", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_get_time", "macro_sql": "{% macro snapshot_get_time() -%}\n  {{ adapter.dispatch('snapshot_get_time', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__snapshot_get_time": {"unique_id": "macro.dbt.default__snapshot_get_time", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_get_time", "macro_sql": "{% macro default__snapshot_get_time() -%}\n  {{ current_timestamp() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_timestamp_strategy": {"unique_id": "macro.dbt.snapshot_timestamp_strategy", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_timestamp_strategy", "macro_sql": "{% macro snapshot_timestamp_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set primary_key = config['unique_key'] %}\n    {% set updated_at = config['updated_at'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n\n    {#/*\n        The snapshot relation might not have an {{ updated_at }} value if the\n        snapshot strategy is changed from `check` to `timestamp`. We\n        should use a dbt-created column for the comparison in the snapshot\n        table instead of assuming that the user-supplied {{ updated_at }}\n        will be present in the historical data.\n\n        See https://github.com/dbt-labs/dbt/issues/2350\n    */ #}\n    {% set row_changed_expr -%}\n        ({{ snapshotted_rel }}.dbt_valid_from < {{ current_rel }}.{{ updated_at }})\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_string_as_time": {"unique_id": "macro.dbt.snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_string_as_time", "macro_sql": "{% macro snapshot_string_as_time(timestamp) -%}\n    {{ adapter.dispatch('snapshot_string_as_time', 'dbt')(timestamp) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_string_as_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__snapshot_string_as_time": {"unique_id": "macro.dbt.default__snapshot_string_as_time", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "default__snapshot_string_as_time", "macro_sql": "{% macro default__snapshot_string_as_time(timestamp) %}\n    {% do exceptions.raise_not_implemented(\n        'snapshot_string_as_time macro not implemented for adapter '+adapter.type()\n    ) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_check_all_get_existing_columns": {"unique_id": "macro.dbt.snapshot_check_all_get_existing_columns", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_all_get_existing_columns", "macro_sql": "{% macro snapshot_check_all_get_existing_columns(node, target_exists) -%}\n    {%- set query_columns = get_columns_in_query(node['compiled_sql']) -%}\n    {%- if not target_exists -%}\n        {# no table yet -> return whatever the query does #}\n        {{ return([false, query_columns]) }}\n    {%- endif -%}\n    {# handle any schema changes #}\n    {%- set target_table = node.get('alias', node.get('name')) -%}\n    {%- set target_relation = adapter.get_relation(database=node.database, schema=node.schema, identifier=target_table) -%}\n    {%- set existing_cols = get_columns_in_query('select * from ' ~ target_relation) -%}\n    {%- set ns = namespace() -%} {# handle for-loop scoping with a namespace #}\n    {%- set ns.column_added = false -%}\n\n    {%- set intersection = [] -%}\n    {%- for col in query_columns -%}\n        {%- if col in existing_cols -%}\n            {%- do intersection.append(col) -%}\n        {%- else -%}\n            {% set ns.column_added = true %}\n        {%- endif -%}\n    {%- endfor -%}\n    {{ return([ns.column_added, intersection]) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_check_strategy": {"unique_id": "macro.dbt.snapshot_check_strategy", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/strategies.sql", "original_file_path": "macros/materializations/snapshot/strategies.sql", "name": "snapshot_check_strategy", "macro_sql": "{% macro snapshot_check_strategy(node, snapshotted_rel, current_rel, config, target_exists) %}\n    {% set check_cols_config = config['check_cols'] %}\n    {% set primary_key = config['unique_key'] %}\n    {% set invalidate_hard_deletes = config.get('invalidate_hard_deletes', false) %}\n    \n    {% set select_current_time -%}\n        select {{ snapshot_get_time() }} as snapshot_start\n    {%- endset %}\n\n    {#-- don't access the column by name, to avoid dealing with casing issues on snowflake #}\n    {%- set now = run_query(select_current_time)[0][0] -%}\n    {% if now is none or now is undefined -%}\n        {%- do exceptions.raise_compiler_error('Could not get a snapshot start time from the database') -%}\n    {%- endif %}\n    {% set updated_at = config.get('updated_at', snapshot_string_as_time(now)) %}\n\n    {% set column_added = false %}\n\n    {% if check_cols_config == 'all' %}\n        {% set column_added, check_cols = snapshot_check_all_get_existing_columns(node, target_exists) %}\n    {% elif check_cols_config is iterable and (check_cols_config | length) > 0 %}\n        {% set check_cols = check_cols_config %}\n    {% else %}\n        {% do exceptions.raise_compiler_error(\"Invalid value for 'check_cols': \" ~ check_cols_config) %}\n    {% endif %}\n\n    {%- set row_changed_expr -%}\n    (\n    {%- if column_added -%}\n        TRUE\n    {%- else -%}\n    {%- for col in check_cols -%}\n        {{ snapshotted_rel }}.{{ col }} != {{ current_rel }}.{{ col }}\n        or\n        (\n            (({{ snapshotted_rel }}.{{ col }} is null) and not ({{ current_rel }}.{{ col }} is null))\n            or\n            ((not {{ snapshotted_rel }}.{{ col }} is null) and ({{ current_rel }}.{{ col }} is null))\n        )\n        {%- if not loop.last %} or {% endif -%}\n    {%- endfor -%}\n    {%- endif -%}\n    )\n    {%- endset %}\n\n    {% set scd_id_expr = snapshot_hash_arguments([primary_key, updated_at]) %}\n\n    {% do return({\n        \"unique_key\": primary_key,\n        \"updated_at\": updated_at,\n        \"row_changed\": row_changed_expr,\n        \"scd_id\": scd_id_expr,\n        \"invalidate_hard_deletes\": invalidate_hard_deletes\n    }) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time", "macro.dbt.run_query", "macro.dbt.snapshot_string_as_time", "macro.dbt.snapshot_check_all_get_existing_columns", "macro.dbt.snapshot_hash_arguments"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_columns": {"unique_id": "macro.dbt.create_columns", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "create_columns", "macro_sql": "{% macro create_columns(relation, columns) %}\n  {{ adapter.dispatch('create_columns', 'dbt')(relation, columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__create_columns": {"unique_id": "macro.dbt.default__create_columns", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__create_columns", "macro_sql": "{% macro default__create_columns(relation, columns) %}\n  {% for column in columns %}\n    {% call statement() %}\n      alter table {{ relation }} add column \"{{ column.name }}\" {{ column.data_type }};\n    {% endcall %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.post_snapshot": {"unique_id": "macro.dbt.post_snapshot", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "post_snapshot", "macro_sql": "{% macro post_snapshot(staging_relation) %}\n  {{ adapter.dispatch('post_snapshot', 'dbt')(staging_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__post_snapshot": {"unique_id": "macro.dbt.default__post_snapshot", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "default__post_snapshot", "macro_sql": "{% macro default__post_snapshot(staging_relation) %}\n    {# no-op #}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_staging_table": {"unique_id": "macro.dbt.snapshot_staging_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "snapshot_staging_table", "macro_sql": "{% macro snapshot_staging_table(strategy, source_sql, target_relation) -%}\n\n    with snapshot_query as (\n\n        {{ source_sql }}\n\n    ),\n\n    snapshotted_data as (\n\n        select *,\n            {{ strategy.unique_key }} as dbt_unique_key\n\n        from {{ target_relation }}\n        where dbt_valid_to is null\n\n    ),\n\n    insertions_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to,\n            {{ strategy.scd_id }} as dbt_scd_id\n\n        from snapshot_query\n    ),\n\n    updates_source_data as (\n\n        select\n            *,\n            {{ strategy.unique_key }} as dbt_unique_key,\n            {{ strategy.updated_at }} as dbt_updated_at,\n            {{ strategy.updated_at }} as dbt_valid_from,\n            {{ strategy.updated_at }} as dbt_valid_to\n\n        from snapshot_query\n    ),\n\n    {%- if strategy.invalidate_hard_deletes %}\n\n    deletes_source_data as (\n\n        select \n            *,\n            {{ strategy.unique_key }} as dbt_unique_key\n        from snapshot_query\n    ),\n    {% endif %}\n\n    insertions as (\n\n        select\n            'insert' as dbt_change_type,\n            source_data.*\n\n        from insertions_source_data as source_data\n        left outer join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where snapshotted_data.dbt_unique_key is null\n           or (\n                snapshotted_data.dbt_unique_key is not null\n            and (\n                {{ strategy.row_changed }}\n            )\n        )\n\n    ),\n\n    updates as (\n\n        select\n            'update' as dbt_change_type,\n            source_data.*,\n            snapshotted_data.dbt_scd_id\n\n        from updates_source_data as source_data\n        join snapshotted_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where (\n            {{ strategy.row_changed }}\n        )\n    )\n\n    {%- if strategy.invalidate_hard_deletes -%}\n    ,\n\n    deletes as (\n    \n        select\n            'delete' as dbt_change_type,\n            source_data.*,\n            {{ snapshot_get_time() }} as dbt_valid_from,\n            {{ snapshot_get_time() }} as dbt_updated_at,\n            {{ snapshot_get_time() }} as dbt_valid_to,\n            snapshotted_data.dbt_scd_id\n    \n        from snapshotted_data\n        left join deletes_source_data as source_data on snapshotted_data.dbt_unique_key = source_data.dbt_unique_key\n        where source_data.dbt_unique_key is null\n    )\n    {%- endif %}\n\n    select * from insertions\n    union all\n    select * from updates\n    {%- if strategy.invalidate_hard_deletes %}\n    union all\n    select * from deletes\n    {%- endif %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.snapshot_get_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.build_snapshot_table": {"unique_id": "macro.dbt.build_snapshot_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_table", "macro_sql": "{% macro build_snapshot_table(strategy, sql) %}\n\n    select *,\n        {{ strategy.scd_id }} as dbt_scd_id,\n        {{ strategy.updated_at }} as dbt_updated_at,\n        {{ strategy.updated_at }} as dbt_valid_from,\n        nullif({{ strategy.updated_at }}, {{ strategy.updated_at }}) as dbt_valid_to\n    from (\n        {{ sql }}\n    ) sbq\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_or_create_relation": {"unique_id": "macro.dbt.get_or_create_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "get_or_create_relation", "macro_sql": "{% macro get_or_create_relation(database, schema, identifier, type) %}\n  {%- set target_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) %}\n\n  {% if target_relation %}\n    {% do return([true, target_relation]) %}\n  {% endif %}\n\n  {%- set new_relation = api.Relation.create(\n      database=database,\n      schema=schema,\n      identifier=identifier,\n      type=type\n  ) -%}\n  {% do return([false, new_relation]) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.build_snapshot_staging_table": {"unique_id": "macro.dbt.build_snapshot_staging_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "build_snapshot_staging_table", "macro_sql": "{% macro build_snapshot_staging_table(strategy, sql, target_relation) %}\n    {% set tmp_relation = make_temp_relation(target_relation) %}\n\n    {% set select = snapshot_staging_table(strategy, sql, target_relation) %}\n\n    {% call statement('build_snapshot_staging_relation') %}\n        {{ create_table_as(True, tmp_relation, select) }}\n    {% endcall %}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.make_temp_relation", "macro.dbt.snapshot_staging_table", "macro.dbt.statement", "macro.dbt.create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.materialization_snapshot_default": {"unique_id": "macro.dbt.materialization_snapshot_default", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot.sql", "original_file_path": "macros/materializations/snapshot/snapshot.sql", "name": "materialization_snapshot_default", "macro_sql": "{% materialization snapshot, default %}\n  {%- set config = model['config'] -%}\n\n  {%- set target_table = model.get('alias', model.get('name')) -%}\n\n  {%- set strategy_name = config.get('strategy') -%}\n  {%- set unique_key = config.get('unique_key') %}\n\n  {% if not adapter.check_schema_exists(model.database, model.schema) %}\n    {% do create_schema(model.database, model.schema) %}\n  {% endif %}\n\n  {% set target_relation_exists, target_relation = get_or_create_relation(\n          database=model.database,\n          schema=model.schema,\n          identifier=target_table,\n          type='table') -%}\n\n  {%- if not target_relation.is_table -%}\n    {% do exceptions.relation_wrong_type(target_relation, 'table') %}\n  {%- endif -%}\n\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set strategy_macro = strategy_dispatch(strategy_name) %}\n  {% set strategy = strategy_macro(model, \"snapshotted_data\", \"source_data\", config, target_relation_exists) %}\n\n  {% if not target_relation_exists %}\n\n      {% set build_sql = build_snapshot_table(strategy, model['compiled_sql']) %}\n      {% set final_sql = create_table_as(False, target_relation, build_sql) %}\n\n  {% else %}\n\n      {{ adapter.valid_snapshot_target(target_relation) }}\n\n      {% set staging_table = build_snapshot_staging_table(strategy, sql, target_relation) %}\n\n      -- this may no-op if the database does not require column expansion\n      {% do adapter.expand_target_column_types(from_relation=staging_table,\n                                               to_relation=target_relation) %}\n\n      {% set missing_columns = adapter.get_missing_columns(staging_table, target_relation)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% do create_columns(target_relation, missing_columns) %}\n\n      {% set source_columns = adapter.get_columns_in_relation(staging_table)\n                                   | rejectattr('name', 'equalto', 'dbt_change_type')\n                                   | rejectattr('name', 'equalto', 'DBT_CHANGE_TYPE')\n                                   | rejectattr('name', 'equalto', 'dbt_unique_key')\n                                   | rejectattr('name', 'equalto', 'DBT_UNIQUE_KEY')\n                                   | list %}\n\n      {% set quoted_source_columns = [] %}\n      {% for column in source_columns %}\n        {% do quoted_source_columns.append(adapter.quote(column.name)) %}\n      {% endfor %}\n\n      {% set final_sql = snapshot_merge_sql(\n            target = target_relation,\n            source = staging_table,\n            insert_cols = quoted_source_columns\n         )\n      %}\n\n  {% endif %}\n\n  {% call statement('main') %}\n      {{ final_sql }}\n  {% endcall %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if not target_relation_exists %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {% if staging_table is defined %}\n      {% do post_snapshot(staging_table) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_schema", "macro.dbt.get_or_create_relation", "macro.dbt.run_hooks", "macro.dbt.strategy_dispatch", "macro.dbt.build_snapshot_table", "macro.dbt.create_table_as", "macro.dbt.build_snapshot_staging_table", "macro.dbt.create_columns", "macro.dbt.snapshot_merge_sql", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes", "macro.dbt.post_snapshot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.snapshot_merge_sql": {"unique_id": "macro.dbt.snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "snapshot_merge_sql", "macro_sql": "{% macro snapshot_merge_sql(target, source, insert_cols) -%}\n  {{ adapter.dispatch('snapshot_merge_sql', 'dbt')(target, source, insert_cols) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__snapshot_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__snapshot_merge_sql": {"unique_id": "macro.dbt.default__snapshot_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/snapshot/snapshot_merge.sql", "original_file_path": "macros/materializations/snapshot/snapshot_merge.sql", "name": "default__snapshot_merge_sql", "macro_sql": "{% macro default__snapshot_merge_sql(target, source, insert_cols) -%}\n    {%- set insert_cols_csv = insert_cols | join(', ') -%}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n    using {{ source }} as DBT_INTERNAL_SOURCE\n    on DBT_INTERNAL_SOURCE.dbt_scd_id = DBT_INTERNAL_DEST.dbt_scd_id\n\n    when matched\n     and DBT_INTERNAL_DEST.dbt_valid_to is null\n     and DBT_INTERNAL_SOURCE.dbt_change_type in ('update', 'delete')\n        then update\n        set dbt_valid_to = DBT_INTERNAL_SOURCE.dbt_valid_to\n\n    when not matched\n     and DBT_INTERNAL_SOURCE.dbt_change_type = 'insert'\n        then insert ({{ insert_cols_csv }})\n        values ({{ insert_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_merge_sql": {"unique_id": "macro.dbt.get_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_merge_sql", "macro_sql": "{% macro get_merge_sql(target, source, unique_key, dest_columns, predicates=none) -%}\n  {{ adapter.dispatch('get_merge_sql', 'dbt')(target, source, unique_key, dest_columns, predicates) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_delete_insert_merge_sql": {"unique_id": "macro.dbt.get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_delete_insert_merge_sql", "macro_sql": "{% macro get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n  {{ adapter.dispatch('get_delete_insert_merge_sql', 'dbt')(target, source, unique_key, dest_columns) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_insert_overwrite_merge_sql", "macro_sql": "{% macro get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header=false) -%}\n  {{ adapter.dispatch('get_insert_overwrite_merge_sql', 'dbt')(target, source, dest_columns, predicates, include_sql_header) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_insert_overwrite_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_merge_sql": {"unique_id": "macro.dbt.default__get_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_merge_sql", "macro_sql": "{% macro default__get_merge_sql(target, source, unique_key, dest_columns, predicates) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set update_columns = config.get('merge_update_columns', default = dest_columns | map(attribute=\"quoted\") | list) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {% if unique_key %}\n        {% set unique_key_match %}\n            DBT_INTERNAL_SOURCE.{{ unique_key }} = DBT_INTERNAL_DEST.{{ unique_key }}\n        {% endset %}\n        {% do predicates.append(unique_key_match) %}\n    {% else %}\n        {% do predicates.append('FALSE') %}\n    {% endif %}\n\n    {{ sql_header if sql_header is not none }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on {{ predicates | join(' and ') }}\n\n    {% if unique_key %}\n    when matched then update set\n        {% for column_name in update_columns -%}\n            {{ column_name }} = DBT_INTERNAL_SOURCE.{{ column_name }}\n            {%- if not loop.last %}, {%- endif %}\n        {%- endfor %}\n    {% endif %}\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_quoted_csv": {"unique_id": "macro.dbt.get_quoted_csv", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "get_quoted_csv", "macro_sql": "{% macro get_quoted_csv(column_names) %}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote(col)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.common_get_delete_insert_merge_sql": {"unique_id": "macro.dbt.common_get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "common_get_delete_insert_merge_sql", "macro_sql": "{% macro common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n\n    {% if unique_key is not none %}\n    delete from {{ target }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ source }}\n    );\n    {% endif %}\n\n    insert into {{ target }} ({{ dest_cols_csv }})\n    (\n        select {{ dest_cols_csv }}\n        from {{ source }}\n    )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_delete_insert_merge_sql": {"unique_id": "macro.dbt.default__get_delete_insert_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_delete_insert_merge_sql", "macro_sql": "{% macro default__get_delete_insert_merge_sql(target, source, unique_key, dest_columns) -%}\n    {{ common_get_delete_insert_merge_sql(target, source, unique_key, dest_columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.common_get_delete_insert_merge_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_insert_overwrite_merge_sql": {"unique_id": "macro.dbt.default__get_insert_overwrite_merge_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/common/merge.sql", "original_file_path": "macros/materializations/common/merge.sql", "name": "default__get_insert_overwrite_merge_sql", "macro_sql": "{% macro default__get_insert_overwrite_merge_sql(target, source, dest_columns, predicates, include_sql_header) -%}\n    {%- set predicates = [] if predicates is none else [] + predicates -%}\n    {%- set dest_cols_csv = get_quoted_csv(dest_columns | map(attribute=\"name\")) -%}\n    {%- set sql_header = config.get('sql_header', none) -%}\n\n    {{ sql_header if sql_header is not none and include_sql_header }}\n\n    merge into {{ target }} as DBT_INTERNAL_DEST\n        using {{ source }} as DBT_INTERNAL_SOURCE\n        on FALSE\n\n    when not matched by source\n        {% if predicates %} and {{ predicates | join(' and ') }} {% endif %}\n        then delete\n\n    when not matched then insert\n        ({{ dest_cols_csv }})\n    values\n        ({{ dest_cols_csv }})\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_quoted_csv"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_csv_table": {"unique_id": "macro.dbt.create_csv_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "create_csv_table", "macro_sql": "{% macro create_csv_table(model, agate_table) -%}\n  {{ adapter.dispatch('create_csv_table', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__create_csv_table": {"unique_id": "macro.dbt.default__create_csv_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__create_csv_table", "macro_sql": "{% macro default__create_csv_table(model, agate_table) %}\n  {%- set column_override = model['config'].get('column_types', {}) -%}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n\n  {% set sql %}\n    create table {{ this.render() }} (\n        {%- for col_name in agate_table.column_names -%}\n            {%- set inferred_type = adapter.convert_type(agate_table, loop.index0) -%}\n            {%- set type = column_override.get(col_name, inferred_type) -%}\n            {%- set column_name = (col_name | string) -%}\n            {{ adapter.quote_seed_column(column_name, quote_seed_column) }} {{ type }} {%- if not loop.last -%}, {%- endif -%}\n        {%- endfor -%}\n    )\n  {% endset %}\n\n  {% call statement('_') -%}\n    {{ sql }}\n  {%- endcall %}\n\n  {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.reset_csv_table": {"unique_id": "macro.dbt.reset_csv_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "reset_csv_table", "macro_sql": "{% macro reset_csv_table(model, full_refresh, old_relation, agate_table) -%}\n  {{ adapter.dispatch('reset_csv_table', 'dbt')(model, full_refresh, old_relation, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__reset_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__reset_csv_table": {"unique_id": "macro.dbt.default__reset_csv_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__reset_csv_table", "macro_sql": "{% macro default__reset_csv_table(model, full_refresh, old_relation, agate_table) %}\n    {% set sql = \"\" %}\n    {% if full_refresh %}\n        {{ adapter.drop_relation(old_relation) }}\n        {% set sql = create_csv_table(model, agate_table) %}\n    {% else %}\n        {{ adapter.truncate_relation(old_relation) }}\n        {% set sql = \"truncate table \" ~ old_relation %}\n    {% endif %}\n\n    {{ return(sql) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.create_csv_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_binding_char": {"unique_id": "macro.dbt.get_binding_char", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_binding_char", "macro_sql": "{% macro get_binding_char() -%}\n  {{ adapter.dispatch('get_binding_char', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_binding_char": {"unique_id": "macro.dbt.default__get_binding_char", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__get_binding_char", "macro_sql": "{% macro default__get_binding_char() %}\n  {{ return('%s') }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_batch_size": {"unique_id": "macro.dbt.get_batch_size", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_batch_size", "macro_sql": "{% macro get_batch_size() -%}\n  {{ return(adapter.dispatch('get_batch_size', 'dbt')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_batch_size"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_batch_size": {"unique_id": "macro.dbt.default__get_batch_size", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__get_batch_size", "macro_sql": "{% macro default__get_batch_size() %}\n  {{ return(10000) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_seed_column_quoted_csv": {"unique_id": "macro.dbt.get_seed_column_quoted_csv", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "get_seed_column_quoted_csv", "macro_sql": "{% macro get_seed_column_quoted_csv(model, column_names) %}\n  {%- set quote_seed_column = model['config'].get('quote_columns', None) -%}\n    {% set quoted = [] %}\n    {% for col in column_names -%}\n        {%- do quoted.append(adapter.quote_seed_column(col, quote_seed_column)) -%}\n    {%- endfor %}\n\n    {%- set dest_cols_csv = quoted | join(', ') -%}\n    {{ return(dest_cols_csv) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.load_csv_rows": {"unique_id": "macro.dbt.load_csv_rows", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "load_csv_rows", "macro_sql": "{% macro load_csv_rows(model, agate_table) -%}\n  {{ adapter.dispatch('load_csv_rows', 'dbt')(model, agate_table) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__load_csv_rows"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__load_csv_rows": {"unique_id": "macro.dbt.default__load_csv_rows", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "default__load_csv_rows", "macro_sql": "{% macro default__load_csv_rows(model, agate_table) %}\n\n  {% set batch_size = get_batch_size() %}\n\n  {% set cols_sql = get_seed_column_quoted_csv(model, agate_table.column_names) %}\n  {% set bindings = [] %}\n\n  {% set statements = [] %}\n\n  {% for chunk in agate_table.rows | batch(batch_size) %}\n      {% set bindings = [] %}\n\n      {% for row in chunk %}\n          {% do bindings.extend(row) %}\n      {% endfor %}\n\n      {% set sql %}\n          insert into {{ this.render() }} ({{ cols_sql }}) values\n          {% for row in chunk -%}\n              ({%- for column in agate_table.column_names -%}\n                  {{ get_binding_char() }}\n                  {%- if not loop.last%},{%- endif %}\n              {%- endfor -%})\n              {%- if not loop.last%},{%- endif %}\n          {%- endfor %}\n      {% endset %}\n\n      {% do adapter.add_query(sql, bindings=bindings, abridge_sql_log=True) %}\n\n      {% if loop.index0 == 0 %}\n          {% do statements.append(sql) %}\n      {% endif %}\n  {% endfor %}\n\n  {# Return SQL so we can render it out into the compiled files #}\n  {{ return(statements[0]) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_batch_size", "macro.dbt.get_seed_column_quoted_csv", "macro.dbt.get_binding_char"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.materialization_seed_default": {"unique_id": "macro.dbt.materialization_seed_default", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/seed/seed.sql", "original_file_path": "macros/materializations/seed/seed.sql", "name": "materialization_seed_default", "macro_sql": "{% materialization seed, default %}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set agate_table = load_agate_table() -%}\n  {%- do store_result('agate_table', response='OK', agate_table=agate_table) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% set create_table_sql = \"\" %}\n  {% if exists_as_view %}\n    {{ exceptions.raise_compiler_error(\"Cannot seed to '{}', it is a view\".format(old_relation)) }}\n  {% elif exists_as_table %}\n    {% set create_table_sql = reset_csv_table(model, full_refresh_mode, old_relation, agate_table) %}\n  {% else %}\n    {% set create_table_sql = create_csv_table(model, agate_table) %}\n  {% endif %}\n\n  {% set code = 'CREATE' if full_refresh_mode else 'INSERT' %}\n  {% set rows_affected = (agate_table.rows | length) %}\n  {% set sql = load_csv_rows(model, agate_table) %}\n\n  {% call noop_statement('main', code ~ ' ' ~ rows_affected, code, rows_affected) %}\n    {{ create_table_sql }};\n    -- dbt seed --\n    {{ sql }}\n  {% endcall %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% do persist_docs(target_relation, model) %}\n\n  {% if full_refresh_mode or not exists_as_table %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {{ adapter.commit() }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.should_full_refresh", "macro.dbt.run_hooks", "macro.dbt.reset_csv_table", "macro.dbt.create_csv_table", "macro.dbt.load_csv_rows", "macro.dbt.noop_statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.materialization_incremental_default": {"unique_id": "macro.dbt.materialization_incremental_default", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/incremental.sql", "original_file_path": "macros/materializations/incremental/incremental.sql", "name": "materialization_incremental_default", "macro_sql": "{% materialization incremental, default -%}\n\n  {% set unique_key = config.get('unique_key') %}\n\n  {% set target_relation = this.incorporate(type='table') %}\n  {% set existing_relation = load_relation(this) %}\n  {% set tmp_relation = make_temp_relation(target_relation) %}\n  {%- set full_refresh_mode = (should_full_refresh()) -%}\n\n  {% set on_schema_change = incremental_validate_on_schema_change(config.get('on_schema_change'), default='ignore') %}\n\n  {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n  {% set backup_identifier = model['name'] + \"__dbt_backup\" %}\n\n  -- the intermediate_ and backup_ relations should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation. This has to happen before\n  -- BEGIN, in a separate transaction\n  {% set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                  schema=schema,\n                                                                  database=database) %}                                               \n  {% set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                            schema=schema,\n                                                            database=database) %}\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  {% set to_drop = [] %}\n\n  {# -- first check whether we want to full refresh for source view or config reasons #}\n  {% set trigger_full_refresh = (full_refresh_mode or existing_relation.is_view) %}\n\n  {% if existing_relation is none %}\n      {% set build_sql = create_table_as(False, target_relation, sql) %}\n{% elif trigger_full_refresh %}\n      {#-- Make sure the backup doesn't exist so we don't encounter issues with the rename below #}\n      {% set tmp_identifier = model['name'] + '__dbt_tmp' %}\n      {% set backup_identifier = model['name'] + '__dbt_backup' %}\n      {% set intermediate_relation = existing_relation.incorporate(path={\"identifier\": tmp_identifier}) %}\n      {% set backup_relation = existing_relation.incorporate(path={\"identifier\": backup_identifier}) %}\n\n      {% set build_sql = create_table_as(False, intermediate_relation, sql) %}\n      {% set need_swap = true %}\n      {% do to_drop.append(backup_relation) %}\n  {% else %}\n    {% do run_query(create_table_as(True, tmp_relation, sql)) %}\n    {% do adapter.expand_target_column_types(\n             from_relation=tmp_relation,\n             to_relation=target_relation) %}\n    {% do process_schema_changes(on_schema_change, tmp_relation, existing_relation) %}\n    {% set build_sql = incremental_upsert(tmp_relation, target_relation, unique_key=unique_key) %}\n  \n  {% endif %}\n\n  {% call statement(\"main\") %}\n      {{ build_sql }}\n  {% endcall %}\n\n  {% if need_swap %} \n      {% do adapter.rename_relation(target_relation, backup_relation) %} \n      {% do adapter.rename_relation(intermediate_relation, target_relation) %} \n  {% endif %}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {% if existing_relation is none or existing_relation.is_view or should_full_refresh() %}\n    {% do create_indexes(target_relation) %}\n  {% endif %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  -- `COMMIT` happens here\n  {% do adapter.commit() %}\n\n  {% for rel in to_drop %}\n      {% do adapter.drop_relation(rel) %}\n  {% endfor %}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.load_relation", "macro.dbt.make_temp_relation", "macro.dbt.should_full_refresh", "macro.dbt.incremental_validate_on_schema_change", "macro.dbt.drop_relation_if_exists", "macro.dbt.run_hooks", "macro.dbt.create_table_as", "macro.dbt.run_query", "macro.dbt.process_schema_changes", "macro.dbt.incremental_upsert", "macro.dbt.statement", "macro.dbt.persist_docs", "macro.dbt.create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.incremental_upsert": {"unique_id": "macro.dbt.incremental_upsert", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/helpers.sql", "original_file_path": "macros/materializations/incremental/helpers.sql", "name": "incremental_upsert", "macro_sql": "{% macro incremental_upsert(tmp_relation, target_relation, unique_key=none, statement_name=\"main\") %}\n    \n    {%- set dest_columns = adapter.get_columns_in_relation(target_relation) -%}\n    {%- set dest_cols_csv = dest_columns | map(attribute='quoted') | join(', ') -%}\n\n    {%- if unique_key is not none -%}\n    delete\n    from {{ target_relation }}\n    where ({{ unique_key }}) in (\n        select ({{ unique_key }})\n        from {{ tmp_relation }}\n    );\n    {%- endif %}\n\n    insert into {{ target_relation }} ({{ dest_cols_csv }})\n    (\n       select {{ dest_cols_csv }}\n       from {{ tmp_relation }}\n    );\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.incremental_validate_on_schema_change": {"unique_id": "macro.dbt.incremental_validate_on_schema_change", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "incremental_validate_on_schema_change", "macro_sql": "{% macro incremental_validate_on_schema_change(on_schema_change, default='ignore') %}\n   \n   {% if on_schema_change not in ['sync_all_columns', 'append_new_columns', 'fail', 'ignore'] %}\n     \n     {% set log_message = 'Invalid value for on_schema_change (%s) specified. Setting default value of %s.' % (on_schema_change, default) %}\n     {% do log(log_message) %}\n     \n     {{ return(default) }}\n\n   {% else %}\n\n     {{ return(on_schema_change) }}\n   \n   {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.diff_columns": {"unique_id": "macro.dbt.diff_columns", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "diff_columns", "macro_sql": "{% macro diff_columns(source_columns, target_columns) %}\n\n  {% set result = [] %}\n  {% set source_names = source_columns | map(attribute = 'column') | list %}\n  {% set target_names = target_columns | map(attribute = 'column') | list %}\n   \n   {# --check whether the name attribute exists in the target - this does not perform a data type check #}\n   {% for sc in source_columns %}\n     {% if sc.name not in target_names %}\n        {{ result.append(sc) }}\n     {% endif %}\n   {% endfor %}\n  \n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.diff_column_data_types": {"unique_id": "macro.dbt.diff_column_data_types", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "diff_column_data_types", "macro_sql": "{% macro diff_column_data_types(source_columns, target_columns) %}\n  \n  {% set result = [] %}\n  {% for sc in source_columns %}\n    {% set tc = target_columns | selectattr(\"name\", \"equalto\", sc.name) | list | first %}\n    {% if tc %}\n      {% if sc.data_type != tc.data_type %}\n        {{ result.append( { 'column_name': tc.name, 'new_type': sc.data_type } ) }} \n      {% endif %}\n    {% endif %}\n  {% endfor %}\n\n  {{ return(result) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.check_for_schema_changes": {"unique_id": "macro.dbt.check_for_schema_changes", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "check_for_schema_changes", "macro_sql": "{% macro check_for_schema_changes(source_relation, target_relation) %}\n  \n  {% set schema_changed = False %}\n  \n  {%- set source_columns = adapter.get_columns_in_relation(source_relation) -%}\n  {%- set target_columns = adapter.get_columns_in_relation(target_relation) -%}\n  {%- set source_not_in_target = diff_columns(source_columns, target_columns) -%}\n  {%- set target_not_in_source = diff_columns(target_columns, source_columns) -%}\n  \n  {% set new_target_types = diff_column_data_types(source_columns, target_columns) %}\n\n  {% if source_not_in_target != [] %}\n    {% set schema_changed = True %}\n  {% elif target_not_in_source != [] or new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% elif new_target_types != [] %}\n    {% set schema_changed = True %}\n  {% endif %}\n  \n  {% set changes_dict = {\n    'schema_changed': schema_changed,\n    'source_not_in_target': source_not_in_target,\n    'target_not_in_source': target_not_in_source,\n    'new_target_types': new_target_types\n  } %}\n\n  {% set msg %}\n    In {{ target_relation }}:\n        Schema changed: {{ schema_changed }}\n        Source columns not in target: {{ source_not_in_target }}\n        Target columns not in source: {{ target_not_in_source }}\n        New column types: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(msg) %}\n\n  {{ return(changes_dict) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.diff_columns", "macro.dbt.diff_column_data_types"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.sync_column_schemas": {"unique_id": "macro.dbt.sync_column_schemas", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "sync_column_schemas", "macro_sql": "{% macro sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n  \n  {%- set add_to_target_arr = schema_changes_dict['source_not_in_target'] -%}\n\n  {%- if on_schema_change == 'append_new_columns'-%}\n     {%- if add_to_target_arr | length > 0 -%}\n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, none) -%}\n     {%- endif -%}\n  \n  {% elif on_schema_change == 'sync_all_columns' %}\n     {%- set remove_from_target_arr = schema_changes_dict['target_not_in_source'] -%}\n     {%- set new_target_types = schema_changes_dict['new_target_types'] -%}\n  \n     {% if add_to_target_arr | length > 0 or remove_from_target_arr | length > 0 %} \n       {%- do alter_relation_add_remove_columns(target_relation, add_to_target_arr, remove_from_target_arr) -%}\n     {% endif %}\n\n     {% if new_target_types != [] %}\n       {% for ntt in new_target_types %}\n         {% set column_name = ntt['column_name'] %}\n         {% set new_type = ntt['new_type'] %}\n         {% do alter_column_type(target_relation, column_name, new_type) %}\n       {% endfor %}\n     {% endif %}\n  \n  {% endif %}\n\n  {% set schema_change_message %}\n    In {{ target_relation }}:\n        Schema change approach: {{ on_schema_change }}\n        Columns added: {{ add_to_target_arr }}\n        Columns removed: {{ remove_from_target_arr }}\n        Data types changed: {{ new_target_types }}\n  {% endset %}\n  \n  {% do log(schema_change_message) %}\n  \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.alter_relation_add_remove_columns", "macro.dbt.alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.process_schema_changes": {"unique_id": "macro.dbt.process_schema_changes", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/incremental/on_schema_change.sql", "original_file_path": "macros/materializations/incremental/on_schema_change.sql", "name": "process_schema_changes", "macro_sql": "{% macro process_schema_changes(on_schema_change, source_relation, target_relation) %}\n    \n    {% if on_schema_change != 'ignore' %}\n    \n      {% set schema_changes_dict = check_for_schema_changes(source_relation, target_relation) %}\n      \n      {% if schema_changes_dict['schema_changed'] %}\n    \n        {% if on_schema_change == 'fail' %}\n        \n          {% set fail_msg %}\n              The source and target schemas on this incremental model are out of sync!\n              They can be reconciled in several ways: \n                - set the `on_schema_change` config to either append_new_columns or sync_all_columns, depending on your situation.\n                - Re-run the incremental model with `full_refresh: True` to update the target schema.\n                - update the schema manually and re-run the process.\n          {% endset %}\n          \n          {% do exceptions.raise_compiler_error(fail_msg) %}\n        \n        {# -- unless we ignore, run the sync operation per the config #}\n        {% else %}\n          \n          {% do sync_column_schemas(on_schema_change, target_relation, schema_changes_dict) %}\n        \n        {% endif %}\n      \n      {% endif %}\n    \n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.check_for_schema_changes", "macro.dbt.sync_column_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.handle_existing_table": {"unique_id": "macro.dbt.handle_existing_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "handle_existing_table", "macro_sql": "{% macro handle_existing_table(full_refresh, old_relation) %}\n    {{ adapter.dispatch('handle_existing_table', 'dbt')(full_refresh, old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__handle_existing_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__handle_existing_table": {"unique_id": "macro.dbt.default__handle_existing_table", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "default__handle_existing_table", "macro_sql": "{% macro default__handle_existing_table(full_refresh, old_relation) %}\n    {{ log(\"Dropping relation \" ~ old_relation ~ \" because it is of type \" ~ old_relation.type) }}\n    {{ adapter.drop_relation(old_relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_or_replace_view": {"unique_id": "macro.dbt.create_or_replace_view", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/create_or_replace_view.sql", "original_file_path": "macros/materializations/view/create_or_replace_view.sql", "name": "create_or_replace_view", "macro_sql": "{% macro create_or_replace_view() %}\n  {%- set identifier = model['alias'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n\n  {%- set exists_as_view = (old_relation is not none and old_relation.is_view) -%}\n\n  {%- set target_relation = api.Relation.create(\n      identifier=identifier, schema=schema, database=database,\n      type='view') -%}\n\n  {{ run_hooks(pre_hooks) }}\n\n  -- If there's a table with the same name and we weren't told to full refresh,\n  -- that's an error. If we were told to full refresh, drop it. This behavior differs\n  -- for Snowflake and BigQuery, so multiple dispatch is used.\n  {%- if old_relation is not none and old_relation.is_table -%}\n    {{ handle_existing_table(should_full_refresh(), old_relation) }}\n  {%- endif -%}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(target_relation, sql) }}\n  {%- endcall %}\n\n  {{ run_hooks(post_hooks) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.handle_existing_table", "macro.dbt.should_full_refresh", "macro.dbt.statement", "macro.dbt.create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.materialization_view_default": {"unique_id": "macro.dbt.materialization_view_default", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/materializations/view/view.sql", "original_file_path": "macros/materializations/view/view.sql", "name": "materialization_view_default", "macro_sql": "{%- materialization view, default -%}\n\n  {%- set identifier = model['alias'] -%}\n  {%- set tmp_identifier = model['name'] + '__dbt_tmp' -%}\n  {%- set backup_identifier = model['name'] + '__dbt_backup' -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, database=database,\n                                                type='view') -%}\n  {%- set intermediate_relation = api.Relation.create(identifier=tmp_identifier,\n                                                      schema=schema, database=database, type='view') -%}\n  -- the intermediate_relation should not already exist in the database; get_relation\n  -- will return None in that case. Otherwise, we get a relation that we can drop\n  -- later, before we try to use this name for the current operation\n  {%- set preexisting_intermediate_relation = adapter.get_relation(identifier=tmp_identifier, \n                                                                   schema=schema,\n                                                                   database=database) -%}\n  /*\n     This relation (probably) doesn't exist yet. If it does exist, it's a leftover from\n     a previous run, and we're going to try to drop it immediately. At the end of this\n     materialization, we're going to rename the \"old_relation\" to this identifier,\n     and then we're going to drop it. In order to make sure we run the correct one of:\n       - drop view ...\n       - drop table ...\n\n     We need to set the type of this relation to be the type of the old_relation, if it exists,\n     or else \"view\" as a sane default if it does not. Note that if the old_relation does not\n     exist, then there is nothing to move out of the way and subsequentally drop. In that case,\n     this relation will be effectively unused.\n  */\n  {%- set backup_relation_type = 'view' if old_relation is none else old_relation.type -%}\n  {%- set backup_relation = api.Relation.create(identifier=backup_identifier,\n                                                schema=schema, database=database,\n                                                type=backup_relation_type) -%}\n  -- as above, the backup_relation should not already exist\n  {%- set preexisting_backup_relation = adapter.get_relation(identifier=backup_identifier,\n                                                             schema=schema,\n                                                             database=database) -%}\n\n  {{ run_hooks(pre_hooks, inside_transaction=False) }}\n\n  -- drop the temp relations if they exist already in the database\n  {{ drop_relation_if_exists(preexisting_intermediate_relation) }}\n  {{ drop_relation_if_exists(preexisting_backup_relation) }}\n\n  -- `BEGIN` happens here:\n  {{ run_hooks(pre_hooks, inside_transaction=True) }}\n\n  -- build model\n  {% call statement('main') -%}\n    {{ create_view_as(intermediate_relation, sql) }}\n  {%- endcall %}\n\n  -- cleanup\n  -- move the existing view out of the way\n  {% if old_relation is not none %}\n    {{ adapter.rename_relation(old_relation, backup_relation) }}\n  {% endif %}\n  {{ adapter.rename_relation(intermediate_relation, target_relation) }}\n\n  {% do persist_docs(target_relation, model) %}\n\n  {{ run_hooks(post_hooks, inside_transaction=True) }}\n\n  {{ adapter.commit() }}\n\n  {{ drop_relation_if_exists(backup_relation) }}\n\n  {{ run_hooks(post_hooks, inside_transaction=False) }}\n\n  {{ return({'relations': [target_relation]}) }}\n\n{%- endmaterialization -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.drop_relation_if_exists", "macro.dbt.statement", "macro.dbt.create_view_as", "macro.dbt.persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__test_accepted_values": {"unique_id": "macro.dbt.default__test_accepted_values", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "default__test_accepted_values", "macro_sql": "{% macro default__test_accepted_values(model, column_name, values, quote=True) %}\n\nwith all_values as (\n\n    select\n        {{ column_name }} as value_field,\n        count(*) as n_records\n\n    from {{ model }}\n    group by {{ column_name }}\n\n)\n\nselect *\nfrom all_values\nwhere value_field not in (\n    {% for value in values -%}\n        {% if quote -%}\n        '{{ value }}'\n        {%- else -%}\n        {{ value }}\n        {%- endif -%}\n        {%- if not loop.last -%},{%- endif %}\n    {%- endfor %}\n)\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.test_accepted_values": {"unique_id": "macro.dbt.test_accepted_values", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/accepted_values.sql", "original_file_path": "macros/schema_tests/accepted_values.sql", "name": "test_accepted_values", "macro_sql": "{% test accepted_values(model, column_name, values, quote=True) %}\n    {% set macro = adapter.dispatch('test_accepted_values', 'dbt') %}\n    {{ macro(model, column_name, values, quote) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__test_relationships": {"unique_id": "macro.dbt.default__test_relationships", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "default__test_relationships", "macro_sql": "{% macro default__test_relationships(model, column_name, to, field) %}\n\nwith child as (\n    select {{ column_name }} as from_field\n    from {{ model }}\n    where {{ column_name }} is not null\n),\n\nparent as (\n    select {{ field }} as to_field\n    from {{ to }}\n)\n\nselect\n    from_field\n\nfrom child\nleft join parent\n    on child.from_field = parent.to_field\n\nwhere parent.to_field is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.test_relationships": {"unique_id": "macro.dbt.test_relationships", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/relationships.sql", "original_file_path": "macros/schema_tests/relationships.sql", "name": "test_relationships", "macro_sql": "{% test relationships(model, column_name, to, field) %}\n    {% set macro = adapter.dispatch('test_relationships', 'dbt') %}\n    {{ macro(model, column_name, to, field) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_relationships"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__test_not_null": {"unique_id": "macro.dbt.default__test_not_null", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "default__test_not_null", "macro_sql": "{% macro default__test_not_null(model, column_name) %}\n\nselect *\nfrom {{ model }}\nwhere {{ column_name }} is null\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.test_not_null": {"unique_id": "macro.dbt.test_not_null", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/not_null.sql", "original_file_path": "macros/schema_tests/not_null.sql", "name": "test_not_null", "macro_sql": "{% test not_null(model, column_name) %}\n    {% set macro = adapter.dispatch('test_not_null', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__test_unique": {"unique_id": "macro.dbt.default__test_unique", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "default__test_unique", "macro_sql": "{% macro default__test_unique(model, column_name) %}\n\nselect\n    {{ column_name }} as unique_field,\n    count(*) as n_records\n\nfrom {{ model }}\nwhere {{ column_name }} is not null\ngroup by {{ column_name }}\nhaving count(*) > 1\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.test_unique": {"unique_id": "macro.dbt.test_unique", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/schema_tests/unique.sql", "original_file_path": "macros/schema_tests/unique.sql", "name": "test_unique", "macro_sql": "{% test unique(model, column_name) %}\n    {% set macro = adapter.dispatch('test_unique', 'dbt') %}\n    {{ macro(model, column_name) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_columns_in_query": {"unique_id": "macro.dbt.get_columns_in_query", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_query", "macro_sql": "{% macro get_columns_in_query(select_sql) -%}\n  {{ return(adapter.dispatch('get_columns_in_query', 'dbt')(select_sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__get_columns_in_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_columns_in_query": {"unique_id": "macro.dbt.default__get_columns_in_query", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_query", "macro_sql": "{% macro default__get_columns_in_query(select_sql) %}\n    {% call statement('get_columns_in_query', fetch_result=True, auto_begin=False) -%}\n        select * from (\n            {{ select_sql }}\n        ) as __dbt_sbq\n        where false\n        limit 0\n    {% endcall %}\n\n    {{ return(load_result('get_columns_in_query').table.columns | map(attribute='name') | list) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_schema": {"unique_id": "macro.dbt.create_schema", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_schema", "macro_sql": "{% macro create_schema(relation) -%}\n  {{ adapter.dispatch('create_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__create_schema": {"unique_id": "macro.dbt.default__create_schema", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_schema", "macro_sql": "{% macro default__create_schema(relation) -%}\n  {%- call statement('create_schema') -%}\n    create schema if not exists {{ relation.without_identifier() }}\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.drop_schema": {"unique_id": "macro.dbt.drop_schema", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_schema", "macro_sql": "{% macro drop_schema(relation) -%}\n  {{ adapter.dispatch('drop_schema', 'dbt')(relation) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__drop_schema"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__drop_schema": {"unique_id": "macro.dbt.default__drop_schema", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_schema", "macro_sql": "{% macro default__drop_schema(relation) -%}\n  {%- call statement('drop_schema') -%}\n    drop schema if exists {{ relation.without_identifier() }} cascade\n  {% endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_table_as": {"unique_id": "macro.dbt.create_table_as", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_table_as", "macro_sql": "{% macro create_table_as(temporary, relation, sql) -%}\n  {{ adapter.dispatch('create_table_as', 'dbt')(temporary, relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__create_table_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__create_table_as": {"unique_id": "macro.dbt.default__create_table_as", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_table_as", "macro_sql": "{% macro default__create_table_as(temporary, relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n\n  create {% if temporary: -%}temporary{%- endif %} table\n    {{ relation.include(database=(not temporary), schema=(not temporary)) }}\n  as (\n    {{ sql }}\n  );\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_create_index_sql": {"unique_id": "macro.dbt.get_create_index_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_create_index_sql", "macro_sql": "{% macro get_create_index_sql(relation, index_dict) -%}\n  {{ return(adapter.dispatch('get_create_index_sql', 'dbt')(relation, index_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_create_index_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_create_index_sql": {"unique_id": "macro.dbt.default__get_create_index_sql", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_create_index_sql", "macro_sql": "{% macro default__get_create_index_sql(relation, index_dict) -%}\n  {% do return(None) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_indexes": {"unique_id": "macro.dbt.create_indexes", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_indexes", "macro_sql": "{% macro create_indexes(relation) -%}\n  {{ adapter.dispatch('create_indexes', 'dbt')(relation) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_indexes"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__create_indexes": {"unique_id": "macro.dbt.default__create_indexes", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_indexes", "macro_sql": "{% macro default__create_indexes(relation) -%}\n  {%- set _indexes = config.get('indexes', default=[]) -%}\n\n  {% for _index_dict in _indexes %}\n    {% set create_index_sql = get_create_index_sql(relation, _index_dict) %}\n    {% if create_index_sql %}\n      {% do run_query(create_index_sql) %}\n    {% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.get_create_index_sql", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.create_view_as": {"unique_id": "macro.dbt.create_view_as", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "create_view_as", "macro_sql": "{% macro create_view_as(relation, sql) -%}\n  {{ adapter.dispatch('create_view_as', 'dbt')(relation, sql) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__create_view_as"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__create_view_as": {"unique_id": "macro.dbt.default__create_view_as", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__create_view_as", "macro_sql": "{% macro default__create_view_as(relation, sql) -%}\n  {%- set sql_header = config.get('sql_header', none) -%}\n\n  {{ sql_header if sql_header is not none }}\n  create view {{ relation }} as (\n    {{ sql }}\n  );\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_catalog": {"unique_id": "macro.dbt.get_catalog", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_catalog", "macro_sql": "{% macro get_catalog(information_schema, schemas) -%}\n  {{ return(adapter.dispatch('get_catalog', 'dbt')(information_schema, schemas)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_catalog"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_catalog": {"unique_id": "macro.dbt.default__get_catalog", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_catalog", "macro_sql": "{% macro default__get_catalog(information_schema, schemas) -%}\n\n  {% set typename = adapter.type() %}\n  {% set msg -%}\n    get_catalog not implemented for {{ typename }}\n  {%- endset %}\n\n  {{ exceptions.raise_compiler_error(msg) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.get_columns_in_relation": {"unique_id": "macro.dbt.get_columns_in_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "get_columns_in_relation", "macro_sql": "{% macro get_columns_in_relation(relation) -%}\n  {{ return(adapter.dispatch('get_columns_in_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__get_columns_in_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.sql_convert_columns_in_relation": {"unique_id": "macro.dbt.sql_convert_columns_in_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "sql_convert_columns_in_relation", "macro_sql": "{% macro sql_convert_columns_in_relation(table) -%}\n  {% set columns = [] %}\n  {% for row in table %}\n    {% do columns.append(api.Column(*row)) %}\n  {% endfor %}\n  {{ return(columns) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__get_columns_in_relation": {"unique_id": "macro.dbt.default__get_columns_in_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__get_columns_in_relation", "macro_sql": "{% macro default__get_columns_in_relation(relation) -%}\n  {{ exceptions.raise_not_implemented(\n    'get_columns_in_relation macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.alter_column_type": {"unique_id": "macro.dbt.alter_column_type", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_type", "macro_sql": "{% macro alter_column_type(relation, column_name, new_column_type) -%}\n  {{ return(adapter.dispatch('alter_column_type', 'dbt')(relation, column_name, new_column_type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_column_type"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.alter_column_comment": {"unique_id": "macro.dbt.alter_column_comment", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_column_comment", "macro_sql": "{% macro alter_column_comment(relation, column_dict) -%}\n  {{ return(adapter.dispatch('alter_column_comment', 'dbt')(relation, column_dict)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__alter_column_comment": {"unique_id": "macro.dbt.default__alter_column_comment", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_comment", "macro_sql": "{% macro default__alter_column_comment(relation, column_dict) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_column_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.alter_relation_comment": {"unique_id": "macro.dbt.alter_relation_comment", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_comment", "macro_sql": "{% macro alter_relation_comment(relation, relation_comment) -%}\n  {{ return(adapter.dispatch('alter_relation_comment', 'dbt')(relation, relation_comment)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__alter_relation_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__alter_relation_comment": {"unique_id": "macro.dbt.default__alter_relation_comment", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_comment", "macro_sql": "{% macro default__alter_relation_comment(relation, relation_comment) -%}\n  {{ exceptions.raise_not_implemented(\n    'alter_relation_comment macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.persist_docs": {"unique_id": "macro.dbt.persist_docs", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "persist_docs", "macro_sql": "{% macro persist_docs(relation, model, for_relation=true, for_columns=true) -%}\n  {{ return(adapter.dispatch('persist_docs', 'dbt')(relation, model, for_relation, for_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__persist_docs"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__persist_docs": {"unique_id": "macro.dbt.default__persist_docs", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__persist_docs", "macro_sql": "{% macro default__persist_docs(relation, model, for_relation, for_columns) -%}\n  {% if for_relation and config.persist_relation_docs() and model.description %}\n    {% do run_query(alter_relation_comment(relation, model.description)) %}\n  {% endif %}\n\n  {% if for_columns and config.persist_column_docs() and model.columns %}\n    {% do run_query(alter_column_comment(relation, model.columns)) %}\n  {% endif %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query", "macro.dbt.alter_relation_comment", "macro.dbt.alter_column_comment"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__alter_column_type": {"unique_id": "macro.dbt.default__alter_column_type", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_column_type", "macro_sql": "{% macro default__alter_column_type(relation, column_name, new_column_type) -%}\n  {#\n    1. Create a new column (w/ temp name and correct type)\n    2. Copy data over to it\n    3. Drop the existing column (cascade!)\n    4. Rename the new column to existing column\n  #}\n  {%- set tmp_column = column_name + \"__dbt_alter\" -%}\n\n  {% call statement('alter_column_type') %}\n    alter table {{ relation }} add column {{ adapter.quote(tmp_column) }} {{ new_column_type }};\n    update {{ relation }} set {{ adapter.quote(tmp_column) }} = {{ adapter.quote(column_name) }};\n    alter table {{ relation }} drop column {{ adapter.quote(column_name) }} cascade;\n    alter table {{ relation }} rename column {{ adapter.quote(tmp_column) }} to {{ adapter.quote(column_name) }}\n  {% endcall %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.drop_relation": {"unique_id": "macro.dbt.drop_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "drop_relation", "macro_sql": "{% macro drop_relation(relation) -%}\n  {{ return(adapter.dispatch('drop_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__drop_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__drop_relation": {"unique_id": "macro.dbt.default__drop_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__drop_relation", "macro_sql": "{% macro default__drop_relation(relation) -%}\n  {% call statement('drop_relation', auto_begin=False) -%}\n    drop {{ relation.type }} if exists {{ relation }} cascade\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.truncate_relation": {"unique_id": "macro.dbt.truncate_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "truncate_relation", "macro_sql": "{% macro truncate_relation(relation) -%}\n  {{ return(adapter.dispatch('truncate_relation', 'dbt')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__truncate_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__truncate_relation": {"unique_id": "macro.dbt.default__truncate_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__truncate_relation", "macro_sql": "{% macro default__truncate_relation(relation) -%}\n  {% call statement('truncate_relation') -%}\n    truncate table {{ relation }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.rename_relation": {"unique_id": "macro.dbt.rename_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "rename_relation", "macro_sql": "{% macro rename_relation(from_relation, to_relation) -%}\n  {{ return(adapter.dispatch('rename_relation', 'dbt')(from_relation, to_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__rename_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__rename_relation": {"unique_id": "macro.dbt.default__rename_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__rename_relation", "macro_sql": "{% macro default__rename_relation(from_relation, to_relation) -%}\n  {% set target_name = adapter.quote_as_configured(to_relation.identifier, 'identifier') %}\n  {% call statement('rename_relation') -%}\n    alter table {{ from_relation }} rename to {{ target_name }}\n  {%- endcall %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.information_schema_name": {"unique_id": "macro.dbt.information_schema_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "information_schema_name", "macro_sql": "{% macro information_schema_name(database) %}\n  {{ return(adapter.dispatch('information_schema_name', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__information_schema_name"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__information_schema_name": {"unique_id": "macro.dbt.default__information_schema_name", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__information_schema_name", "macro_sql": "{% macro default__information_schema_name(database) -%}\n  {%- if database -%}\n    {{ database }}.INFORMATION_SCHEMA\n  {%- else -%}\n    INFORMATION_SCHEMA\n  {%- endif -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.list_schemas": {"unique_id": "macro.dbt.list_schemas", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_schemas", "macro_sql": "{% macro list_schemas(database) -%}\n  {{ return(adapter.dispatch('list_schemas', 'dbt')(database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_schemas"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__list_schemas": {"unique_id": "macro.dbt.default__list_schemas", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_schemas", "macro_sql": "{% macro default__list_schemas(database) -%}\n  {% set sql %}\n    select distinct schema_name\n    from {{ information_schema_name(database) }}.SCHEMATA\n    where catalog_name ilike '{{ database }}'\n  {% endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.information_schema_name", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.check_schema_exists": {"unique_id": "macro.dbt.check_schema_exists", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "check_schema_exists", "macro_sql": "{% macro check_schema_exists(information_schema, schema) -%}\n  {{ return(adapter.dispatch('check_schema_exists', 'dbt')(information_schema, schema)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__check_schema_exists"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__check_schema_exists": {"unique_id": "macro.dbt.default__check_schema_exists", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__check_schema_exists", "macro_sql": "{% macro default__check_schema_exists(information_schema, schema) -%}\n  {% set sql -%}\n        select count(*)\n        from {{ information_schema.replace(information_schema_view='SCHEMATA') }}\n        where catalog_name='{{ information_schema.database }}'\n          and schema_name='{{ schema }}'\n  {%- endset %}\n  {{ return(run_query(sql)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.list_relations_without_caching": {"unique_id": "macro.dbt.list_relations_without_caching", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "list_relations_without_caching", "macro_sql": "{% macro list_relations_without_caching(schema_relation) %}\n  {{ return(adapter.dispatch('list_relations_without_caching', 'dbt')(schema_relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__list_relations_without_caching"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__list_relations_without_caching": {"unique_id": "macro.dbt.default__list_relations_without_caching", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__list_relations_without_caching", "macro_sql": "{% macro default__list_relations_without_caching(schema_relation) %}\n  {{ exceptions.raise_not_implemented(\n    'list_relations_without_caching macro not implemented for adapter '+adapter.type()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.current_timestamp": {"unique_id": "macro.dbt.current_timestamp", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ adapter.dispatch('current_timestamp', 'dbt')() }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__current_timestamp": {"unique_id": "macro.dbt.default__current_timestamp", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() -%}\n  {{ exceptions.raise_not_implemented(\n    'current_timestamp macro not implemented for adapter '+adapter.type()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.collect_freshness": {"unique_id": "macro.dbt.collect_freshness", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "collect_freshness", "macro_sql": "{% macro collect_freshness(source, loaded_at_field, filter) %}\n  {{ return(adapter.dispatch('collect_freshness', 'dbt')(source, loaded_at_field, filter))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__collect_freshness"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__collect_freshness": {"unique_id": "macro.dbt.default__collect_freshness", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__collect_freshness", "macro_sql": "{% macro default__collect_freshness(source, loaded_at_field, filter) %}\n  {% call statement('collect_freshness', fetch_result=True, auto_begin=False) -%}\n    select\n      max({{ loaded_at_field }}) as max_loaded_at,\n      {{ current_timestamp() }} as snapshotted_at\n    from {{ source }}\n    {% if filter %}\n    where {{ filter }}\n    {% endif %}\n  {% endcall %}\n  {{ return(load_result('collect_freshness').table) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.make_temp_relation": {"unique_id": "macro.dbt.make_temp_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "make_temp_relation", "macro_sql": "{% macro make_temp_relation(base_relation, suffix='__dbt_tmp') %}\n  {{ return(adapter.dispatch('make_temp_relation', 'dbt')(base_relation, suffix))}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_postgres.postgres__make_temp_relation"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__make_temp_relation": {"unique_id": "macro.dbt.default__make_temp_relation", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__make_temp_relation", "macro_sql": "{% macro default__make_temp_relation(base_relation, suffix) %}\n    {% set tmp_identifier = base_relation.identifier ~ suffix %}\n    {% set tmp_relation = base_relation.incorporate(\n                                path={\"identifier\": tmp_identifier}) -%}\n\n    {% do return(tmp_relation) %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.set_sql_header": {"unique_id": "macro.dbt.set_sql_header", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "set_sql_header", "macro_sql": "{% macro set_sql_header(config) -%}\n  {{ config.set('sql_header', caller()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.alter_relation_add_remove_columns": {"unique_id": "macro.dbt.alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "alter_relation_add_remove_columns", "macro_sql": "{% macro alter_relation_add_remove_columns(relation, add_columns = none, remove_columns = none) -%}\n  {{ return(adapter.dispatch('alter_relation_add_remove_columns', 'dbt')(relation, add_columns, remove_columns)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.default__alter_relation_add_remove_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt.default__alter_relation_add_remove_columns": {"unique_id": "macro.dbt.default__alter_relation_add_remove_columns", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "macros/adapters/common.sql", "original_file_path": "macros/adapters/common.sql", "name": "default__alter_relation_add_remove_columns", "macro_sql": "{% macro default__alter_relation_add_remove_columns(relation, add_columns, remove_columns) %}\n  \n  {% if add_columns is none %}\n    {% set add_columns = [] %}\n  {% endif %}\n  {% if remove_columns is none %}\n    {% set remove_columns = [] %}\n  {% endif %}\n  \n  {% set sql -%}\n     \n     alter {{ relation.type }} {{ relation }}\n       \n            {% for column in add_columns %}\n               add column {{ column.name }} {{ column.data_type }}{{ ',' if not loop.last }}\n            {% endfor %}{{ ',' if remove_columns | length > 0 }}\n            \n            {% for column in remove_columns %}\n                drop column {{ column.name }}{{ ',' if not loop.last }}\n            {% endfor %}\n  \n  {%- endset -%}\n\n  {% do run_query(sql) %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.concat": {"unique_id": "macro.dbt_utils.concat", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "concat", "macro_sql": "{% macro concat(fields) -%}\n  {{ return(adapter.dispatch('concat', 'dbt_utils')(fields)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__concat": {"unique_id": "macro.dbt_utils.default__concat", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/concat.sql", "original_file_path": "macros/cross_db_utils/concat.sql", "name": "default__concat", "macro_sql": "{% macro default__concat(fields) -%}\n    {{ fields|join(' || ') }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.length": {"unique_id": "macro.dbt_utils.length", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "length", "macro_sql": "{% macro length(expression) -%}\n    {{ return(adapter.dispatch('length', 'dbt_utils') (expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__length"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__length": {"unique_id": "macro.dbt_utils.default__length", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "default__length", "macro_sql": "{% macro default__length(expression) %}\n    \n    length(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__length": {"unique_id": "macro.dbt_utils.redshift__length", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/length.sql", "original_file_path": "macros/cross_db_utils/length.sql", "name": "redshift__length", "macro_sql": "{% macro redshift__length(expression) %}\n\n    len(\n        {{ expression }}\n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.date_trunc": {"unique_id": "macro.dbt_utils.date_trunc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "date_trunc", "macro_sql": "{% macro date_trunc(datepart, date) -%}\n  {{ return(adapter.dispatch('date_trunc', 'dbt_utils') (datepart, date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__date_trunc": {"unique_id": "macro.dbt_utils.default__date_trunc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "default__date_trunc", "macro_sql": "{% macro default__date_trunc(datepart, date) %}\n    date_trunc('{{datepart}}', {{date}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__date_trunc": {"unique_id": "macro.dbt_utils.bigquery__date_trunc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/date_trunc.sql", "original_file_path": "macros/cross_db_utils/date_trunc.sql", "name": "bigquery__date_trunc", "macro_sql": "{% macro bigquery__date_trunc(datepart, date) %}\n    timestamp_trunc(\n        cast({{date}} as timestamp),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.last_day": {"unique_id": "macro.dbt_utils.last_day", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "last_day", "macro_sql": "{% macro last_day(date, datepart) %}\n  {{ return(adapter.dispatch('last_day', 'dbt_utils') (date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default_last_day": {"unique_id": "macro.dbt_utils.default_last_day", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default_last_day", "macro_sql": "\n\n\n{%- macro default_last_day(date, datepart) -%}\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd(datepart, '1', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n{%- endmacro -%}\n\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__last_day": {"unique_id": "macro.dbt_utils.default__last_day", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "default__last_day", "macro_sql": "{% macro default__last_day(date, datepart) -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.postgres__last_day": {"unique_id": "macro.dbt_utils.postgres__last_day", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "postgres__last_day", "macro_sql": "{% macro postgres__last_day(date, datepart) -%}\n\n    {%- if datepart == 'quarter' -%}\n    -- postgres dateadd does not support quarter interval.\n    cast(\n        {{dbt_utils.dateadd('day', '-1',\n        dbt_utils.dateadd('month', '3', dbt_utils.date_trunc(datepart, date))\n        )}}\n        as date)\n    {%- else -%}\n    {{dbt_utils.default_last_day(date, datepart)}}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.date_trunc", "macro.dbt_utils.default_last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__last_day": {"unique_id": "macro.dbt_utils.redshift__last_day", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/last_day.sql", "original_file_path": "macros/cross_db_utils/last_day.sql", "name": "redshift__last_day", "macro_sql": "{% macro redshift__last_day(date, datepart) %}\n\n    {{ return(dbt_utils.default__last_day(date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__last_day"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.position": {"unique_id": "macro.dbt_utils.position", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "position", "macro_sql": "{% macro position(substring_text, string_text) -%}\n    {{ return(adapter.dispatch('position', 'dbt_utils') (substring_text, string_text)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__position"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__position": {"unique_id": "macro.dbt_utils.default__position", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "default__position", "macro_sql": "{% macro default__position(substring_text, string_text) %}\n\n    position(\n        {{ substring_text }} in {{ string_text }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__position": {"unique_id": "macro.dbt_utils.bigquery__position", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/position.sql", "original_file_path": "macros/cross_db_utils/position.sql", "name": "bigquery__position", "macro_sql": "{% macro bigquery__position(substring_text, string_text) %}\n\n    strpos(\n        {{ string_text }},\n        {{ substring_text }}\n        \n    )\n    \n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.except": {"unique_id": "macro.dbt_utils.except", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "except", "macro_sql": "{% macro except() %}\n  {{ return(adapter.dispatch('except', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__except": {"unique_id": "macro.dbt_utils.default__except", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "default__except", "macro_sql": "{% macro default__except() %}\n\n    except\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__except": {"unique_id": "macro.dbt_utils.bigquery__except", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/except.sql", "original_file_path": "macros/cross_db_utils/except.sql", "name": "bigquery__except", "macro_sql": "{% macro bigquery__except() %}\n\n    except distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.string_literal": {"unique_id": "macro.dbt_utils.string_literal", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "string_literal", "macro_sql": "{%- macro string_literal(value) -%}\n  {{ return(adapter.dispatch('string_literal', 'dbt_utils') (value)) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__string_literal"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__string_literal": {"unique_id": "macro.dbt_utils.default__string_literal", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/literal.sql", "original_file_path": "macros/cross_db_utils/literal.sql", "name": "default__string_literal", "macro_sql": "{% macro default__string_literal(value) -%}\n    '{{ value }}'\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.intersect": {"unique_id": "macro.dbt_utils.intersect", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "intersect", "macro_sql": "{% macro intersect() %}\n  {{ return(adapter.dispatch('intersect', 'dbt_utils')()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__intersect"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__intersect": {"unique_id": "macro.dbt_utils.default__intersect", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "default__intersect", "macro_sql": "{% macro default__intersect() %}\n\n    intersect\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__intersect": {"unique_id": "macro.dbt_utils.bigquery__intersect", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/intersect.sql", "original_file_path": "macros/cross_db_utils/intersect.sql", "name": "bigquery__intersect", "macro_sql": "{% macro bigquery__intersect() %}\n\n    intersect distinct\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.identifier": {"unique_id": "macro.dbt_utils.identifier", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "identifier", "macro_sql": "{% macro identifier(value) %}\t\n  {%- set error_message = '\n    Warning: the `identifier` macro is no longer supported and will be deprecated in a future release of dbt-utils. \\\n    Use `adapter.quote` instead. The {}.{} model triggered this warning. \\\n    '.format(model.package_name, model.name) -%}\n  {%- do exceptions.warn(error_message) -%}\n  {{ return(adapter.dispatch('identifier', 'dbt_utils') (value)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__identifier"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__identifier": {"unique_id": "macro.dbt_utils.default__identifier", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "default__identifier", "macro_sql": "{% macro default__identifier(value) -%}\t\n    \"{{ value }}\"\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__identifier": {"unique_id": "macro.dbt_utils.bigquery__identifier", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/identifier.sql", "original_file_path": "macros/cross_db_utils/identifier.sql", "name": "bigquery__identifier", "macro_sql": "{% macro bigquery__identifier(value) -%}\t\n    `{{ value }}`\t\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.safe_cast": {"unique_id": "macro.dbt_utils.safe_cast", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "safe_cast", "macro_sql": "{% macro safe_cast(field, type) %}\n  {{ return(adapter.dispatch('safe_cast', 'dbt_utils') (field, type)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_cast"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__safe_cast": {"unique_id": "macro.dbt_utils.default__safe_cast", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "default__safe_cast", "macro_sql": "{% macro default__safe_cast(field, type) %}\n    {# most databases don't support this function yet\n    so we just need to use cast #}\n    cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.snowflake__safe_cast": {"unique_id": "macro.dbt_utils.snowflake__safe_cast", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "snowflake__safe_cast", "macro_sql": "{% macro snowflake__safe_cast(field, type) %}\n    try_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__safe_cast": {"unique_id": "macro.dbt_utils.bigquery__safe_cast", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/safe_cast.sql", "original_file_path": "macros/cross_db_utils/safe_cast.sql", "name": "bigquery__safe_cast", "macro_sql": "{% macro bigquery__safe_cast(field, type) %}\n    safe_cast({{field}} as {{type}})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.datediff": {"unique_id": "macro.dbt_utils.datediff", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "datediff", "macro_sql": "{% macro datediff(first_date, second_date, datepart) %}\n  {{ return(adapter.dispatch('datediff', 'dbt_utils')(first_date, second_date, datepart)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__datediff": {"unique_id": "macro.dbt_utils.default__datediff", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "default__datediff", "macro_sql": "{% macro default__datediff(first_date, second_date, datepart) %}\n\n    datediff(\n        {{ datepart }},\n        {{ first_date }},\n        {{ second_date }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__datediff": {"unique_id": "macro.dbt_utils.bigquery__datediff", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "bigquery__datediff", "macro_sql": "{% macro bigquery__datediff(first_date, second_date, datepart) %}\n\n    datetime_diff(\n        cast({{second_date}} as datetime),\n        cast({{first_date}} as datetime),\n        {{datepart}}\n    )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.postgres__datediff": {"unique_id": "macro.dbt_utils.postgres__datediff", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "postgres__datediff", "macro_sql": "{% macro postgres__datediff(first_date, second_date, datepart) %}\n\n    {% if datepart == 'year' %}\n        (date_part('year', ({{second_date}})::date) - date_part('year', ({{first_date}})::date))\n    {% elif datepart == 'quarter' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 4 + date_part('quarter', ({{second_date}})::date) - date_part('quarter', ({{first_date}})::date))\n    {% elif datepart == 'month' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'year') }} * 12 + date_part('month', ({{second_date}})::date) - date_part('month', ({{first_date}})::date))\n    {% elif datepart == 'day' %}\n        (({{second_date}})::date - ({{first_date}})::date)\n    {% elif datepart == 'week' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} / 7 + case\n            when date_part('dow', ({{first_date}})::timestamp) <= date_part('dow', ({{second_date}})::timestamp) then\n                case when {{first_date}} <= {{second_date}} then 0 else -1 end\n            else\n                case when {{first_date}} <= {{second_date}} then 1 else 0 end\n        end)\n    {% elif datepart == 'hour' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'day') }} * 24 + date_part('hour', ({{second_date}})::timestamp) - date_part('hour', ({{first_date}})::timestamp))\n    {% elif datepart == 'minute' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'hour') }} * 60 + date_part('minute', ({{second_date}})::timestamp) - date_part('minute', ({{first_date}})::timestamp))\n    {% elif datepart == 'second' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60 + floor(date_part('second', ({{second_date}})::timestamp)) - floor(date_part('second', ({{first_date}})::timestamp)))\n    {% elif datepart == 'millisecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000 + floor(date_part('millisecond', ({{second_date}})::timestamp)) - floor(date_part('millisecond', ({{first_date}})::timestamp)))\n    {% elif datepart == 'microsecond' %}\n        ({{ dbt_utils.datediff(first_date, second_date, 'minute') }} * 60000000 + floor(date_part('microsecond', ({{second_date}})::timestamp)) - floor(date_part('microsecond', ({{first_date}})::timestamp)))\n    {% else %}\n        {{ exceptions.raise_compiler_error(\"Unsupported datepart for macro datediff in postgres: {!r}\".format(datepart)) }}\n    {% endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__datediff": {"unique_id": "macro.dbt_utils.redshift__datediff", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datediff.sql", "original_file_path": "macros/cross_db_utils/datediff.sql", "name": "redshift__datediff", "macro_sql": "{% macro redshift__datediff(first_date, second_date, datepart) %}\n\n    {{ return(dbt_utils.default__datediff(first_date, second_date, datepart)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils._is_relation": {"unique_id": "macro.dbt_utils._is_relation", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/_is_relation.sql", "original_file_path": "macros/cross_db_utils/_is_relation.sql", "name": "_is_relation", "macro_sql": "{% macro _is_relation(obj, macro) %}\n    {%- if not (obj is mapping and obj.get('metadata', {}).get('type', '').endswith('Relation')) -%}\n        {%- do exceptions.raise_compiler_error(\"Macro \" ~ macro ~ \" expected a Relation but received the value: \" ~ obj) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.dateadd": {"unique_id": "macro.dbt_utils.dateadd", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "dateadd", "macro_sql": "{% macro dateadd(datepart, interval, from_date_or_timestamp) %}\n  {{ return(adapter.dispatch('dateadd', 'dbt_utils')(datepart, interval, from_date_or_timestamp)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__dateadd": {"unique_id": "macro.dbt_utils.default__dateadd", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "default__dateadd", "macro_sql": "{% macro default__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    dateadd(\n        {{ datepart }},\n        {{ interval }},\n        {{ from_date_or_timestamp }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__dateadd": {"unique_id": "macro.dbt_utils.bigquery__dateadd", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "bigquery__dateadd", "macro_sql": "{% macro bigquery__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n        datetime_add(\n            cast( {{ from_date_or_timestamp }} as datetime),\n        interval {{ interval }} {{ datepart }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.postgres__dateadd": {"unique_id": "macro.dbt_utils.postgres__dateadd", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "postgres__dateadd", "macro_sql": "{% macro postgres__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ from_date_or_timestamp }} + ((interval '1 {{ datepart }}') * ({{ interval }}))\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__dateadd": {"unique_id": "macro.dbt_utils.redshift__dateadd", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/dateadd.sql", "original_file_path": "macros/cross_db_utils/dateadd.sql", "name": "redshift__dateadd", "macro_sql": "{% macro redshift__dateadd(datepart, interval, from_date_or_timestamp) %}\n\n    {{ return(dbt_utils.default__dateadd(datepart, interval, from_date_or_timestamp)) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.width_bucket": {"unique_id": "macro.dbt_utils.width_bucket", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "width_bucket", "macro_sql": "{% macro width_bucket(expr, min_value, max_value, num_buckets) %}\n  {{ return(adapter.dispatch('width_bucket', 'dbt_utils') (expr, min_value, max_value, num_buckets)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__width_bucket"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__width_bucket": {"unique_id": "macro.dbt_utils.default__width_bucket", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "default__width_bucket", "macro_sql": "{% macro default__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is eaxtly at the bucket egde\n        case\n            when\n                mod(\n                    {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }},\n                    {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                ) = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__width_bucket": {"unique_id": "macro.dbt_utils.redshift__width_bucket", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "redshift__width_bucket", "macro_sql": "{% macro redshift__width_bucket(expr, min_value, max_value, num_buckets) -%}\n\n    {% set bin_size -%}\n    (( {{ max_value }} - {{ min_value }} ) / {{ num_buckets }} )\n    {%- endset %}\n    (\n        -- to break ties when the amount is exactly at the bucket edge\n        case\n            when\n                {{ dbt_utils.safe_cast(expr, dbt_utils.type_numeric() ) }} %\n                {{ dbt_utils.safe_cast(bin_size, dbt_utils.type_numeric() ) }}\n                 = 0\n            then 1\n            else 0\n        end\n    ) +\n      -- Anything over max_value goes the N+1 bucket\n    least(\n        ceil(\n            ({{ expr }} - {{ min_value }})/{{ bin_size }}\n        ),\n        {{ num_buckets }} + 1\n    )\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.safe_cast", "macro.dbt_utils.type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.snowflake__width_bucket": {"unique_id": "macro.dbt_utils.snowflake__width_bucket", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/width_bucket.sql", "original_file_path": "macros/cross_db_utils/width_bucket.sql", "name": "snowflake__width_bucket", "macro_sql": "{% macro snowflake__width_bucket(expr, min_value, max_value, num_buckets) %}\n    width_bucket({{ expr }}, {{ min_value }}, {{ max_value }}, {{ num_buckets }} )\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.replace": {"unique_id": "macro.dbt_utils.replace", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "replace", "macro_sql": "{% macro replace(field, old_chars, new_chars) -%}\n    {{ return(adapter.dispatch('replace', 'dbt_utils') (field, old_chars, new_chars)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__replace"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__replace": {"unique_id": "macro.dbt_utils.default__replace", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/replace.sql", "original_file_path": "macros/cross_db_utils/replace.sql", "name": "default__replace", "macro_sql": "{% macro default__replace(field, old_chars, new_chars) %}\n\n    replace(\n        {{ field }},\n        {{ old_chars }},\n        {{ new_chars }}\n    )\n    \n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils._is_ephemeral": {"unique_id": "macro.dbt_utils._is_ephemeral", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/_is_ephemeral.sql", "original_file_path": "macros/cross_db_utils/_is_ephemeral.sql", "name": "_is_ephemeral", "macro_sql": "{% macro _is_ephemeral(obj, macro) %}\n    {%- if obj.is_cte -%}\n        {% set ephemeral_prefix = api.Relation.add_ephemeral_prefix('') %}\n        {% if obj.name.startswith(ephemeral_prefix) %}\n            {% set model_name = obj.name[(ephemeral_prefix|length):] %}\n        {% else %}\n            {% set model_name = obj.name %}\n        {%- endif -%}\n        {% set error_message %}\nThe `{{ macro }}` macro cannot be used with ephemeral models, as it relies on the information schema.\n\n`{{ model_name }}` is an ephemeral model. Consider making it a view or table instead.\n        {% endset %}\n        {%- do exceptions.raise_compiler_error(error_message) -%}\n    {%- endif -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.hash": {"unique_id": "macro.dbt_utils.hash", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "hash", "macro_sql": "{% macro hash(field) -%}\n  {{ return(adapter.dispatch('hash', 'dbt_utils') (field)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__hash": {"unique_id": "macro.dbt_utils.default__hash", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "default__hash", "macro_sql": "{% macro default__hash(field) -%}\n    md5(cast({{field}} as {{dbt_utils.type_string()}}))\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__hash": {"unique_id": "macro.dbt_utils.bigquery__hash", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/hash.sql", "original_file_path": "macros/cross_db_utils/hash.sql", "name": "bigquery__hash", "macro_sql": "{% macro bigquery__hash(field) -%}\n    to_hex({{dbt_utils.default__hash(field)}})\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__hash"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.cast_bool_to_text": {"unique_id": "macro.dbt_utils.cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "cast_bool_to_text", "macro_sql": "{% macro cast_bool_to_text(field) %}\n  {{ adapter.dispatch('cast_bool_to_text', 'dbt_utils') (field) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__cast_bool_to_text": {"unique_id": "macro.dbt_utils.default__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "default__cast_bool_to_text", "macro_sql": "{% macro default__cast_bool_to_text(field) %}\n    cast({{ field }} as {{ dbt_utils.type_string() }})\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__cast_bool_to_text": {"unique_id": "macro.dbt_utils.redshift__cast_bool_to_text", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/cast_bool_to_text.sql", "original_file_path": "macros/cross_db_utils/cast_bool_to_text.sql", "name": "redshift__cast_bool_to_text", "macro_sql": "{% macro redshift__cast_bool_to_text(field) %}\n    case\n        when {{ field }} is true then 'true'\n        when {{ field }} is false then 'false'\n    end::text\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.right": {"unique_id": "macro.dbt_utils.right", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "right", "macro_sql": "{% macro right(string_text, length_expression) -%}\n    {{ return(adapter.dispatch('right', 'dbt_utils') (string_text, length_expression)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__right"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__right": {"unique_id": "macro.dbt_utils.default__right", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "default__right", "macro_sql": "{% macro default__right(string_text, length_expression) %}\n\n    right(\n        {{ string_text }},\n        {{ length_expression }}\n    )\n    \n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__right": {"unique_id": "macro.dbt_utils.bigquery__right", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "bigquery__right", "macro_sql": "{% macro bigquery__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        substr(\n            {{ string_text }},\n            -1 * ({{ length_expression }})\n        )\n    end\n\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.snowflake__right": {"unique_id": "macro.dbt_utils.snowflake__right", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/right.sql", "original_file_path": "macros/cross_db_utils/right.sql", "name": "snowflake__right", "macro_sql": "{% macro snowflake__right(string_text, length_expression) %}\n\n    case when {{ length_expression }} = 0 \n        then ''\n    else \n        right(\n            {{ string_text }},\n            {{ length_expression }}\n        )\n    end\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.split_part": {"unique_id": "macro.dbt_utils.split_part", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "split_part", "macro_sql": "{% macro split_part(string_text, delimiter_text, part_number) %}\n  {{ return(adapter.dispatch('split_part', 'dbt_utils') (string_text, delimiter_text, part_number)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__split_part": {"unique_id": "macro.dbt_utils.default__split_part", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "default__split_part", "macro_sql": "{% macro default__split_part(string_text, delimiter_text, part_number) %}\n\n    split_part(\n        {{ string_text }},\n        {{ delimiter_text }},\n        {{ part_number }}\n        )\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__split_part": {"unique_id": "macro.dbt_utils.bigquery__split_part", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/split_part.sql", "original_file_path": "macros/cross_db_utils/split_part.sql", "name": "bigquery__split_part", "macro_sql": "{% macro bigquery__split_part(string_text, delimiter_text, part_number) %}\n\n    split(\n        {{ string_text }},\n        {{ delimiter_text }}\n        )[safe_offset({{ part_number - 1 }})]\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.type_string": {"unique_id": "macro.dbt_utils.type_string", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_string", "macro_sql": "\n\n{%- macro type_string() -%}\n  {{ return(adapter.dispatch('type_string', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__type_string": {"unique_id": "macro.dbt_utils.default__type_string", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_string", "macro_sql": "{% macro default__type_string() %}\n    string\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__type_string": {"unique_id": "macro.dbt_utils.redshift__type_string", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "redshift__type_string", "macro_sql": "\n\n{%- macro redshift__type_string() -%}\n    varchar\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.postgres__type_string": {"unique_id": "macro.dbt_utils.postgres__type_string", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "postgres__type_string", "macro_sql": "{% macro postgres__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.snowflake__type_string": {"unique_id": "macro.dbt_utils.snowflake__type_string", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_string", "macro_sql": "{% macro snowflake__type_string() %}\n    varchar\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.type_timestamp": {"unique_id": "macro.dbt_utils.type_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_timestamp", "macro_sql": "\n\n{%- macro type_timestamp() -%}\n  {{ return(adapter.dispatch('type_timestamp', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__type_timestamp": {"unique_id": "macro.dbt_utils.default__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_timestamp", "macro_sql": "{% macro default__type_timestamp() %}\n    timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.snowflake__type_timestamp": {"unique_id": "macro.dbt_utils.snowflake__type_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "snowflake__type_timestamp", "macro_sql": "{% macro snowflake__type_timestamp() %}\n    timestamp_ntz\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.type_float": {"unique_id": "macro.dbt_utils.type_float", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_float", "macro_sql": "\n\n{%- macro type_float() -%}\n  {{ return(adapter.dispatch('type_float', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_float"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__type_float": {"unique_id": "macro.dbt_utils.default__type_float", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_float", "macro_sql": "{% macro default__type_float() %}\n    float\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__type_float": {"unique_id": "macro.dbt_utils.bigquery__type_float", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_float", "macro_sql": "{% macro bigquery__type_float() %}\n    float64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.type_numeric": {"unique_id": "macro.dbt_utils.type_numeric", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_numeric", "macro_sql": "\n\n{%- macro type_numeric() -%}\n  {{ return(adapter.dispatch('type_numeric', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_numeric"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__type_numeric": {"unique_id": "macro.dbt_utils.default__type_numeric", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_numeric", "macro_sql": "{% macro default__type_numeric() %}\n    numeric(28, 6)\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__type_numeric": {"unique_id": "macro.dbt_utils.bigquery__type_numeric", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_numeric", "macro_sql": "{% macro bigquery__type_numeric() %}\n    numeric\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.type_bigint": {"unique_id": "macro.dbt_utils.type_bigint", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_bigint", "macro_sql": "\n\n{%- macro type_bigint() -%}\n  {{ return(adapter.dispatch('type_bigint', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_bigint"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__type_bigint": {"unique_id": "macro.dbt_utils.default__type_bigint", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_bigint", "macro_sql": "{% macro default__type_bigint() %}\n    bigint\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__type_bigint": {"unique_id": "macro.dbt_utils.bigquery__type_bigint", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_bigint", "macro_sql": "{% macro bigquery__type_bigint() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.type_int": {"unique_id": "macro.dbt_utils.type_int", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "type_int", "macro_sql": "\n\n{%- macro type_int() -%}\n  {{ return(adapter.dispatch('type_int', 'dbt_utils')()) }}\n{%- endmacro -%}\n\n", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__type_int"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__type_int": {"unique_id": "macro.dbt_utils.default__type_int", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "default__type_int", "macro_sql": "{% macro default__type_int() %}\n    int\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__type_int": {"unique_id": "macro.dbt_utils.bigquery__type_int", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/datatypes.sql", "original_file_path": "macros/cross_db_utils/datatypes.sql", "name": "bigquery__type_int", "macro_sql": "{% macro bigquery__type_int() %}\n    int64\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.current_timestamp": {"unique_id": "macro.dbt_utils.current_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp", "macro_sql": "{% macro current_timestamp() -%}\n  {{ return(adapter.dispatch('current_timestamp', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__current_timestamp": {"unique_id": "macro.dbt_utils.default__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp", "macro_sql": "{% macro default__current_timestamp() %}\n    current_timestamp::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__current_timestamp": {"unique_id": "macro.dbt_utils.redshift__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp", "macro_sql": "{% macro redshift__current_timestamp() %}\n    getdate()\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__current_timestamp": {"unique_id": "macro.dbt_utils.bigquery__current_timestamp", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "bigquery__current_timestamp", "macro_sql": "{% macro bigquery__current_timestamp() %}\n    current_timestamp\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "current_timestamp_in_utc", "macro_sql": "{% macro current_timestamp_in_utc() -%}\n  {{ return(adapter.dispatch('current_timestamp_in_utc', 'dbt_utils')()) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.postgres__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.default__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "default__current_timestamp_in_utc", "macro_sql": "{% macro default__current_timestamp_in_utc() %}\n    {{dbt_utils.current_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.snowflake__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.snowflake__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "snowflake__current_timestamp_in_utc", "macro_sql": "{% macro snowflake__current_timestamp_in_utc() %}\n    convert_timezone('UTC', {{dbt_utils.current_timestamp()}})::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.current_timestamp", "macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.postgres__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.postgres__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "postgres__current_timestamp_in_utc", "macro_sql": "{% macro postgres__current_timestamp_in_utc() %}\n    (current_timestamp at time zone 'utc')::{{dbt_utils.type_timestamp()}}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.redshift__current_timestamp_in_utc": {"unique_id": "macro.dbt_utils.redshift__current_timestamp_in_utc", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/cross_db_utils/current_timestamp.sql", "original_file_path": "macros/cross_db_utils/current_timestamp.sql", "name": "redshift__current_timestamp_in_utc", "macro_sql": "{% macro redshift__current_timestamp_in_utc() %}\n    {{ return(dbt_utils.default__current_timestamp_in_utc()) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__current_timestamp_in_utc"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.unpivot": {"unique_id": "macro.dbt_utils.unpivot", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "unpivot", "macro_sql": "{% macro unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n    {{ return(adapter.dispatch('unpivot', 'dbt_utils')(relation, cast_to, exclude, remove, field_name, value_name, table)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__unpivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__unpivot": {"unique_id": "macro.dbt_utils.default__unpivot", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/unpivot.sql", "original_file_path": "macros/sql/unpivot.sql", "name": "default__unpivot", "macro_sql": "{% macro default__unpivot(relation=none, cast_to='varchar', exclude=none, remove=none, field_name='field_name', value_name='value', table=none) -%}\n\n    {% if table %}\n        {%- set error_message = '\n            Warning: the `unpivot` macro no longer accepts a `table` parameter. \\\n            This parameter will be deprecated in a future release of dbt-utils. Use the `relation` parameter instead. \\\n            The {}.{} model triggered this warning. \\\n            '.format(model.package_name, model.name) -%}\n        {%- do exceptions.warn(error_message) -%}\n    {% endif %}\n\n    {% if relation and table %}\n        {{ exceptions.raise_compiler_error(\"Error: both the `relation` and `table` parameters were provided to `unpivot` macro. Choose one only (we recommend `relation`).\") }}\n    {% elif not relation and table %}\n        {% set relation=table %}\n    {% elif not relation and not table %}\n        {{ exceptions.raise_compiler_error(\"Error: argument `relation` is required for `unpivot` macro.\") }}\n    {% endif %}\n\n  {%- set exclude = exclude if exclude is not none else [] %}\n  {%- set remove = remove if remove is not none else [] %}\n\n  {%- set include_cols = [] %}\n\n  {%- set table_columns = {} %}\n\n  {%- do table_columns.update({relation: []}) %}\n\n  {%- do dbt_utils._is_relation(relation, 'unpivot') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'unpivot') -%}\n  {%- set cols = adapter.get_columns_in_relation(relation) %}\n\n  {%- for col in cols -%}\n    {%- if col.column.lower() not in remove|map('lower') and col.column.lower() not in exclude|map('lower') -%}\n      {% do include_cols.append(col) %}\n    {%- endif %}\n  {%- endfor %}\n\n\n  {%- for col in include_cols -%}\n    select\n      {%- for exclude_col in exclude %}\n        {{ exclude_col }},\n      {%- endfor %}\n\n      cast('{{ col.column }}' as {{ dbt_utils.type_string() }}) as {{ field_name }},\n      cast(  {% if col.data_type == 'boolean' %}\n           {{ dbt_utils.cast_bool_to_text(col.column) }}\n             {% else %}\n           {{ col.column }}\n             {% endif %}\n           as {{ cast_to }}) as {{ value_name }}\n\n    from {{ relation }}\n\n    {% if not loop.last -%}\n      union all\n    {% endif -%}\n  {%- endfor -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.type_string", "macro.dbt_utils.cast_bool_to_text"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_relations_by_prefix": {"unique_id": "macro.dbt_utils.get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "get_relations_by_prefix", "macro_sql": "{% macro get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_prefix', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_prefix"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_relations_by_prefix": {"unique_id": "macro.dbt_utils.default__get_relations_by_prefix", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_relations_by_prefix.sql", "original_file_path": "macros/sql/get_relations_by_prefix.sql", "name": "default__get_relations_by_prefix", "macro_sql": "{% macro default__get_relations_by_prefix(schema, prefix, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_prefix_sql(schema, prefix, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_powers_of_two": {"unique_id": "macro.dbt_utils.get_powers_of_two", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "get_powers_of_two", "macro_sql": "{% macro get_powers_of_two(upper_bound) %}\n    {{ return(adapter.dispatch('get_powers_of_two', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_powers_of_two": {"unique_id": "macro.dbt_utils.default__get_powers_of_two", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__get_powers_of_two", "macro_sql": "{% macro default__get_powers_of_two(upper_bound) %}\n\n    {% if upper_bound <= 0 %}\n    {{ exceptions.raise_compiler_error(\"upper bound must be positive\") }}\n    {% endif %}\n\n    {% for _ in range(1, 100) %}\n       {% if upper_bound <= 2 ** loop.index %}{{ return(loop.index) }}{% endif %}\n    {% endfor %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.generate_series": {"unique_id": "macro.dbt_utils.generate_series", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "generate_series", "macro_sql": "{% macro generate_series(upper_bound) %}\n    {{ return(adapter.dispatch('generate_series', 'dbt_utils')(upper_bound)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__generate_series"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__generate_series": {"unique_id": "macro.dbt_utils.default__generate_series", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/generate_series.sql", "original_file_path": "macros/sql/generate_series.sql", "name": "default__generate_series", "macro_sql": "{% macro default__generate_series(upper_bound) %}\n\n    {% set n = dbt_utils.get_powers_of_two(upper_bound) %}\n\n    with p as (\n        select 0 as generated_number union all select 1\n    ), unioned as (\n\n    select\n\n    {% for i in range(n) %}\n    p{{i}}.generated_number * power(2, {{i}})\n    {% if not loop.last %} + {% endif %}\n    {% endfor %}\n    + 1\n    as generated_number\n\n    from\n\n    {% for i in range(n) %}\n    p as p{{i}}\n    {% if not loop.last %} cross join {% endif %}\n    {% endfor %}\n\n    )\n\n    select *\n    from unioned\n    where generated_number <= {{upper_bound}}\n    order by generated_number\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_powers_of_two"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.nullcheck": {"unique_id": "macro.dbt_utils.nullcheck", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "nullcheck", "macro_sql": "{% macro nullcheck(cols) %}\n    {{ return(adapter.dispatch('nullcheck', 'dbt_utils')(cols)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__nullcheck": {"unique_id": "macro.dbt_utils.default__nullcheck", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/nullcheck.sql", "original_file_path": "macros/sql/nullcheck.sql", "name": "default__nullcheck", "macro_sql": "{% macro default__nullcheck(cols) %}\n{%- for col in cols %}\n\n    {% if col.is_string() -%}\n\n    nullif({{col.name}},'') as {{col.name}}\n\n    {%- else -%}\n\n    {{col.name}}\n\n    {%- endif -%}\n\n{%- if not loop.last -%} , {%- endif -%}\n\n{%- endfor -%}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.pivot": {"unique_id": "macro.dbt_utils.pivot", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "pivot", "macro_sql": "{% macro pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n    {{ return(adapter.dispatch('pivot', 'dbt_utils')(column, values, alias, agg, cmp, prefix, suffix, then_value, else_value, quote_identifiers, distinct)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pivot"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__pivot": {"unique_id": "macro.dbt_utils.default__pivot", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/pivot.sql", "original_file_path": "macros/sql/pivot.sql", "name": "default__pivot", "macro_sql": "{% macro default__pivot(column,\n               values,\n               alias=True,\n               agg='sum',\n               cmp='=',\n               prefix='',\n               suffix='',\n               then_value=1,\n               else_value=0,\n               quote_identifiers=True,\n               distinct=False) %}\n  {% for v in values %}\n    {{ agg }}(\n      {% if distinct %} distinct {% endif %}\n      case\n      when {{ column }} {{ cmp }} '{{ v }}'\n        then {{ then_value }}\n      else {{ else_value }}\n      end\n    )\n    {% if alias %}\n      {% if quote_identifiers %}\n            as {{ adapter.quote(prefix ~ v ~ suffix) }}\n      {% else %}\n        as {{ dbt_utils.slugify(prefix ~ v ~ suffix) }}\n      {% endif %}\n    {% endif %}\n    {% if not loop.last %},{% endif %}\n  {% endfor %}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.slugify"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_intervals_between": {"unique_id": "macro.dbt_utils.get_intervals_between", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "get_intervals_between", "macro_sql": "{% macro get_intervals_between(start_date, end_date, datepart) -%}\n    {{ return(adapter.dispatch('get_intervals_between', 'dbt_utils')(start_date, end_date, datepart)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_intervals_between"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_intervals_between": {"unique_id": "macro.dbt_utils.default__get_intervals_between", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__get_intervals_between", "macro_sql": "{% macro default__get_intervals_between(start_date, end_date, datepart) -%}\n    {%- call statement('get_intervals_between', fetch_result=True) %}\n\n        select {{dbt_utils.datediff(start_date, end_date, datepart)}}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_intervals_between') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values[0]) }}\n    {%- else -%}\n        {{ return(1) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.date_spine": {"unique_id": "macro.dbt_utils.date_spine", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "date_spine", "macro_sql": "{% macro date_spine(datepart, start_date, end_date) %}\n    {{ return(adapter.dispatch('date_spine', 'dbt_utils')(datepart, start_date, end_date)) }}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__date_spine"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__date_spine": {"unique_id": "macro.dbt_utils.default__date_spine", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/date_spine.sql", "original_file_path": "macros/sql/date_spine.sql", "name": "default__date_spine", "macro_sql": "{% macro default__date_spine(datepart, start_date, end_date) %}\n\n/*\ncall as follows:\n\ndate_spine(\n    \"day\",\n    \"to_date('01/01/2016', 'mm/dd/yyyy')\",\n    \"dateadd(week, 1, current_date)\"\n)\n\n*/\n\nwith rawdata as (\n\n    {{dbt_utils.generate_series(\n        dbt_utils.get_intervals_between(start_date, end_date, datepart)\n    )}}\n\n),\n\nall_periods as (\n\n    select (\n        {{\n            dbt_utils.dateadd(\n                datepart,\n                \"row_number() over (order by 1) - 1\",\n                start_date\n            )\n        }}\n    ) as date_{{datepart}}\n    from rawdata\n\n),\n\nfiltered as (\n\n    select *\n    from all_periods\n    where date_{{datepart}} <= {{ end_date }}\n\n)\n\nselect * from filtered\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.generate_series", "macro.dbt_utils.get_intervals_between", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.degrees_to_radians": {"unique_id": "macro.dbt_utils.degrees_to_radians", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "degrees_to_radians", "macro_sql": "{% macro degrees_to_radians(degrees) -%}\n    acos(-1) * {{degrees}} / 180\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.haversine_distance": {"unique_id": "macro.dbt_utils.haversine_distance", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "haversine_distance", "macro_sql": "{% macro haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n    {{ return(adapter.dispatch('haversine_distance', 'dbt_utils')(lat1,lon1,lat2,lon2,unit)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__haversine_distance"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__haversine_distance": {"unique_id": "macro.dbt_utils.default__haversine_distance", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "default__haversine_distance", "macro_sql": "{% macro default__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n\n    2 * 3961 * asin(sqrt(power((sin(radians(({{ lat2 }} - {{ lat1 }}) / 2))), 2) +\n    cos(radians({{lat1}})) * cos(radians({{lat2}})) *\n    power((sin(radians(({{ lon2 }} - {{ lon1 }}) / 2))), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__haversine_distance": {"unique_id": "macro.dbt_utils.bigquery__haversine_distance", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/haversine_distance.sql", "original_file_path": "macros/sql/haversine_distance.sql", "name": "bigquery__haversine_distance", "macro_sql": "{% macro bigquery__haversine_distance(lat1, lon1, lat2, lon2, unit='mi') -%}\n{% set radians_lat1 = dbt_utils.degrees_to_radians(lat1) %}\n{% set radians_lat2 = dbt_utils.degrees_to_radians(lat2) %}\n{% set radians_lon1 = dbt_utils.degrees_to_radians(lon1) %}\n{% set radians_lon2 = dbt_utils.degrees_to_radians(lon2) %}\n{%- if unit == 'mi' %}\n    {% set conversion_rate = 1 %}\n{% elif unit == 'km' %}\n    {% set conversion_rate = 1.60934 %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\"unit input must be one of 'mi' or 'km'. Got \" ~ unit) }}\n{% endif %}\n    2 * 3961 * asin(sqrt(power(sin(({{ radians_lat2 }} - {{ radians_lat1 }}) / 2), 2) +\n    cos({{ radians_lat1 }}) * cos({{ radians_lat2 }}) *\n    power(sin(({{ radians_lon2 }} - {{ radians_lon1 }}) / 2), 2))) * {{ conversion_rate }}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.degrees_to_radians"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.surrogate_key": {"unique_id": "macro.dbt_utils.surrogate_key", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "surrogate_key", "macro_sql": "{%- macro surrogate_key(field_list) -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('surrogate_key', 'dbt_utils')(field_list, *varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__surrogate_key"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__surrogate_key": {"unique_id": "macro.dbt_utils.default__surrogate_key", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/surrogate_key.sql", "original_file_path": "macros/sql/surrogate_key.sql", "name": "default__surrogate_key", "macro_sql": "\n\n{%- macro default__surrogate_key(field_list) -%}\n\n{%- if varargs|length >= 1 or field_list is string %}\n\n{%- set error_message = '\nWarning: the `surrogate_key` macro now takes a single list argument instead of \\\nmultiple string arguments. Support for multiple string arguments will be \\\ndeprecated in a future release of dbt-utils. The {}.{} model triggered this warning. \\\n'.format(model.package_name, model.name) -%}\n\n{%- do exceptions.warn(error_message) -%}\n\n{# first argument is not included in varargs, so add first element to field_list_xf #}\n{%- set field_list_xf = [field_list] -%}\n\n{%- for field in varargs %}\n{%- set _ = field_list_xf.append(field) -%}\n{%- endfor -%}\n\n{%- else -%}\n\n{# if using list, just set field_list_xf as field_list #}\n{%- set field_list_xf = field_list -%}\n\n{%- endif -%}\n\n\n{%- set fields = [] -%}\n\n{%- for field in field_list_xf -%}\n\n    {%- set _ = fields.append(\n        \"coalesce(cast(\" ~ field ~ \" as \" ~ dbt_utils.type_string() ~ \"), '')\"\n    ) -%}\n\n    {%- if not loop.last %}\n        {%- set _ = fields.append(\"'-'\") -%}\n    {%- endif -%}\n\n{%- endfor -%}\n\n{{dbt_utils.hash(dbt_utils.concat(fields))}}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_string", "macro.dbt_utils.hash", "macro.dbt_utils.concat"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.union_relations": {"unique_id": "macro.dbt_utils.union_relations", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "union_relations", "macro_sql": "{%- macro union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n    {{ return(adapter.dispatch('union_relations', 'dbt_utils')(relations, column_override, include, exclude, source_column_name)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__union_relations"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__union_relations": {"unique_id": "macro.dbt_utils.default__union_relations", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/union.sql", "original_file_path": "macros/sql/union.sql", "name": "default__union_relations", "macro_sql": "\n\n{%- macro default__union_relations(relations, column_override=none, include=[], exclude=[], source_column_name='_dbt_source_relation') -%}\n\n    {%- if exclude and include -%}\n        {{ exceptions.raise_compiler_error(\"Both an exclude and include list were provided to the `union` macro. Only one is allowed\") }}\n    {%- endif -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. -#}\n    {%- if not execute %}\n        {{ return('') }}\n    {% endif -%}\n\n    {%- set column_override = column_override if column_override is not none else {} -%}\n\n    {%- set relation_columns = {} -%}\n    {%- set column_superset = {} -%}\n\n    {%- for relation in relations -%}\n\n        {%- do relation_columns.update({relation: []}) -%}\n\n        {%- do dbt_utils._is_relation(relation, 'union_relations') -%}\n        {%- do dbt_utils._is_ephemeral(relation, 'union_relations') -%}\n        {%- set cols = adapter.get_columns_in_relation(relation) -%}\n        {%- for col in cols -%}\n\n        {#- If an exclude list was provided and the column is in the list, do nothing -#}\n        {%- if exclude and col.column in exclude -%}\n\n        {#- If an include list was provided and the column is not in the list, do nothing -#}\n        {%- elif include and col.column not in include -%}\n\n        {#- Otherwise add the column to the column superset -#}\n        {%- else -%}\n\n            {#- update the list of columns in this relation -#}\n            {%- do relation_columns[relation].append(col.column) -%}\n\n            {%- if col.column in column_superset -%}\n\n                {%- set stored = column_superset[col.column] -%}\n                {%- if col.is_string() and stored.is_string() and col.string_size() > stored.string_size() -%}\n\n                    {%- do column_superset.update({col.column: col}) -%}\n\n                {%- endif %}\n\n            {%- else -%}\n\n                {%- do column_superset.update({col.column: col}) -%}\n\n            {%- endif -%}\n\n        {%- endif -%}\n\n        {%- endfor -%}\n    {%- endfor -%}\n\n    {%- set ordered_column_names = column_superset.keys() -%}\n\n    {%- for relation in relations %}\n\n        (\n            select\n\n                cast({{ dbt_utils.string_literal(relation) }} as {{ dbt_utils.type_string() }}) as {{ source_column_name }},\n                {% for col_name in ordered_column_names -%}\n\n                    {%- set col = column_superset[col_name] %}\n                    {%- set col_type = column_override.get(col.column, col.data_type) %}\n                    {%- set col_name = adapter.quote(col_name) if col_name in relation_columns[relation] else 'null' %}\n                    cast({{ col_name }} as {{ col_type }}) as {{ col.quoted }} {% if not loop.last %},{% endif -%}\n\n                {%- endfor %}\n\n            from {{ relation }}\n        )\n\n        {% if not loop.last -%}\n            union all\n        {% endif -%}\n\n    {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.string_literal", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.safe_add": {"unique_id": "macro.dbt_utils.safe_add", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "safe_add", "macro_sql": "{%- macro safe_add() -%}\n    {# needed for safe_add to allow for non-keyword arguments see SO post #}\n    {# https://stackoverflow.com/questions/13944751/args-kwargs-in-jinja2-macros #}\n    {% set frustrating_jinja_feature = varargs %}\n    {{ return(adapter.dispatch('safe_add', 'dbt_utils')(*varargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__safe_add"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__safe_add": {"unique_id": "macro.dbt_utils.default__safe_add", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/safe_add.sql", "original_file_path": "macros/sql/safe_add.sql", "name": "default__safe_add", "macro_sql": "\n\n{%- macro default__safe_add() -%}\n\n{% set fields = [] %}\n\n{%- for field in varargs -%}\n\n    {% do fields.append(\"coalesce(\" ~ field ~ \", 0)\") %}\n\n{%- endfor -%}\n\n{{ fields|join(' +\\n  ') }}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_column_values": {"unique_id": "macro.dbt_utils.get_column_values", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "get_column_values", "macro_sql": "{% macro get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n    {{ return(adapter.dispatch('get_column_values', 'dbt_utils')(table, column, order_by, max_records, default)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_column_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_column_values": {"unique_id": "macro.dbt_utils.default__get_column_values", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_column_values.sql", "original_file_path": "macros/sql/get_column_values.sql", "name": "default__get_column_values", "macro_sql": "{% macro default__get_column_values(table, column, order_by='count(*) desc', max_records=none, default=none) -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set target_relation = adapter.get_relation(database=table.database,\n                                          schema=table.schema,\n                                         identifier=table.identifier) -%}\n\n    {%- call statement('get_column_values', fetch_result=true) %}\n\n        {%- if not target_relation and default is none -%}\n\n          {{ exceptions.raise_compiler_error(\"In get_column_values(): relation \" ~ table ~ \" does not exist and no default value was provided.\") }}\n\n        {%- elif not target_relation and default is not none -%}\n\n          {{ log(\"Relation \" ~ table ~ \" does not exist. Returning the default value: \" ~ default) }}\n\n          {{ return(default) }}\n\n        {%- else -%}\n\n\n            select\n                {{ column }} as value\n\n            from {{ target_relation }}\n            group by {{ column }}\n            order by {{ order_by }}\n\n            {% if max_records is not none %}\n            limit {{ max_records }}\n            {% endif %}\n\n        {% endif %}\n\n    {%- endcall -%}\n\n    {%- set value_list = load_result('get_column_values') -%}\n\n    {%- if value_list and value_list['data'] -%}\n        {%- set values = value_list['data'] | map(attribute=0) | list %}\n        {{ return(values) }}\n    {%- else -%}\n        {{ return(default) }}\n    {%- endif -%}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.star": {"unique_id": "macro.dbt_utils.star", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "star", "macro_sql": "{% macro star(from, relation_alias=False, except=[]) -%}\n    {{ return(adapter.dispatch('star', 'dbt_utils')(from, relation_alias, except)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__star"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__star": {"unique_id": "macro.dbt_utils.default__star", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/star.sql", "original_file_path": "macros/sql/star.sql", "name": "default__star", "macro_sql": "{% macro default__star(from, relation_alias=False, except=[]) -%}\n    {%- do dbt_utils._is_relation(from, 'star') -%}\n    {%- do dbt_utils._is_ephemeral(from, 'star') -%}\n\n    {#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n    {%- if not execute -%}\n        {{ return('') }}\n    {% endif %}\n\n    {%- set include_cols = [] %}\n    {%- set cols = adapter.get_columns_in_relation(from) -%}\n    {%- set except = except | map(\"lower\") | list %}\n    {%- for col in cols -%}\n\n        {%- if col.column|lower not in except -%}\n            {% do include_cols.append(col.column) %}\n\n        {%- endif %}\n    {%- endfor %}\n\n    {%- for col in include_cols %}\n\n        {%- if relation_alias %}{{ relation_alias }}.{% else %}{%- endif -%}{{ adapter.quote(col)|trim }}\n        {%- if not loop.last %},{{ '\\n  ' }}{% endif %}\n\n    {%- endfor -%}\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "get_tables_by_prefix_sql", "macro_sql": "{% macro get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_prefix_sql', 'dbt_utils')(schema, prefix, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_prefix_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_tables_by_prefix_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_prefix_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_tables_by_prefix_sql.sql", "original_file_path": "macros/sql/get_tables_by_prefix_sql.sql", "name": "default__get_tables_by_prefix_sql", "macro_sql": "{% macro default__get_tables_by_prefix_sql(schema, prefix, exclude='', database=target.database) %}\n\n    {{ dbt_utils.get_tables_by_pattern_sql(\n        schema_pattern = schema,\n        table_pattern = prefix ~ '%',\n        exclude = exclude,\n        database = database\n    ) }}\n    \n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.nullcheck_table": {"unique_id": "macro.dbt_utils.nullcheck_table", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "nullcheck_table", "macro_sql": "{% macro nullcheck_table(relation) %}\n    {{ return(adapter.dispatch('nullcheck_table', 'dbt_utils')(relation)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__nullcheck_table"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__nullcheck_table": {"unique_id": "macro.dbt_utils.default__nullcheck_table", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/nullcheck_table.sql", "original_file_path": "macros/sql/nullcheck_table.sql", "name": "default__nullcheck_table", "macro_sql": "{% macro default__nullcheck_table(relation) %}\n\n  {%- do dbt_utils._is_relation(relation, 'nullcheck_table') -%}\n  {%- do dbt_utils._is_ephemeral(relation, 'nullcheck_table') -%}\n  {% set cols = adapter.get_columns_in_relation(relation) %}\n\n  select {{ dbt_utils.nullcheck(cols) }}\n  from {{relation}}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.nullcheck"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_relations_by_pattern": {"unique_id": "macro.dbt_utils.get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "get_relations_by_pattern", "macro_sql": "{% macro get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_relations_by_pattern', 'dbt_utils')(schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_relations_by_pattern"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_relations_by_pattern": {"unique_id": "macro.dbt_utils.default__get_relations_by_pattern", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_relations_by_pattern.sql", "original_file_path": "macros/sql/get_relations_by_pattern.sql", "name": "default__get_relations_by_pattern", "macro_sql": "{% macro default__get_relations_by_pattern(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {%- call statement('get_tables', fetch_result=True) %}\n\n      {{ dbt_utils.get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude, database) }}\n\n    {%- endcall -%}\n\n    {%- set table_list = load_result('get_tables') -%}\n\n    {%- if table_list and table_list['table'] -%}\n        {%- set tbl_relations = [] -%}\n        {%- for row in table_list['table'] -%}\n            {%- set tbl_relation = api.Relation.create(\n                database=database,\n                schema=row.table_schema,\n                identifier=row.table_name,\n                type=row.table_type\n            ) -%}\n            {%- do tbl_relations.append(tbl_relation) -%}\n        {%- endfor -%}\n\n        {{ return(tbl_relations) }}\n    {%- else -%}\n        {{ return([]) }}\n    {%- endif -%}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.group_by": {"unique_id": "macro.dbt_utils.group_by", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "group_by", "macro_sql": "{%- macro group_by(n) -%}\n    {{ return(adapter.dispatch('group_by', 'dbt_utils')(n)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__group_by"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__group_by": {"unique_id": "macro.dbt_utils.default__group_by", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/groupby.sql", "original_file_path": "macros/sql/groupby.sql", "name": "default__group_by", "macro_sql": "\n\n{%- macro default__group_by(n) -%}\n\n  group by {% for i in range(1, n + 1) -%}\n      {{ i }}{{ ',' if not loop.last }}   \n   {%- endfor -%}\n\n{%- endmacro -%}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_query_results_as_dict": {"unique_id": "macro.dbt_utils.get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "get_query_results_as_dict", "macro_sql": "{% macro get_query_results_as_dict(query) %}\n    {{ return(adapter.dispatch('get_query_results_as_dict', 'dbt_utils')(query)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_query_results_as_dict"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_query_results_as_dict": {"unique_id": "macro.dbt_utils.default__get_query_results_as_dict", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_query_results_as_dict.sql", "original_file_path": "macros/sql/get_query_results_as_dict.sql", "name": "default__get_query_results_as_dict", "macro_sql": "{% macro default__get_query_results_as_dict(query) %}\n\n{# This macro returns a dictionary of the form {column_name: (tuple_of_results)} #}\n\n    {%- call statement('get_query_results', fetch_result=True,auto_begin=false) -%}\n\n        {{ query }}\n\n    {%- endcall -%}\n\n    {% set sql_results={} %}\n\n    {%- if execute -%}\n        {% set sql_results_table = load_result('get_query_results').table.columns %}\n        {% for column_name, column in sql_results_table.items() %}\n            {% do sql_results.update({column_name: column.values()}) %}\n        {% endfor %}\n    {%- endif -%}\n\n    {{ return(sql_results) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "get_tables_by_pattern_sql", "macro_sql": "{% macro get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n    {{ return(adapter.dispatch('get_tables_by_pattern_sql', 'dbt_utils')\n        (schema_pattern, table_pattern, exclude, database)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_tables_by_pattern_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.default__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "default__get_tables_by_pattern_sql", "macro_sql": "{% macro default__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n        select distinct\n            table_schema as \"table_schema\",\n            table_name as \"table_name\",\n            case table_type\n                when 'BASE TABLE' then 'table'\n                when 'EXTERNAL TABLE' then 'external'\n                when 'MATERIALIZED VIEW' then 'materializedview'\n                else lower(table_type)\n            end as \"table_type\"\n        from {{ database }}.information_schema.tables\n        where table_schema ilike '{{ schema_pattern }}'\n        and table_name ilike '{{ table_pattern }}'\n        and table_name not ilike '{{ exclude }}'\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.bigquery__get_tables_by_pattern_sql": {"unique_id": "macro.dbt_utils.bigquery__get_tables_by_pattern_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "bigquery__get_tables_by_pattern_sql", "macro_sql": "{% macro bigquery__get_tables_by_pattern_sql(schema_pattern, table_pattern, exclude='', database=target.database) %}\n\n    {% if '%' in schema_pattern %}\n        {% set schemata=dbt_utils._bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% else %}\n        {% set schemata=[schema_pattern] %}\n    {% endif %}\n\n    {% set sql %}\n        {% for schema in schemata %}\n            select distinct\n                table_schema,\n                table_name,\n                case table_type\n                    when 'BASE TABLE' then 'table'\n                    else lower(table_type)\n                end as table_type\n\n            from {{ adapter.quote(database) }}.{{ schema }}.INFORMATION_SCHEMA.TABLES\n            where lower(table_name) like lower ('{{ table_pattern }}')\n                and lower(table_name) not like lower ('{{ exclude }}')\n\n            {% if not loop.last %} union all {% endif %}\n\n        {% endfor %}\n    {% endset %}\n\n    {{ return(sql) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._bigquery__get_matching_schemata"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils._bigquery__get_matching_schemata": {"unique_id": "macro.dbt_utils._bigquery__get_matching_schemata", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/sql/get_tables_by_pattern_sql.sql", "original_file_path": "macros/sql/get_tables_by_pattern_sql.sql", "name": "_bigquery__get_matching_schemata", "macro_sql": "{% macro _bigquery__get_matching_schemata(schema_pattern, database) %}\n    {% if execute %}\n\n        {% set sql %}\n        select schema_name from {{ adapter.quote(database) }}.INFORMATION_SCHEMA.SCHEMATA\n        where lower(schema_name) like lower('{{ schema_pattern }}')\n        {% endset %}\n\n        {% set results=run_query(sql) %}\n\n        {% set schemata=results.columns['schema_name'].values() %}\n\n        {{ return(schemata) }}\n\n    {% else %}\n\n        {{ return([]) }}\n\n    {% endif %}\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_query"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_period_boundaries": {"unique_id": "macro.dbt_utils.get_period_boundaries", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_boundaries", "macro_sql": "{% macro get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n    {{ return(adapter.dispatch('get_period_boundaries', 'dbt_utils')(target_schema, target_table, timestamp_field, start_date, stop_date, period)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_boundaries"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_period_boundaries": {"unique_id": "macro.dbt_utils.default__get_period_boundaries", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_boundaries", "macro_sql": "{% macro default__get_period_boundaries(target_schema, target_table, timestamp_field, start_date, stop_date, period) -%}\n\n  {% call statement('period_boundaries', fetch_result=True) -%}\n    with data as (\n      select\n          coalesce(max(\"{{timestamp_field}}\"), '{{start_date}}')::timestamp as start_timestamp,\n          coalesce(\n            {{dbt_utils.dateadd('millisecond',\n                                -1,\n                                \"nullif('\" ~ stop_date ~ \"','')::timestamp\")}},\n            {{dbt_utils.current_timestamp()}}\n          ) as stop_timestamp\n      from \"{{target_schema}}\".\"{{target_table}}\"\n    )\n\n    select\n      start_timestamp,\n      stop_timestamp,\n      {{dbt_utils.datediff('start_timestamp',\n                           'stop_timestamp',\n                           period)}}  + 1 as num_periods\n    from data\n  {%- endcall %}\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.statement", "macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp", "macro.dbt_utils.datediff"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_period_sql": {"unique_id": "macro.dbt_utils.get_period_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "get_period_sql", "macro_sql": "{% macro get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n    {{ return(adapter.dispatch('get_period_sql', 'dbt_utils')(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_period_sql"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_period_sql": {"unique_id": "macro.dbt_utils.default__get_period_sql", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "default__get_period_sql", "macro_sql": "{% macro default__get_period_sql(target_cols_csv, sql, timestamp_field, period, start_timestamp, stop_timestamp, offset) -%}\n\n  {%- set period_filter -%}\n    (\"{{timestamp_field}}\" >  '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' and\n     \"{{timestamp_field}}\" <= '{{start_timestamp}}'::timestamp + interval '{{offset}} {{period}}' + interval '1 {{period}}' and\n     \"{{timestamp_field}}\" <  '{{stop_timestamp}}'::timestamp)\n  {%- endset -%}\n\n  {%- set filtered_sql = sql | replace(\"__PERIOD_FILTER__\", period_filter) -%}\n\n  select\n    {{target_cols_csv}}\n  from (\n    {{filtered_sql}}\n  )\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.materialization_insert_by_period_default": {"unique_id": "macro.dbt_utils.materialization_insert_by_period_default", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/materializations/insert_by_period_materialization.sql", "original_file_path": "macros/materializations/insert_by_period_materialization.sql", "name": "materialization_insert_by_period_default", "macro_sql": "{% materialization insert_by_period, default -%}\n  {%- set timestamp_field = config.require('timestamp_field') -%}\n  {%- set start_date = config.require('start_date') -%}\n  {%- set stop_date = config.get('stop_date') or '' -%}}\n  {%- set period = config.get('period') or 'week' -%}\n\n  {%- if sql.find('__PERIOD_FILTER__') == -1 -%}\n    {%- set error_message -%}\n      Model '{{ model.unique_id }}' does not include the required string '__PERIOD_FILTER__' in its sql\n    {%- endset -%}\n    {{ exceptions.raise_compiler_error(error_message) }}\n  {%- endif -%}\n\n  {%- set identifier = model['name'] -%}\n\n  {%- set old_relation = adapter.get_relation(database=database, schema=schema, identifier=identifier) -%}\n  {%- set target_relation = api.Relation.create(identifier=identifier, schema=schema, type='table') -%}\n\n  {%- set non_destructive_mode = (flags.NON_DESTRUCTIVE == True) -%}\n  {%- set full_refresh_mode = (flags.FULL_REFRESH == True) -%}\n\n  {%- set exists_as_table = (old_relation is not none and old_relation.is_table) -%}\n  {%- set exists_not_as_table = (old_relation is not none and not old_relation.is_table) -%}\n\n  {%- set should_truncate = (non_destructive_mode and full_refresh_mode and exists_as_table) -%}\n  {%- set should_drop = (not should_truncate and (full_refresh_mode or exists_not_as_table)) -%}\n  {%- set force_create = (flags.FULL_REFRESH and not flags.NON_DESTRUCTIVE) -%}\n\n  -- setup\n  {% if old_relation is none -%}\n    -- noop\n  {%- elif should_truncate -%}\n    {{adapter.truncate_relation(old_relation)}}\n  {%- elif should_drop -%}\n    {{adapter.drop_relation(old_relation)}}\n    {%- set old_relation = none -%}\n  {%- endif %}\n\n  {{run_hooks(pre_hooks, inside_transaction=False)}}\n\n  -- `begin` happens here, so `commit` after it to finish the transaction\n  {{run_hooks(pre_hooks, inside_transaction=True)}}\n  {% call statement() -%}\n    begin; -- make extra sure we've closed out the transaction\n    commit;\n  {%- endcall %}\n\n  -- build model\n  {% if force_create or old_relation is none -%}\n    {# Create an empty target table -#}\n    {% call statement('main') -%}\n      {%- set empty_sql = sql | replace(\"__PERIOD_FILTER__\", 'false') -%}\n      {{create_table_as(False, target_relation, empty_sql)}};\n    {%- endcall %}\n  {%- endif %}\n\n  {% set _ = dbt_utils.get_period_boundaries(schema,\n                                              identifier,\n                                              timestamp_field,\n                                              start_date,\n                                              stop_date,\n                                              period) %}\n  {%- set start_timestamp = load_result('period_boundaries')['data'][0][0] | string -%}\n  {%- set stop_timestamp = load_result('period_boundaries')['data'][0][1] | string -%}\n  {%- set num_periods = load_result('period_boundaries')['data'][0][2] | int -%}\n\n  {% set target_columns = adapter.get_columns_in_relation(target_relation) %}\n  {%- set target_cols_csv = target_columns | map(attribute='quoted') | join(', ') -%}\n  {%- set loop_vars = {'sum_rows_inserted': 0} -%}\n\n  -- commit each period as a separate transaction\n  {% for i in range(num_periods) -%}\n    {%- set msg = \"Running for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) -%}\n    {{ dbt_utils.log_info(msg) }}\n\n    {%- set tmp_identifier = model['name'] ~ '__dbt_incremental_period' ~ i ~ '_tmp' -%}\n    {%- set tmp_relation = api.Relation.create(identifier=tmp_identifier,\n                                               schema=schema, type='table') -%}\n    {% call statement() -%}\n      {% set tmp_table_sql = dbt_utils.get_period_sql(target_cols_csv,\n                                                       sql,\n                                                       timestamp_field,\n                                                       period,\n                                                       start_timestamp,\n                                                       stop_timestamp,\n                                                       i) %}\n      {{dbt.create_table_as(True, tmp_relation, tmp_table_sql)}}\n    {%- endcall %}\n\n    {{adapter.expand_target_column_types(from_relation=tmp_relation,\n                                         to_relation=target_relation)}}\n    {%- set name = 'main-' ~ i -%}\n    {% call statement(name, fetch_result=True) -%}\n      insert into {{target_relation}} ({{target_cols_csv}})\n      (\n          select\n              {{target_cols_csv}}\n          from {{tmp_relation.include(schema=False)}}\n      );\n    {%- endcall %}\n    {% set result = load_result('main-' ~ i) %}\n    {% if 'response' in result.keys() %} {# added in v0.19.0 #}\n        {% set rows_inserted = result['response']['rows_affected'] %}\n    {% else %} {# older versions #}\n        {% set rows_inserted = result['status'].split(\" \")[2] | int %}\n    {% endif %}\n    \n    {%- set sum_rows_inserted = loop_vars['sum_rows_inserted'] + rows_inserted -%}\n    {%- if loop_vars.update({'sum_rows_inserted': sum_rows_inserted}) %} {% endif -%}\n\n    {%- set msg = \"Ran for \" ~ period ~ \" \" ~ (i + 1) ~ \" of \" ~ (num_periods) ~ \"; \" ~ rows_inserted ~ \" records inserted\" -%}\n    {{ dbt_utils.log_info(msg) }}\n\n  {%- endfor %}\n\n  {% call statement() -%}\n    begin;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=True)}}\n\n  {% call statement() -%}\n    commit;\n  {%- endcall %}\n\n  {{run_hooks(post_hooks, inside_transaction=False)}}\n\n  {%- set status_string = \"INSERT \" ~ loop_vars['sum_rows_inserted'] -%}\n\n  {% call noop_statement('main', status_string) -%}\n    -- no-op\n  {%- endcall %}\n\n  -- Return the relations created in this materialization\n  {{ return({'relations': [target_relation]}) }}  \n\n{%- endmaterialization %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.run_hooks", "macro.dbt.statement", "macro.dbt.create_table_as", "macro.dbt_utils.get_period_boundaries", "macro.dbt_utils.log_info", "macro.dbt_utils.get_period_sql", "macro.dbt.noop_statement"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.pretty_log_format": {"unique_id": "macro.dbt_utils.pretty_log_format", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "pretty_log_format", "macro_sql": "{% macro pretty_log_format(message) %}\n    {{ return(adapter.dispatch('pretty_log_format', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__pretty_log_format": {"unique_id": "macro.dbt_utils.default__pretty_log_format", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/pretty_log_format.sql", "original_file_path": "macros/jinja_helpers/pretty_log_format.sql", "name": "default__pretty_log_format", "macro_sql": "{% macro default__pretty_log_format(message) %}\n    {{ return( dbt_utils.pretty_time() ~ ' + ' ~ message) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.log_info": {"unique_id": "macro.dbt_utils.log_info", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "log_info", "macro_sql": "{% macro log_info(message) %}\n    {{ return(adapter.dispatch('log_info', 'dbt_utils')(message)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__log_info"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__log_info": {"unique_id": "macro.dbt_utils.default__log_info", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/log_info.sql", "original_file_path": "macros/jinja_helpers/log_info.sql", "name": "default__log_info", "macro_sql": "{% macro default__log_info(message) %}\n    {{ log(dbt_utils.pretty_log_format(message), info=True) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.pretty_log_format"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.slugify": {"unique_id": "macro.dbt_utils.slugify", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/slugify.sql", "original_file_path": "macros/jinja_helpers/slugify.sql", "name": "slugify", "macro_sql": "{% macro slugify(string) %}\n\n{#- Lower case the string -#}\n{% set string = string | lower %}\n{#- Replace spaces and dashes with underscores -#}\n{% set string = modules.re.sub('[ -]+', '_', string) %}\n{#- Only take letters, numbers, and underscores -#}\n{% set string = modules.re.sub('[^a-z0-9_]+', '', string) %}\n\n{{ return(string) }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.pretty_time": {"unique_id": "macro.dbt_utils.pretty_time", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "pretty_time", "macro_sql": "{% macro pretty_time(format='%H:%M:%S') %}\n    {{ return(adapter.dispatch('pretty_time', 'dbt_utils')(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__pretty_time"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__pretty_time": {"unique_id": "macro.dbt_utils.default__pretty_time", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/jinja_helpers/pretty_time.sql", "original_file_path": "macros/jinja_helpers/pretty_time.sql", "name": "default__pretty_time", "macro_sql": "{% macro default__pretty_time(format='%H:%M:%S') %}\n    {{ return(modules.datetime.datetime.now().strftime(format)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_not_constant": {"unique_id": "macro.dbt_utils.test_not_constant", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/not_constant.sql", "original_file_path": "macros/schema_tests/not_constant.sql", "name": "test_not_constant", "macro_sql": "{% test not_constant(model, column_name) %}\n  {{ return(adapter.dispatch('test_not_constant', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_constant"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_not_constant": {"unique_id": "macro.dbt_utils.default__test_not_constant", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/not_constant.sql", "original_file_path": "macros/schema_tests/not_constant.sql", "name": "default__test_not_constant", "macro_sql": "{% macro default__test_not_constant(model, column_name) %}\n\n\nselect\n    {# In TSQL, subquery aggregate columns need aliases #}\n    {# thus: a filler col name, 'filler_column' #}\n    count(distinct {{ column_name }}) as filler_column\n\nfrom {{ model }}\n\nhaving count(distinct {{ column_name }}) = 1\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_fewer_rows_than": {"unique_id": "macro.dbt_utils.test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/fewer_rows_than.sql", "original_file_path": "macros/schema_tests/fewer_rows_than.sql", "name": "test_fewer_rows_than", "macro_sql": "{% test fewer_rows_than(model, compare_model) %}\n  {{ return(adapter.dispatch('test_fewer_rows_than', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_fewer_rows_than"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_fewer_rows_than": {"unique_id": "macro.dbt_utils.default__test_fewer_rows_than", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/fewer_rows_than.sql", "original_file_path": "macros/schema_tests/fewer_rows_than.sql", "name": "default__test_fewer_rows_than", "macro_sql": "{% macro default__test_fewer_rows_than(model, compare_model) %}\n\n{{ config(fail_calc = 'coalesce(row_count_delta, 0)') }}\n\nwith a as (\n\n    select count(*) as count_our_model from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_comparison_model from {{ compare_model }}\n\n),\ncounts as (\n\n    select\n        count_our_model,\n        count_comparison_model\n    from a\n    cross join b\n\n),\nfinal as (\n\n    select *,\n        case\n            -- fail the test if we have more rows than the reference model and return the row count delta\n            when count_our_model > count_comparison_model then (count_our_model - count_comparison_model)\n            -- fail the test if they are the same number\n            when count_our_model = count_comparison_model then 1\n            -- pass the test if the delta is positive (i.e. return the number 0)\n            else 0\n    end as row_count_delta\n    from counts\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_sequential_values": {"unique_id": "macro.dbt_utils.test_sequential_values", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/sequential_values.sql", "original_file_path": "macros/schema_tests/sequential_values.sql", "name": "test_sequential_values", "macro_sql": "{% test sequential_values(model, column_name, interval=1, datepart=None) %}\n\n  {{ return(adapter.dispatch('test_sequential_values', 'dbt_utils')(model, column_name, interval, datepart)) }}\n\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_sequential_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_sequential_values": {"unique_id": "macro.dbt_utils.default__test_sequential_values", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/sequential_values.sql", "original_file_path": "macros/schema_tests/sequential_values.sql", "name": "default__test_sequential_values", "macro_sql": "{% macro default__test_sequential_values(model, column_name, interval=1, datepart=None) %}\n\nwith windowed as (\n\n    select\n        {{ column_name }},\n        lag({{ column_name }}) over (\n            order by {{ column_name }}\n        ) as previous_{{ column_name }}\n    from {{ model }}\n),\n\nvalidation_errors as (\n    select\n        *\n    from windowed\n    {% if datepart %}\n    where not(cast({{ column_name }} as {{ dbt_utils.type_timestamp() }})= cast({{ dbt_utils.dateadd(datepart, interval, 'previous_' + column_name) }} as {{ dbt_utils.type_timestamp() }}))\n    {% else %}\n    where not({{ column_name }} = previous_{{ column_name }} + {{ interval }})\n    {% endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.type_timestamp", "macro.dbt_utils.dateadd"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_not_accepted_values": {"unique_id": "macro.dbt_utils.test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/not_accepted_values.sql", "original_file_path": "macros/schema_tests/not_accepted_values.sql", "name": "test_not_accepted_values", "macro_sql": "{% test not_accepted_values(model, column_name, values, quote=True) %}\n  {{ return(adapter.dispatch('test_not_accepted_values', 'dbt_utils')(model, column_name, values, quote)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_accepted_values"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_not_accepted_values": {"unique_id": "macro.dbt_utils.default__test_not_accepted_values", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/not_accepted_values.sql", "original_file_path": "macros/schema_tests/not_accepted_values.sql", "name": "default__test_not_accepted_values", "macro_sql": "{% macro default__test_not_accepted_values(model, column_name, values, quote=True) %}\nwith all_values as (\n\n    select distinct\n        {{ column_name }} as value_field\n\n    from {{ model }}\n\n),\n\nvalidation_errors as (\n\n    select\n        value_field\n\n    from all_values\n    where value_field in (\n        {% for value in values -%}\n            {% if quote -%}\n            '{{ value }}'\n            {%- else -%}\n            {{ value }}\n            {%- endif -%}\n            {%- if not loop.last -%},{%- endif %}\n        {%- endfor %}\n        )\n\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_unique_where": {"unique_id": "macro.dbt_utils.test_unique_where", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/test_unique_where.sql", "original_file_path": "macros/schema_tests/test_unique_where.sql", "name": "test_unique_where", "macro_sql": "{% test unique_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.unique_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `unique` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_unique_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_unique_where": {"unique_id": "macro.dbt_utils.default__test_unique_where", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/test_unique_where.sql", "original_file_path": "macros/schema_tests/test_unique_where.sql", "name": "default__test_unique_where", "macro_sql": "{% macro default__test_unique_where(model, column_name) %}\r\n  {{ return(test_unique(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_unique"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_relationships_where": {"unique_id": "macro.dbt_utils.test_relationships_where", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/relationships_where.sql", "original_file_path": "macros/schema_tests/relationships_where.sql", "name": "test_relationships_where", "macro_sql": "{% test relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n  {{ return(adapter.dispatch('test_relationships_where', 'dbt_utils')(model, column_name, to, field, from_condition, to_condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_relationships_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_relationships_where": {"unique_id": "macro.dbt_utils.default__test_relationships_where", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/relationships_where.sql", "original_file_path": "macros/schema_tests/relationships_where.sql", "name": "default__test_relationships_where", "macro_sql": "{% macro default__test_relationships_where(model, column_name, to, field, from_condition=\"1=1\", to_condition=\"1=1\") %}\n\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n\nwith left_table as (\n\n  select\n    {{column_name}} as id\n\n  from {{model}}\n\n  where {{column_name}} is not null\n    and {{from_condition}}\n\n),\n\nright_table as (\n\n  select\n    {{field}} as id\n\n  from {{to}}\n\n  where {{field}} is not null\n    and {{to_condition}}\n\n),\n\nexceptions as (\n\n  select\n    left_table.id,\n    right_table.id as right_id\n\n  from left_table\n\n  left join right_table\n         on left_table.id = right_table.id\n\n  where right_table.id is null\n\n)\n\nselect * from exceptions\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_equality": {"unique_id": "macro.dbt_utils.test_equality", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "test_equality", "macro_sql": "{% test equality(model, compare_model, compare_columns=None) %}\n  {{ return(adapter.dispatch('test_equality', 'dbt_utils')(model, compare_model, compare_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_equality": {"unique_id": "macro.dbt_utils.default__test_equality", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/equality.sql", "original_file_path": "macros/schema_tests/equality.sql", "name": "default__test_equality", "macro_sql": "{% macro default__test_equality(model, compare_model, compare_columns=None) %}\n\n{% set set_diff %}\n    count(*) + coalesce(abs(\n        sum(case when which_diff = 'a_minus_b' then 1 else 0 end) -\n        sum(case when which_diff = 'b_minus_a' then 1 else 0 end)\n    ), 0)\n{% endset %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = set_diff) }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\n-- setup\n{%- do dbt_utils._is_relation(model, 'test_equality') -%}\n\n{#-\nIf the compare_cols arg is provided, we can run this test without querying the\ninformation schema\u00a0\u2014 this allows the model to be an ephemeral model\n-#}\n\n{%- if not compare_columns -%}\n    {%- do dbt_utils._is_ephemeral(model, 'test_equality') -%}\n    {%- set compare_columns = adapter.get_columns_in_relation(model) | map(attribute='quoted') -%}\n{%- endif -%}\n\n{% set compare_cols_csv = compare_columns | join(', ') %}\n\nwith a as (\n\n    select * from {{ model }}\n\n),\n\nb as (\n\n    select * from {{ compare_model }}\n\n),\n\na_minus_b as (\n\n    select {{compare_cols_csv}} from a\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from b\n\n),\n\nb_minus_a as (\n\n    select {{compare_cols_csv}} from b\n    {{ dbt_utils.except() }}\n    select {{compare_cols_csv}} from a\n\n),\n\nunioned as (\n\n    select 'a_minus_b' as which_diff, * from a_minus_b\n    union all\n    select 'b_minus_a' as which_diff, * from b_minus_a\n\n)\n\nselect * from unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils._is_relation", "macro.dbt_utils._is_ephemeral", "macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_at_least_one": {"unique_id": "macro.dbt_utils.test_at_least_one", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/at_least_one.sql", "original_file_path": "macros/schema_tests/at_least_one.sql", "name": "test_at_least_one", "macro_sql": "{% test at_least_one(model, column_name) %}\n  {{ return(adapter.dispatch('test_at_least_one', 'dbt_utils')(model, column_name)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_at_least_one"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_at_least_one": {"unique_id": "macro.dbt_utils.default__test_at_least_one", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/at_least_one.sql", "original_file_path": "macros/schema_tests/at_least_one.sql", "name": "default__test_at_least_one", "macro_sql": "{% macro default__test_at_least_one(model, column_name) %}\n\nselect *\nfrom (\n    select\n        {# In TSQL, subquery aggregate columns need aliases #}\n        {# thus: a filler col name, 'filler_column' #}\n      count({{ column_name }}) as filler_column\n\n    from {{ model }}\n\n    having count({{ column_name }}) = 0\n\n) validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_equal_rowcount": {"unique_id": "macro.dbt_utils.test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "test_equal_rowcount", "macro_sql": "{% test equal_rowcount(model, compare_model) %}\n  {{ return(adapter.dispatch('test_equal_rowcount', 'dbt_utils')(model, compare_model)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_equal_rowcount"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_equal_rowcount": {"unique_id": "macro.dbt_utils.default__test_equal_rowcount", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/equal_rowcount.sql", "original_file_path": "macros/schema_tests/equal_rowcount.sql", "name": "default__test_equal_rowcount", "macro_sql": "{% macro default__test_equal_rowcount(model, compare_model) %}\n\n{#-- Needs to be set at parse time, before we return '' below --#}\n{{ config(fail_calc = 'coalesce(diff_count, 0)') }}\n\n{#-- Prevent querying of db in parsing mode. This works because this macro does not create any new refs. #}\n{%- if not execute -%}\n    {{ return('') }}\n{% endif %}\n\nwith a as (\n\n    select count(*) as count_a from {{ model }}\n\n),\nb as (\n\n    select count(*) as count_b from {{ compare_model }}\n\n),\nfinal as (\n\n    select\n        count_a,\n        count_b,\n        abs(count_a - count_b) as diff_count\n    from a\n    cross join b\n\n)\n\nselect * from final\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_expression_is_true": {"unique_id": "macro.dbt_utils.test_expression_is_true", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/expression_is_true.sql", "original_file_path": "macros/schema_tests/expression_is_true.sql", "name": "test_expression_is_true", "macro_sql": "{% test expression_is_true(model, expression, column_name=None, condition='1=1') %}\n{# T-SQL has no boolean data type so we use 1=1 which returns TRUE #}\n{# ref https://stackoverflow.com/a/7170753/3842610 #}\n  {{ return(adapter.dispatch('test_expression_is_true', 'dbt_utils')(model, expression, column_name, condition)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_expression_is_true"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_expression_is_true": {"unique_id": "macro.dbt_utils.default__test_expression_is_true", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/expression_is_true.sql", "original_file_path": "macros/schema_tests/expression_is_true.sql", "name": "default__test_expression_is_true", "macro_sql": "{% macro default__test_expression_is_true(model, expression, column_name, condition) %}\n\nwith meet_condition as (\n    select * from {{ model }} where {{ condition }}\n)\n\nselect\n    *\nfrom meet_condition\n{% if column_name is none %}\nwhere not({{ expression }})\n{%- else %}\nwhere not({{ column_name }} {{ expression }})\n{%- endif %}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_cardinality_equality": {"unique_id": "macro.dbt_utils.test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/cardinality_equality.sql", "original_file_path": "macros/schema_tests/cardinality_equality.sql", "name": "test_cardinality_equality", "macro_sql": "{% test cardinality_equality(model, column_name, to, field) %}\n    {{ return(adapter.dispatch('test_cardinality_equality', 'dbt_utils')(model, column_name, to, field)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_cardinality_equality"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_cardinality_equality": {"unique_id": "macro.dbt_utils.default__test_cardinality_equality", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/cardinality_equality.sql", "original_file_path": "macros/schema_tests/cardinality_equality.sql", "name": "default__test_cardinality_equality", "macro_sql": "{% macro default__test_cardinality_equality(model, column_name, to, field) %}\n\n{# T-SQL does not let you use numbers as aliases for columns #}\n{# Thus, no \"GROUP BY 1\" #}\n\nwith table_a as (\nselect\n  {{ column_name }},\n  count(*) as num_rows\nfrom {{ model }}\ngroup by {{ column_name }}\n),\n\ntable_b as (\nselect\n  {{ field }},\n  count(*) as num_rows\nfrom {{ to }}\ngroup by {{ field }}\n),\n\nexcept_a as (\n  select *\n  from table_a\n  {{ dbt_utils.except() }}\n  select *\n  from table_b\n),\n\nexcept_b as (\n  select *\n  from table_b\n  {{ dbt_utils.except() }}\n  select *\n  from table_a\n),\n\nunioned as (\n  select *\n  from except_a\n  union all\n  select *\n  from except_b\n)\n\nselect *\nfrom unioned\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.except"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_not_null_proportion": {"unique_id": "macro.dbt_utils.test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/not_null_proportion.sql", "original_file_path": "macros/schema_tests/not_null_proportion.sql", "name": "test_not_null_proportion", "macro_sql": "{% macro test_not_null_proportion(model) %}\n  {{ return(adapter.dispatch('test_not_null_proportion', 'dbt_utils')(model, **kwargs)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_proportion"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_not_null_proportion": {"unique_id": "macro.dbt_utils.default__test_not_null_proportion", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/not_null_proportion.sql", "original_file_path": "macros/schema_tests/not_null_proportion.sql", "name": "default__test_not_null_proportion", "macro_sql": "{% macro default__test_not_null_proportion(model) %}\n\n{% set column_name = kwargs.get('column_name', kwargs.get('arg')) %}\n{% set at_least = kwargs.get('at_least', kwargs.get('arg')) %}\n{% set at_most = kwargs.get('at_most', kwargs.get('arg', 1)) %}\n\nwith validation as (\n  select\n    sum(case when {{ column_name }} is null then 0 else 1 end) / cast(count(*) as numeric) as not_null_proportion\n  from {{ model }}\n),\nvalidation_errors as (\n  select\n    not_null_proportion\n  from validation\n  where not_null_proportion < {{ at_least }} or not_null_proportion > {{ at_most }}\n)\nselect\n  *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_not_null_where": {"unique_id": "macro.dbt_utils.test_not_null_where", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/test_not_null_where.sql", "original_file_path": "macros/schema_tests/test_not_null_where.sql", "name": "test_not_null_where", "macro_sql": "{% test not_null_where(model, column_name) %}\r\n  {%- set deprecation_warning = '\r\n    Warning: `dbt_utils.not_null_where` is no longer supported.\r\n    Starting in dbt v0.20.0, the built-in `not_null` test supports a `where` config.\r\n    ' -%}\r\n  {%- do exceptions.warn(deprecation_warning) -%}\r\n  {{ return(adapter.dispatch('test_not_null_where', 'dbt_utils')(model, column_name)) }}\r\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_not_null_where"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_not_null_where": {"unique_id": "macro.dbt_utils.default__test_not_null_where", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/test_not_null_where.sql", "original_file_path": "macros/schema_tests/test_not_null_where.sql", "name": "default__test_not_null_where", "macro_sql": "{% macro default__test_not_null_where(model, column_name) %}\r\n  {{ return(test_not_null(model, column_name)) }}\r\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt.test_not_null"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/schema_tests/mutually_exclusive_ranges.sql", "name": "test_mutually_exclusive_ranges", "macro_sql": "{% test mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n  {{ return(adapter.dispatch('test_mutually_exclusive_ranges', 'dbt_utils')(model, lower_bound_column, upper_bound_column, partition_by, gaps, zero_length_range_allowed)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_mutually_exclusive_ranges"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_mutually_exclusive_ranges": {"unique_id": "macro.dbt_utils.default__test_mutually_exclusive_ranges", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/mutually_exclusive_ranges.sql", "original_file_path": "macros/schema_tests/mutually_exclusive_ranges.sql", "name": "default__test_mutually_exclusive_ranges", "macro_sql": "{% macro default__test_mutually_exclusive_ranges(model, lower_bound_column, upper_bound_column, partition_by=None, gaps='allowed', zero_length_range_allowed=False) %}\n{% if gaps == 'not_allowed' %}\n    {% set allow_gaps_operator='=' %}\n    {% set allow_gaps_operator_in_words='equal_to' %}\n{% elif gaps == 'allowed' %}\n    {% set allow_gaps_operator='<=' %}\n    {% set allow_gaps_operator_in_words='less_than_or_equal_to' %}\n{% elif gaps == 'required' %}\n    {% set allow_gaps_operator='<' %}\n    {% set allow_gaps_operator_in_words='less_than' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`gaps` argument for mutually_exclusive_ranges test must be one of ['not_allowed', 'allowed', 'required'] Got: '\" ~ gaps ~\"'.'\"\n    ) }}\n{% endif %}\n{% if not zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<' %}\n    {% set allow_zero_length_operator_in_words='less_than' %}\n{% elif zero_length_range_allowed %}\n    {% set allow_zero_length_operator='<=' %}\n    {% set allow_zero_length_operator_in_words='less_than_or_equal_to' %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`zero_length_range_allowed` argument for mutually_exclusive_ranges test must be one of [true, false] Got: '\" ~ zero_length_range_allowed ~\"'.'\"\n    ) }}\n{% endif %}\n\n{% set partition_clause=\"partition by \" ~ partition_by if partition_by else '' %}\n\nwith window_functions as (\n\n    select\n        {% if partition_by %}\n        {{ partition_by }},\n        {% endif %}\n        {{ lower_bound_column }} as lower_bound,\n        {{ upper_bound_column }} as upper_bound,\n\n        lead({{ lower_bound_column }}) over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }}\n        ) as next_lower_bound,\n\n        row_number() over (\n            {{ partition_clause }}\n            order by {{ lower_bound_column }} desc\n        ) = 1 as is_last_record\n\n    from {{ model }}\n\n),\n\ncalc as (\n    -- We want to return records where one of our assumptions fails, so we'll use\n    -- the `not` function with `and` statements so we can write our assumptions nore cleanly\n    select\n        *,\n\n        -- For each record: lower_bound should be < upper_bound.\n        -- Coalesce it to return an error on the null case (implicit assumption\n        -- these columns are not_null)\n        coalesce(\n            lower_bound {{ allow_zero_length_operator }} upper_bound,\n            false\n        ) as lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound,\n\n        -- For each record: upper_bound {{ allow_gaps_operator }} the next lower_bound.\n        -- Coalesce it to handle null cases for the last record.\n        coalesce(\n            upper_bound {{ allow_gaps_operator }} next_lower_bound,\n            is_last_record,\n            false\n        ) as upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n\n    from window_functions\n\n),\n\nvalidation_errors as (\n\n    select\n        *\n    from calc\n\n    where not(\n        -- THE FOLLOWING SHOULD BE TRUE --\n        lower_bound_{{ allow_zero_length_operator_in_words }}_upper_bound\n        and upper_bound_{{ allow_gaps_operator_in_words }}_next_lower_bound\n    )\n)\n\nselect * from validation_errors\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/unique_combination_of_columns.sql", "original_file_path": "macros/schema_tests/unique_combination_of_columns.sql", "name": "test_unique_combination_of_columns", "macro_sql": "{% test unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n  {{ return(adapter.dispatch('test_unique_combination_of_columns', 'dbt_utils')(model, combination_of_columns, quote_columns)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_unique_combination_of_columns"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_unique_combination_of_columns": {"unique_id": "macro.dbt_utils.default__test_unique_combination_of_columns", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/unique_combination_of_columns.sql", "original_file_path": "macros/schema_tests/unique_combination_of_columns.sql", "name": "default__test_unique_combination_of_columns", "macro_sql": "{% macro default__test_unique_combination_of_columns(model, combination_of_columns, quote_columns=false) %}\n\n{% if not quote_columns %}\n    {%- set column_list=combination_of_columns %}\n{% elif quote_columns %}\n    {%- set column_list=[] %}\n        {% for column in combination_of_columns -%}\n            {% set column_list = column_list.append( adapter.quote(column) ) %}\n        {%- endfor %}\n{% else %}\n    {{ exceptions.raise_compiler_error(\n        \"`quote_columns` argument for unique_combination_of_columns test must be one of [True, False] Got: '\" ~ quote ~\"'.'\"\n    ) }}\n{% endif %}\n\n{%- set columns_csv=column_list | join(', ') %}\n\n\nwith validation_errors as (\n\n    select\n        {{ columns_csv }}\n    from {{ model }}\n    group by {{ columns_csv }}\n    having count(*) > 1\n\n)\n\nselect *\nfrom validation_errors\n\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_recency": {"unique_id": "macro.dbt_utils.test_recency", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/recency.sql", "original_file_path": "macros/schema_tests/recency.sql", "name": "test_recency", "macro_sql": "{% test recency(model, field, datepart, interval) %}\n  {{ return(adapter.dispatch('test_recency', 'dbt_utils')(model, field, datepart, interval)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_recency"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_recency": {"unique_id": "macro.dbt_utils.default__test_recency", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/recency.sql", "original_file_path": "macros/schema_tests/recency.sql", "name": "default__test_recency", "macro_sql": "{% macro default__test_recency(model, field, datepart, interval) %}\n\n{% set threshold = dbt_utils.dateadd(datepart, interval * -1, dbt_utils.current_timestamp()) %}\n\nwith recency as (\n\n    select max({{field}}) as most_recent\n    from {{ model }}\n\n)\n\nselect\n\n    most_recent,\n    {{ threshold }} as threshold\n\nfrom recency\nwhere most_recent < {{ threshold }}\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.dateadd", "macro.dbt_utils.current_timestamp"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.test_accepted_range": {"unique_id": "macro.dbt_utils.test_accepted_range", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/accepted_range.sql", "original_file_path": "macros/schema_tests/accepted_range.sql", "name": "test_accepted_range", "macro_sql": "{% test accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n  {{ return(adapter.dispatch('test_accepted_range', 'dbt_utils')(model, column_name, min_value, max_value, inclusive)) }}\n{% endtest %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__test_accepted_range"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__test_accepted_range": {"unique_id": "macro.dbt_utils.default__test_accepted_range", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/schema_tests/accepted_range.sql", "original_file_path": "macros/schema_tests/accepted_range.sql", "name": "default__test_accepted_range", "macro_sql": "{% macro default__test_accepted_range(model, column_name, min_value=none, max_value=none, inclusive=true) %}\n\nwith meet_condition as(\n  select *\n  from {{ model }}\n),\n\nvalidation_errors as (\n  select *\n  from meet_condition\n  where\n    -- never true, defaults to an empty result set. Exists to ensure any combo of the `or` clauses below succeeds\n    1 = 2\n\n  {%- if min_value is not none %}\n    -- records with a value >= min_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} > {{- \"=\" if inclusive }} {{ min_value }}\n  {%- endif %}\n\n  {%- if max_value is not none %}\n    -- records with a value <= max_value are permitted. The `not` flips this to find records that don't meet the rule.\n    or not {{ column_name }} < {{- \"=\" if inclusive }} {{ max_value }}\n  {%- endif %}\n)\n\nselect *\nfrom validation_errors\n\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": []}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_url_host": {"unique_id": "macro.dbt_utils.get_url_host", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "get_url_host", "macro_sql": "{% macro get_url_host(field) -%}\n    {{ return(adapter.dispatch('get_url_host', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_host"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_url_host": {"unique_id": "macro.dbt_utils.default__get_url_host", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/web/get_url_host.sql", "original_file_path": "macros/web/get_url_host.sql", "name": "default__get_url_host", "macro_sql": "{% macro default__get_url_host(field) -%}\n\n{%- set parsed = \n    dbt_utils.split_part(\n        dbt_utils.split_part(\n            dbt_utils.replace(\n                dbt_utils.replace(field, \"'http://'\", \"''\"\n                ), \"'https://'\", \"''\"\n            ), \"'/'\", 1\n        ), \"'?'\", 1\n    )\n    \n-%}\n\n     \n    {{ dbt_utils.safe_cast(\n        parsed,\n        dbt_utils.type_string()\n        )}}\n        \n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part", "macro.dbt_utils.replace", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_url_parameter": {"unique_id": "macro.dbt_utils.get_url_parameter", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "get_url_parameter", "macro_sql": "{% macro get_url_parameter(field, url_parameter) -%}\n    {{ return(adapter.dispatch('get_url_parameter', 'dbt_utils')(field, url_parameter)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_parameter"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_url_parameter": {"unique_id": "macro.dbt_utils.default__get_url_parameter", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/web/get_url_parameter.sql", "original_file_path": "macros/web/get_url_parameter.sql", "name": "default__get_url_parameter", "macro_sql": "{% macro default__get_url_parameter(field, url_parameter) -%}\n\n{%- set formatted_url_parameter = \"'\" + url_parameter + \"='\" -%}\n\n{%- set split = dbt_utils.split_part(dbt_utils.split_part(field, formatted_url_parameter, 2), \"'&'\", 1) -%}\n\nnullif({{ split }},'')\n\n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.split_part"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.get_url_path": {"unique_id": "macro.dbt_utils.get_url_path", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "get_url_path", "macro_sql": "{% macro get_url_path(field) -%}\n    {{ return(adapter.dispatch('get_url_path', 'dbt_utils')(field)) }}\n{% endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.default__get_url_path"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}, "macro.dbt_utils.default__get_url_path": {"unique_id": "macro.dbt_utils.default__get_url_path", "package_name": "dbt_utils", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model/dbt_modules/dbt_utils", "path": "macros/web/get_url_path.sql", "original_file_path": "macros/web/get_url_path.sql", "name": "default__get_url_path", "macro_sql": "{% macro default__get_url_path(field) -%}\n\n    {%- set stripped_url = \n        dbt_utils.replace(\n            dbt_utils.replace(field, \"'http://'\", \"''\"), \"'https://'\", \"''\")\n    -%}\n\n    {%- set first_slash_pos -%}\n        coalesce(\n            nullif({{dbt_utils.position(\"'/'\", stripped_url)}}, 0),\n            {{dbt_utils.position(\"'?'\", stripped_url)}} - 1\n            )\n    {%- endset -%}\n\n    {%- set parsed_path =\n        dbt_utils.split_part(\n            dbt_utils.right(\n                stripped_url, \n                dbt_utils.length(stripped_url) ~ \"-\" ~ first_slash_pos\n                ), \n            \"'?'\", 1\n            )\n    -%}\n\n    {{ dbt_utils.safe_cast(\n        parsed_path,\n        dbt_utils.type_string()\n    )}}\n    \n{%- endmacro %}", "resource_type": "macro", "tags": [], "depends_on": {"macros": ["macro.dbt_utils.replace", "macro.dbt_utils.position", "macro.dbt_utils.split_part", "macro.dbt_utils.right", "macro.dbt_utils.length", "macro.dbt_utils.safe_cast", "macro.dbt_utils.type_string"]}, "description": "", "meta": {}, "docs": {"show": true}, "patch_path": null, "arguments": [], "created_at": 1637696437}}, "docs": {"cecoc.geologia_quito_raw_description": {"unique_id": "cecoc.geologia_quito_raw_description", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "long_descriptions.md", "original_file_path": "models/long_descriptions.md", "name": "geologia_quito_raw_description", "block_contents": "Par\u00e1metros geol\u00f3gicos recabados por las distintas tuneladoras empleadas en Quito. Concretamente, las llamadas Guaragua (Norte), Carolina (Sur-s) y Luz de Am\u00e9rica (Sur-n).\n\nDichos par\u00e1metros se toman por n\u00famero de anillo, pk y pareja de litolog\u00edas (principal-secundaria)."}, "cecoc.production_days_quito_raw_description": {"unique_id": "cecoc.production_days_quito_raw_description", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "long_descriptions.md", "original_file_path": "models/long_descriptions.md", "name": "production_days_quito_raw_description", "block_contents": "En esta tabla se recoge:\n\n- Informaci\u00f3n general sobre la producci\u00f3n de cada d\u00eda trabajado en el proyecto de Quito\n\n- Informaci\u00f3n general sobre el tramo excavado en el correspondiente d\u00eda"}, "cecoc.production_stops_quito_raw_description": {"unique_id": "cecoc.production_stops_quito_raw_description", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "long_descriptions.md", "original_file_path": "models/long_descriptions.md", "name": "production_stops_quito_raw_description", "block_contents": "Parte diario de producci\u00f3n de cada tuneladora empleada en el proyecto de Quito.\n\nEn esta tabla hay datos de:\n\n- Tiempo de producci\u00f3n por anillo\n\n- Tiempo de paradas por anillo\n\n- Longitud de avance por anillo\n\n- Peso del material extra\u00eddo por anillo\n\n- Inyecci\u00f3n de bicomponente por anillo\n\n- Par\u00e1metros de avance de tuneladora por anillo\n\n- Geolog\u00eda por anillo"}, "cecoc.dia_produccion_suelo_description": {"unique_id": "cecoc.dia_produccion_suelo_description", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "long_descriptions.md", "original_file_path": "models/long_descriptions.md", "name": "dia_produccion_suelo_description", "block_contents": "Parte diario de producci\u00f3n de cada tuneladora empleada en el proyecto de Quito.\n\nEn esta tabla hay datos de:\n\n- Tiempo de producci\u00f3n por anillo\n\n- Tiempo de paradas por anillo\n\n- Longitud de avance por anillo\n\n- Peso del material extra\u00eddo por anillo\n\n- Inyecci\u00f3n de bicomponente por anillo\n\n- Par\u00e1metros de avance de tuneladora por anillo\n\n- Geolog\u00eda por anillo"}, "cecoc.__overview__": {"unique_id": "cecoc.__overview__", "package_name": "cecoc", "root_path": "/home/rvalero/workspace/acciona/con_CECOC-CCT__PrototipoCCT/tunneling-bi/dbt-model", "path": "overview.md", "original_file_path": "models/overview.md", "name": "__overview__", "block_contents": "# CECOC MVP\nEste proyecto de dbt usa datos procedentes de distintas tuneladoras, incluyendo:\n\n- Par\u00e1metros geol\u00f3gicos\n  \n- Par\u00e1metros de avance\n\n- An\u00e1lisis de tiempos\n\n- Consumos medios\n\n- Informaci\u00f3n sobre paradas\n\nEl repositorio de dicho proyecto se encuentra [aqu\u00ed](https://gitlab.com/nextdigitalhub/acciona/acciona-construcciones/tunneling-bi)."}, "dbt.__overview__": {"unique_id": "dbt.__overview__", "package_name": "dbt", "root_path": "/home/rvalero/.local/share/virtualenvs/tunneling-bi-HR8LAlPF/lib/python3.9/site-packages/dbt/include/global_project", "path": "overview.md", "original_file_path": "docs/overview.md", "name": "__overview__", "block_contents": "### Welcome!\n\nWelcome to the auto-generated documentation for your dbt project!\n\n### Navigation\n\nYou can use the `Project` and `Database` navigation tabs on the left side of the window to explore the models\nin your project.\n\n#### Project Tab\nThe `Project` tab mirrors the directory structure of your dbt project. In this tab, you can see all of the\nmodels defined in your dbt project, as well as models imported from dbt packages.\n\n#### Database Tab\nThe `Database` tab also exposes your models, but in a format that looks more like a database explorer. This view\nshows relations (tables and views) grouped into database schemas. Note that ephemeral models are _not_ shown\nin this interface, as they do not exist in the database.\n\n### Graph Exploration\nYou can click the blue icon on the bottom-right corner of the page to view the lineage graph of your models.\n\nOn model pages, you'll see the immediate parents and children of the model you're exploring. By clicking the `Expand`\nbutton at the top-right of this lineage pane, you'll be able to see all of the models that are used to build,\nor are built from, the model you're exploring.\n\nOnce expanded, you'll be able to use the `--models` and `--exclude` model selection syntax to filter the\nmodels in the graph. For more information on model selection, check out the [dbt docs](https://docs.getdbt.com/docs/model-selection-syntax).\n\nNote that you can also right-click on models to interactively filter and explore the graph.\n\n---\n\n### More information\n\n- [What is dbt](https://docs.getdbt.com/docs/overview)?\n- Read the [dbt viewpoint](https://docs.getdbt.com/docs/viewpoint)\n- [Installation](https://docs.getdbt.com/docs/installation)\n- Join the [chat](https://community.getdbt.com/) on Slack for live questions and support."}}, "exposures": {}, "selectors": {}, "disabled": [], "parent_map": {"model.cecoc.tuneladora": ["source.cecoc.tuneladora.tuneladoras_metadata_raw"], "model.cecoc.geologia_suelo": ["source.cecoc.geologia.geologia_quito_raw"], "model.cecoc.litologia": ["source.cecoc.geologia.geologia_colores_raw"], "model.cecoc.geologia": ["model.cecoc.geologia_suelo"], "model.cecoc.sensor_roca_s980": [], "model.cecoc.sensor_diccionario": ["source.cecoc.sensor.dict_sensores_raw"], "model.cecoc.sensor_suelo": [], "model.cecoc.sensor_roca_s982_s983": [], "model.cecoc.sensor": ["model.cecoc.sensor_roca_s980", "model.cecoc.sensor_roca_s981", "model.cecoc.sensor_roca_s982_s983", "model.cecoc.sensor_suelo"], "model.cecoc.sensor_roca_s981": [], "model.cecoc.produccion_roca": ["source.cecoc.produccion_parada.production_stops_folloline_raw"], "model.cecoc.produccion": ["model.cecoc.produccion_roca", "model.cecoc.produccion_suelo"], "model.cecoc.categoria_comentario_parada_roca": ["source.cecoc.produccion_parada.categorias_paradas_folloline_raw"], "model.cecoc.categoria_comentario_parada_suelo": ["source.cecoc.produccion_parada.categorias_paradas_quito_raw"], "model.cecoc.dia_produccion_suelo": ["source.cecoc.produccion_parada.production_days_quito_raw"], "model.cecoc.dia_produccion_roca": ["source.cecoc.produccion_parada.production_days_folloline_raw"], "model.cecoc.parada": ["model.cecoc.parada_roca", "model.cecoc.parada_suelo"], "model.cecoc.dia_produccion": ["model.cecoc.dia_produccion_roca", "model.cecoc.dia_produccion_suelo"], "model.cecoc.categoria_comentario_parada": ["model.cecoc.categoria_comentario_parada_roca", "model.cecoc.categoria_comentario_parada_suelo"], "model.cecoc.parada_roca": ["source.cecoc.produccion_parada.production_stops_folloline_details_raw", "source.cecoc.produccion_parada.production_stops_folloline_raw"], "model.cecoc.produccion_suelo": ["source.cecoc.produccion_parada.production_stops_quito_raw"], "model.cecoc.parada_suelo": ["source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_details_raw", "source.cecoc.produccion_parada.production_stops_quito_raw"], "model.cecoc.pbi_consumo_medio_grasa_cola": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_contadores": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_velocidad_media_rotacion": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_consumo_medio_energia_electrica": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_fer": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_tiempo_avance_tiempo_medio_colocacion": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_empuje_medio": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_consumo_medio_ep2": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_sensor_clave": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_tiempo_avance_tiempo_medio_excavacion": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_tiempo_avance_numero_anillos": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_consumo_medio_bentonita": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_velocidad_avance_medio": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_penetracion_media": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_par_medio": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_consumo_medio_polimeros": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_parametro_avance_fir": ["model.cecoc.geologia", "model.cecoc.litologia"], "model.cecoc.pbi_consumo_medio_agua": ["model.cecoc.geologia", "model.cecoc.litologia"], "test.cecoc.unique_litologia_litologia_key.c3bdbb7024": ["model.cecoc.litologia"], "test.cecoc.not_null_litologia_litologia_key.d0195ccac6": ["model.cecoc.litologia"], "test.cecoc.unique_categoria_comentario_parada_categoria_comentario_parada_key.302cd19c63": ["model.cecoc.categoria_comentario_parada"], "test.cecoc.not_null_categoria_comentario_parada_categoria_comentario_parada_key.29fb82a45d": ["model.cecoc.categoria_comentario_parada"], "test.cecoc.unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key.48cbe4d90d": ["model.cecoc.categoria_comentario_parada_suelo"], "test.cecoc.not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key.465d45a3cf": ["model.cecoc.categoria_comentario_parada_suelo"], "test.cecoc.unique_dia_produccion_roca_dia_produccion_key.579b5680fe": ["model.cecoc.dia_produccion_roca"], "test.cecoc.not_null_dia_produccion_roca_dia_produccion_key.efe74bdc65": ["model.cecoc.dia_produccion_roca"], "test.cecoc.unique_dia_produccion_suelo_dia_produccion_key.70a66c66c1": ["model.cecoc.dia_produccion_suelo"], "test.cecoc.not_null_dia_produccion_suelo_dia_produccion_key.a92f734a88": ["model.cecoc.dia_produccion_suelo"], "test.cecoc.unique_sensor_sensor_diccionario_key.fa2f73b59e": ["model.cecoc.sensor"], "test.cecoc.not_null_sensor_sensor_diccionario_key.7b11870c80": ["model.cecoc.sensor"], "test.cecoc.unique_sensor_diccionario_sensor_diccionario_key.da7e8a0309": ["model.cecoc.sensor_diccionario"], "test.cecoc.not_null_sensor_diccionario_sensor_diccionario_key.5d16d432f1": ["model.cecoc.sensor_diccionario"], "test.cecoc.unique_tuneladora_tuneladora_key.7fc259c2a6": ["model.cecoc.tuneladora"], "test.cecoc.not_null_tuneladora_tuneladora_key.dd4de0f951": ["model.cecoc.tuneladora"], "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita.5fe9dcbcbd": ["source.cecoc.geologia.geologia_quito_raw"], "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__.e4ac1cce43": ["source.cecoc.geologia.geologia_quito_raw"], "source.cecoc.geologia.geologia_quito_raw": [], "source.cecoc.geologia.geologia_colores_raw": [], "source.cecoc.produccion_parada.categorias_paradas_quito_raw": [], "source.cecoc.produccion_parada.categorias_paradas_folloline_raw": [], "source.cecoc.produccion_parada.production_days_quito_raw": [], "source.cecoc.produccion_parada.production_days_folloline_raw": [], "source.cecoc.produccion_parada.production_stops_quito_raw": [], "source.cecoc.produccion_parada.production_stops_quito_details_raw": [], "source.cecoc.produccion_parada.production_stops_folloline_raw": [], "source.cecoc.produccion_parada.production_stops_folloline_details_raw": [], "source.cecoc.sensor.dict_sensores_raw": [], "source.cecoc.sensor.s1018_quito_ringresult_raw": [], "source.cecoc.sensor.s1019_quito_ringresult_raw": [], "source.cecoc.sensor.s1022_1_quito_ringresult_raw": [], "source.cecoc.sensor.s1022_2_quito_ringresult_raw": [], "source.cecoc.sensor.s1022_3_quito_ringresult_raw": [], "source.cecoc.sensor.fl980_folloline_ringresult_raw": [], "source.cecoc.sensor.fl980_1_folloline_ringresult_raw": [], "source.cecoc.sensor.fl980_2_folloline_ringresult_raw": [], "source.cecoc.sensor.fl980_3_folloline_ringresult_raw": [], "source.cecoc.sensor.fl_981_folloline_ringresult_raw": [], "source.cecoc.sensor.fl981_1_folloline_ringresult_raw": [], "source.cecoc.sensor.fl981_3_folloline_ringresult_raw": [], "source.cecoc.sensor.fl_982_folloline_ringresult_raw": [], "source.cecoc.sensor.fl983_folloline_ringresult_raw": [], "source.cecoc.tuneladora.tuneladoras_metadata_raw": []}, "child_map": {"model.cecoc.tuneladora": ["test.cecoc.not_null_tuneladora_tuneladora_key.dd4de0f951", "test.cecoc.unique_tuneladora_tuneladora_key.7fc259c2a6"], "model.cecoc.geologia_suelo": ["model.cecoc.geologia"], "model.cecoc.litologia": ["model.cecoc.pbi_consumo_medio_agua", "model.cecoc.pbi_consumo_medio_bentonita", "model.cecoc.pbi_consumo_medio_energia_electrica", "model.cecoc.pbi_consumo_medio_ep2", "model.cecoc.pbi_consumo_medio_grasa_cola", "model.cecoc.pbi_consumo_medio_polimeros", "model.cecoc.pbi_contadores", "model.cecoc.pbi_parametro_avance_empuje_medio", "model.cecoc.pbi_parametro_avance_fer", "model.cecoc.pbi_parametro_avance_fir", "model.cecoc.pbi_parametro_avance_par_medio", "model.cecoc.pbi_parametro_avance_penetracion_media", "model.cecoc.pbi_parametro_avance_sensor_clave", "model.cecoc.pbi_parametro_avance_velocidad_avance_medio", "model.cecoc.pbi_parametro_avance_velocidad_media_rotacion", "model.cecoc.pbi_tiempo_avance_numero_anillos", "model.cecoc.pbi_tiempo_avance_tiempo_medio_colocacion", "model.cecoc.pbi_tiempo_avance_tiempo_medio_excavacion", "test.cecoc.not_null_litologia_litologia_key.d0195ccac6", "test.cecoc.unique_litologia_litologia_key.c3bdbb7024"], "model.cecoc.geologia": ["model.cecoc.pbi_consumo_medio_agua", "model.cecoc.pbi_consumo_medio_bentonita", "model.cecoc.pbi_consumo_medio_energia_electrica", "model.cecoc.pbi_consumo_medio_ep2", "model.cecoc.pbi_consumo_medio_grasa_cola", "model.cecoc.pbi_consumo_medio_polimeros", "model.cecoc.pbi_contadores", "model.cecoc.pbi_parametro_avance_empuje_medio", "model.cecoc.pbi_parametro_avance_fer", "model.cecoc.pbi_parametro_avance_fir", "model.cecoc.pbi_parametro_avance_par_medio", "model.cecoc.pbi_parametro_avance_penetracion_media", "model.cecoc.pbi_parametro_avance_sensor_clave", "model.cecoc.pbi_parametro_avance_velocidad_avance_medio", "model.cecoc.pbi_parametro_avance_velocidad_media_rotacion", "model.cecoc.pbi_tiempo_avance_numero_anillos", "model.cecoc.pbi_tiempo_avance_tiempo_medio_colocacion", "model.cecoc.pbi_tiempo_avance_tiempo_medio_excavacion"], "model.cecoc.sensor_roca_s980": ["model.cecoc.sensor"], "model.cecoc.sensor_diccionario": ["test.cecoc.not_null_sensor_diccionario_sensor_diccionario_key.5d16d432f1", "test.cecoc.unique_sensor_diccionario_sensor_diccionario_key.da7e8a0309"], "model.cecoc.sensor_suelo": ["model.cecoc.sensor"], "model.cecoc.sensor_roca_s982_s983": ["model.cecoc.sensor"], "model.cecoc.sensor": ["test.cecoc.not_null_sensor_sensor_diccionario_key.7b11870c80", "test.cecoc.unique_sensor_sensor_diccionario_key.fa2f73b59e"], "model.cecoc.sensor_roca_s981": ["model.cecoc.sensor"], "model.cecoc.produccion_roca": ["model.cecoc.produccion"], "model.cecoc.produccion": [], "model.cecoc.categoria_comentario_parada_roca": ["model.cecoc.categoria_comentario_parada"], "model.cecoc.categoria_comentario_parada_suelo": ["model.cecoc.categoria_comentario_parada", "test.cecoc.not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key.465d45a3cf", "test.cecoc.unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key.48cbe4d90d"], "model.cecoc.dia_produccion_suelo": ["model.cecoc.dia_produccion", "test.cecoc.not_null_dia_produccion_suelo_dia_produccion_key.a92f734a88", "test.cecoc.unique_dia_produccion_suelo_dia_produccion_key.70a66c66c1"], "model.cecoc.dia_produccion_roca": ["model.cecoc.dia_produccion", "test.cecoc.not_null_dia_produccion_roca_dia_produccion_key.efe74bdc65", "test.cecoc.unique_dia_produccion_roca_dia_produccion_key.579b5680fe"], "model.cecoc.parada": [], "model.cecoc.dia_produccion": [], "model.cecoc.categoria_comentario_parada": ["test.cecoc.not_null_categoria_comentario_parada_categoria_comentario_parada_key.29fb82a45d", "test.cecoc.unique_categoria_comentario_parada_categoria_comentario_parada_key.302cd19c63"], "model.cecoc.parada_roca": ["model.cecoc.parada"], "model.cecoc.produccion_suelo": ["model.cecoc.produccion"], "model.cecoc.parada_suelo": ["model.cecoc.parada"], "model.cecoc.pbi_consumo_medio_grasa_cola": [], "model.cecoc.pbi_contadores": [], "model.cecoc.pbi_parametro_avance_velocidad_media_rotacion": [], "model.cecoc.pbi_consumo_medio_energia_electrica": [], "model.cecoc.pbi_parametro_avance_fer": [], "model.cecoc.pbi_tiempo_avance_tiempo_medio_colocacion": [], "model.cecoc.pbi_parametro_avance_empuje_medio": [], "model.cecoc.pbi_consumo_medio_ep2": [], "model.cecoc.pbi_parametro_avance_sensor_clave": [], "model.cecoc.pbi_tiempo_avance_tiempo_medio_excavacion": [], "model.cecoc.pbi_tiempo_avance_numero_anillos": [], "model.cecoc.pbi_consumo_medio_bentonita": [], "model.cecoc.pbi_parametro_avance_velocidad_avance_medio": [], "model.cecoc.pbi_parametro_avance_penetracion_media": [], "model.cecoc.pbi_parametro_avance_par_medio": [], "model.cecoc.pbi_consumo_medio_polimeros": [], "model.cecoc.pbi_parametro_avance_fir": [], "model.cecoc.pbi_consumo_medio_agua": [], "test.cecoc.unique_litologia_litologia_key.c3bdbb7024": [], "test.cecoc.not_null_litologia_litologia_key.d0195ccac6": [], "test.cecoc.unique_categoria_comentario_parada_categoria_comentario_parada_key.302cd19c63": [], "test.cecoc.not_null_categoria_comentario_parada_categoria_comentario_parada_key.29fb82a45d": [], "test.cecoc.unique_categoria_comentario_parada_suelo_categoria_comentario_parada_key.48cbe4d90d": [], "test.cecoc.not_null_categoria_comentario_parada_suelo_categoria_comentario_parada_key.465d45a3cf": [], "test.cecoc.unique_dia_produccion_roca_dia_produccion_key.579b5680fe": [], "test.cecoc.not_null_dia_produccion_roca_dia_produccion_key.efe74bdc65": [], "test.cecoc.unique_dia_produccion_suelo_dia_produccion_key.70a66c66c1": [], "test.cecoc.not_null_dia_produccion_suelo_dia_produccion_key.a92f734a88": [], "test.cecoc.unique_sensor_sensor_diccionario_key.fa2f73b59e": [], "test.cecoc.not_null_sensor_sensor_diccionario_key.7b11870c80": [], "test.cecoc.unique_sensor_diccionario_sensor_diccionario_key.da7e8a0309": [], "test.cecoc.not_null_sensor_diccionario_sensor_diccionario_key.5d16d432f1": [], "test.cecoc.unique_tuneladora_tuneladora_key.7fc259c2a6": [], "test.cecoc.not_null_tuneladora_tuneladora_key.dd4de0f951": [], "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita.5fe9dcbcbd": [], "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__.e4ac1cce43": [], "source.cecoc.geologia.geologia_quito_raw": ["model.cecoc.geologia_suelo", "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Principal___Arenas__Limos__Gravas__Turbas__Tobas__Arcillas__Rellleno__Andesita.5fe9dcbcbd", "test.cecoc.source_accepted_values_geologia_geologia_quito_raw__Litologia_Secundaria___Limos__Arcillas__Gravas__Grava_y_bloque__.e4ac1cce43"], "source.cecoc.geologia.geologia_colores_raw": ["model.cecoc.litologia"], "source.cecoc.produccion_parada.categorias_paradas_quito_raw": ["model.cecoc.categoria_comentario_parada_suelo"], "source.cecoc.produccion_parada.categorias_paradas_folloline_raw": ["model.cecoc.categoria_comentario_parada_roca"], "source.cecoc.produccion_parada.production_days_quito_raw": ["model.cecoc.dia_produccion_suelo"], "source.cecoc.produccion_parada.production_days_folloline_raw": ["model.cecoc.dia_produccion_roca"], "source.cecoc.produccion_parada.production_stops_quito_raw": ["model.cecoc.parada_suelo", "model.cecoc.produccion_suelo"], "source.cecoc.produccion_parada.production_stops_quito_details_raw": ["model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo", "model.cecoc.parada_suelo"], "source.cecoc.produccion_parada.production_stops_folloline_raw": ["model.cecoc.parada_roca", "model.cecoc.produccion_roca"], "source.cecoc.produccion_parada.production_stops_folloline_details_raw": ["model.cecoc.parada_roca"], "source.cecoc.sensor.dict_sensores_raw": ["model.cecoc.sensor_diccionario"], "source.cecoc.sensor.s1018_quito_ringresult_raw": [], "source.cecoc.sensor.s1019_quito_ringresult_raw": [], "source.cecoc.sensor.s1022_1_quito_ringresult_raw": [], "source.cecoc.sensor.s1022_2_quito_ringresult_raw": [], "source.cecoc.sensor.s1022_3_quito_ringresult_raw": [], "source.cecoc.sensor.fl980_folloline_ringresult_raw": [], "source.cecoc.sensor.fl980_1_folloline_ringresult_raw": [], "source.cecoc.sensor.fl980_2_folloline_ringresult_raw": [], "source.cecoc.sensor.fl980_3_folloline_ringresult_raw": [], "source.cecoc.sensor.fl_981_folloline_ringresult_raw": [], "source.cecoc.sensor.fl981_1_folloline_ringresult_raw": [], "source.cecoc.sensor.fl981_3_folloline_ringresult_raw": [], "source.cecoc.sensor.fl_982_folloline_ringresult_raw": [], "source.cecoc.sensor.fl983_folloline_ringresult_raw": [], "source.cecoc.tuneladora.tuneladoras_metadata_raw": ["model.cecoc.tuneladora"]}}